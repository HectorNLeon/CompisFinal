
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDErightEQUALSleftANDORAND ARC CHAR CIRCLE CLEAR COLON COLOR COMMA C_CHAR C_FLOAT C_INT C_STRING DIVIDE DO ELSE EQUALS FLOAT FROM GREATER_THAN ID IF INT IS_EQUAL LBRACKET LESS_THAN LINE LPAREN LSBRACKET MAIN MINUS MODULE MULTIPLY NOT_EQUAL OR PENDOWN PENUP PLUS POINT PROGRAM RBRACKET READ RETURN RPAREN RSBRACKET SEMICOLON SIZE THEN TO VAR VOID WHILE WRITE\n    PROGRAMA : PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables\n    VA : VARS addGlobalVars\n       | empty\n    FU : FUNC FU\n       | empty\n    \n    VARS : emptyVars VAR VARSA\n    VARSA : TIPO COLON ID addVarLista ARREGLO VARSB\n    VARSB : COMMA ID addVarLista ARREGLO VARSB\n          | SEMICOLON VARSA\n          | SEMICOLON\n    \n    TIPO : INT \n         | FLOAT \n         | CHAR\n    \n    ARREGLO :  LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2\n            | empty\n    ARREGLO2 : LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen\n            | addArreglo\n    \n    ARREGLOCALL : LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2\n            | empty\n    ARREGLOC2 : LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir\n            | empty\n    \n    TIPOFUNC : INT \n             | FLOAT \n             | CHAR \n             | VOID \n    \n    FUNC :  MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB\n    FUNCSB : VARS addVarsFunc BLOQUE endFunc\n           | addVarsFunc BLOQUE endFunc\n    \n    PARAMS : emptyVars PARAMSL\n           | empty\n    PARAMSL : TIPO ID addVarLista\n            | PARAMSL COMMA TIPO ID addVarLista\n    \n    BLOQUE : LBRACKET BLOQUEA\n           | LBRACKET RBRACKET\n    BLOQUEA : ESTATUTO BLOQUEA \n            | ESTATUTO RBRACKET\n    \n    ESTATUTO : ASIGNACION \n             | LLAMADA \n             | RETORNO \n             | LECTURA \n             | ESCRITURA \n             | DECISION \n             | REPETICION \n             | FUNCESP\n    \n    ASIGNACION : ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON\n    \n    LLAMADA : ID pushEra LPAREN LLAMADAS\n            | ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada\n    LLAMADAS : EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada\n             | EXPRESION addParam COMMA LLAMADAS \n    \n    RETORNO : RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON \n    \n    LECTURA : READ LPAREN LECTURAS\n    LECTURAS : ID pushPilaOp COMMA popRead LECTURAS\n             | ID pushPilaOp RPAREN SEMICOLON popRead\n    \n    ESCRITURA : WRITE LPAREN ESCRITURAA\n    ESCRITURAA : C_STRING pushConstString COMMA popWrite ESCRITURAA\n               | C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd\n               | EXPRESION COMMA popWrite ESCRITURAA\n               | EXPRESION RPAREN SEMICOLON popWrite addWriteEnd\n    \n    DECISION : IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO\n    SINO : ELSE rellenarFalso BLOQUE rellenarSalida\n         | empty rellenarSalida\n    \n    REPETICION : COND \n               | NOCOND\n    COND : WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile\n    NOCOND : FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom\n    \n    EXPRESION : EXP popCondition\n              | EXP GREATER_THAN pushCondition EXPRESION\n              | EXP LESS_THAN pushCondition EXPRESION\n              | EXP NOT_EQUAL pushCondition EXPRESION \n              | EXP AND pushCondition EXPRESION \n              | EXP OR pushCondition EXPRESION \n              | EXP IS_EQUAL pushCondition EXPRESION \n    \n    EXP : TERMINO popPlusMinus\n        | TERMINO popPlusMinus PLUS pushPlusMinus EXP \n        | TERMINO popPlusMinus MINUS pushPlusMinus EXP \n    \n    TERMINO : FACTOR popMultDiv\n            | FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO \n            | FACTOR popMultDiv DIVIDE pushMultDiv TERMINO \n    \n    FACTOR : LPAREN pushParen EXPRESION RPAREN popParen\n           | VARCTE\n           | LLAMADAMOD\n    \n    LLAMADAMOD : ID pushEra LPAREN pushParen LLAMADAMODS\n               | ID pushEra LPAREN pushParen RPAREN pushGosub\n    LLAMADAMODS : EXPRESION addParam RPAREN popParen verifyParams pushGosub\n                | EXPRESION addParam COMMA LLAMADAMODS\n    \n    VARCTE : ID pushPilaOp ARREGLOCALL\n           | C_INT pushConstInt\n           | C_FLOAT pushConstFloat\n           | C_CHAR pushConstChar\n    \n    FUNCESP : FLINE \n            | FPOINT \n            | FCIRCLE \n            | FARC \n            | FPENUP \n            | FPENDOWN \n            | FCOLOR \n            | FSIZE \n            | FCLEAR\n    \n    FLINE : LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON \n    \n    FILLCOLOR : COMMA C_STRING pushConstString hasColor\n            |  empty\n    \n    FPOINT : POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON \n    \n    FCIRCLE : CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON \n    \n    FARC : ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON \n    \n    FPENUP : PENUP LPAREN RPAREN popPenup SEMICOLON \n    \n    FPENDOWN : PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON \n    \n    FCOLOR : COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON \n    \n    FSIZE : SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON \n    \n    FCLEAR : CLEAR LPAREN RPAREN popClear SEMICOLON \n    \n    empty :\n    addProgram :  emptyVars : addVarLista : addFunc : addParamsFunc : addVarsFunc : endFunc : addGlobalVars : popCondition : popIgual : popMultDiv : popPlusMinus :  pushEqual :  pushMultDiv :  pushPlusMinus :  pushCondition : pushConstInt : pushConstFloat : pushConstChar : pushConstString :   pushPilaOp : pushParen : popParen :  addParam :  verifyParams : pushGosub : pushGosubLlamada :  pushEra : popWrite : addWriteEnd : popRead : hasColor :popLine : popPoint : popCircle : popArc : popPenup : popPendown : popColor : popSize : popClear : popReturn : pushGotoF :rellenarFalso :rellenarSalida :pushSalto :rellenarWhile :pushFromId :pushVC :pushVF :rellenaFrom :rellenaMain : pushDim :addArreglo :verifyDim :calculateDir :printTables : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,37,45,46,47,91,92,],[0,-167,-1,-33,-34,-35,-36,]),'ID':([2,18,19,20,21,22,25,26,27,30,38,43,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,74,86,88,90,91,92,95,96,97,98,101,102,103,104,106,108,118,126,128,131,133,137,149,155,161,162,163,168,169,170,171,172,173,176,180,181,186,188,190,198,199,200,201,204,205,207,210,211,212,213,214,215,216,218,220,221,230,234,240,241,242,243,245,248,250,251,258,259,260,261,262,263,277,291,292,293,294,295,296,297,299,301,303,306,309,312,314,315,316,318,319,321,323,324,327,329,331,332,334,338,341,345,346,347,351,],[3,29,-22,-23,-24,-25,-11,-12,-13,33,57,-132,-33,-34,57,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,100,112,113,121,-35,-36,121,132,121,121,121,121,121,121,121,121,-132,-132,121,-51,-54,121,195,121,-123,121,-46,-126,-126,-126,-126,-126,-126,-139,121,121,121,121,121,-125,-125,-124,-124,-132,121,-137,121,121,121,121,121,121,-141,-139,121,-139,-105,-109,121,121,121,121,121,-47,121,-50,132,-141,121,-139,-57,-140,-132,-49,-52,-53,-55,-140,-58,-110,121,-102,-103,-107,121,-45,-137,-56,-59,-155,-157,-99,-106,-108,121,-48,-61,-64,-104,-132,-155,121,-60,-161,-65,]),'SEMICOLON':([3,4,33,36,42,44,110,113,116,117,119,120,121,122,123,124,127,130,143,147,151,152,153,154,156,158,159,160,164,166,167,177,187,191,196,197,203,209,217,219,226,228,232,239,244,246,247,249,252,253,254,255,256,257,267,268,270,272,273,274,278,279,280,281,282,283,284,285,286,288,289,290,300,304,305,307,310,313,322,326,328,335,336,337,339,340,343,344,348,349,352,353,354,355,356,],[-111,5,-113,-110,89,-15,148,-113,-122,-121,-80,-81,-131,-127,-128,-129,-19,-119,-147,-151,-110,-133,-73,-76,-110,-87,-88,-89,207,-152,-66,221,230,234,89,-163,-86,251,259,261,-144,-145,-149,-164,-133,-120,-133,-135,-67,-68,-69,-70,-71,-72,-143,301,303,-148,306,-150,-14,-17,-74,-75,-77,-78,-79,-82,-136,312,-165,314,321,-146,323,324,-83,-166,334,-133,-110,-163,-135,-85,-18,-21,-164,-136,-133,-84,-16,-133,-165,-166,-20,]),'MODULE':([5,6,7,8,11,14,23,46,47,87,89,91,92,114,192,236,238,275,276,308,],[-110,13,-118,-3,13,-2,-6,-33,-34,-7,-10,-35,-36,-9,-26,-117,-8,-117,-28,-27,]),'MAIN':([5,6,7,8,10,11,12,14,17,23,46,47,87,89,91,92,114,192,236,238,275,276,308,],[-110,-110,-118,-3,16,-110,-5,-2,-4,-6,-33,-34,-7,-10,-35,-36,-9,-26,-117,-8,-117,-28,-27,]),'VAR':([5,9,148,],[-112,15,-112,]),'INT':([13,15,35,40,89,111,],[19,25,-112,25,25,25,]),'FLOAT':([13,15,35,40,89,111,],[20,26,-112,26,26,26,]),'CHAR':([13,15,35,40,89,111,],[21,27,-112,27,27,27,]),'VOID':([13,],[22,]),'LPAREN':([16,29,32,43,57,58,59,60,61,73,75,76,77,78,79,80,81,82,83,90,94,95,97,98,99,101,102,103,104,106,108,118,121,126,128,137,155,157,161,162,168,169,170,171,172,173,176,180,181,186,188,190,198,199,200,201,204,205,210,211,212,213,214,215,218,220,240,241,242,243,245,250,260,277,299,309,327,338,345,],[28,-114,35,-132,-138,95,96,97,98,-156,101,102,103,104,105,106,107,108,109,118,128,118,118,118,137,118,118,118,118,118,118,-132,-138,-132,118,118,118,204,-123,118,-126,-126,-126,-126,-126,-126,-139,118,118,118,118,118,-125,-125,-124,-124,-132,118,118,118,118,118,118,118,-139,118,118,118,118,118,118,118,118,-132,118,118,118,-132,118,]),'LBRACKET':([23,31,34,87,89,114,148,193,194,235,238,264,298,317,330,342,],[-6,-162,38,-7,-10,-9,-116,-116,38,38,-8,38,38,-154,38,38,]),'COLON':([24,25,26,27,],[30,-11,-12,-13,]),'RPAREN':([28,35,39,41,84,85,105,109,112,116,117,119,120,121,122,123,124,127,128,129,130,132,134,135,136,140,141,145,150,153,154,156,158,159,160,165,167,174,175,179,182,184,185,189,195,202,203,204,208,225,227,229,231,233,237,244,245,247,252,253,254,255,256,257,269,271,280,281,282,283,284,285,286,287,289,302,310,311,313,326,328,336,337,339,340,344,349,353,354,355,356,],[31,-110,-115,-30,110,-29,143,147,-113,-122,-121,-80,-81,-131,-127,-128,-129,-19,164,166,-119,-131,-130,177,178,-110,-110,-130,-31,-73,-76,-110,-87,-88,-89,-134,-66,217,219,223,226,-101,228,232,-113,244,-86,-132,249,267,-130,-110,272,274,-32,-133,286,-133,-67,-68,-69,-70,-71,-72,-142,304,-74,-75,-77,-78,-79,-82,-136,-134,-165,-100,-83,326,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'LSBRACKET':([33,36,57,93,113,121,151,152,156,197,239,247,289,313,328,],[-113,43,-131,126,-113,-131,43,-133,126,-163,277,-133,-165,-166,338,]),'COMMA':([33,36,42,44,85,112,113,116,117,119,120,121,122,123,124,127,130,132,134,135,139,140,141,142,144,146,150,151,152,153,154,156,158,159,160,165,167,174,175,195,196,197,203,208,229,237,239,244,247,252,253,254,255,256,257,278,279,280,281,282,283,284,285,286,287,289,310,311,313,326,328,335,336,337,339,340,343,344,348,349,352,353,354,355,356,],[-113,-110,88,-15,111,-113,-113,-122,-121,-80,-81,-131,-127,-128,-129,-19,-119,-131,-130,176,181,183,183,186,188,190,-31,-110,-133,-73,-76,-110,-87,-88,-89,-134,-66,216,218,-113,88,-163,-86,250,183,-32,-164,-133,-133,-67,-68,-69,-70,-71,-72,-14,-17,-74,-75,-77,-78,-79,-82,-136,-134,-165,-83,327,-166,-133,-110,-163,-135,-85,-18,-21,-164,-136,-133,-84,-16,-133,-165,-166,-20,]),'RBRACKET':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[47,-33,-34,92,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'RETURN':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[58,-33,-34,58,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'READ':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[59,-33,-34,59,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'WRITE':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[60,-33,-34,60,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'IF':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[61,-33,-34,61,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'WHILE':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[73,-33,-34,73,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'FROM':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[74,-33,-34,74,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'LINE':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[75,-33,-34,75,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'POINT':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[76,-33,-34,76,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'CIRCLE':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[77,-33,-34,77,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'ARC':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[78,-33,-34,78,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'PENUP':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[79,-33,-34,79,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'PENDOWN':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[80,-33,-34,80,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'COLOR':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[81,-33,-34,81,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'SIZE':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[82,-33,-34,82,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'CLEAR':([38,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,69,70,71,72,91,92,131,133,163,207,221,230,234,248,251,259,261,262,263,291,292,293,294,295,296,297,301,303,306,312,314,315,316,318,319,321,323,324,329,331,332,334,341,346,347,351,],[83,-33,-34,83,-37,-38,-39,-40,-41,-42,-43,-44,-62,-63,-90,-91,-92,-93,-94,-95,-96,-97,-98,-35,-36,-51,-54,-46,-137,-139,-105,-109,-47,-50,-141,-139,-57,-140,-49,-52,-53,-55,-140,-58,-110,-102,-103,-107,-45,-137,-56,-59,-155,-157,-99,-106,-108,-48,-61,-64,-104,-155,-60,-161,-65,]),'C_INT':([43,90,95,97,98,101,102,103,104,106,108,118,126,128,137,155,161,162,168,169,170,171,172,173,176,180,181,186,188,190,198,199,200,201,204,205,210,211,212,213,214,215,218,220,240,241,242,243,245,250,260,277,299,309,327,338,345,],[-132,122,122,122,122,122,122,122,122,122,122,-132,-132,122,122,122,-123,122,-126,-126,-126,-126,-126,-126,-139,122,122,122,122,122,-125,-125,-124,-124,-132,122,122,122,122,122,122,122,-139,122,122,122,122,122,122,122,122,-132,122,122,122,-132,122,]),'C_FLOAT':([43,90,95,97,98,101,102,103,104,106,108,118,126,128,137,155,161,162,168,169,170,171,172,173,176,180,181,186,188,190,198,199,200,201,204,205,210,211,212,213,214,215,218,220,240,241,242,243,245,250,260,277,299,309,327,338,345,],[-132,123,123,123,123,123,123,123,123,123,123,-132,-132,123,123,123,-123,123,-126,-126,-126,-126,-126,-126,-139,123,123,123,123,123,-125,-125,-124,-124,-132,123,123,123,123,123,123,123,-139,123,123,123,123,123,123,123,123,-132,123,123,123,-132,123,]),'C_CHAR':([43,90,95,97,98,101,102,103,104,106,108,118,126,128,137,155,161,162,168,169,170,171,172,173,176,180,181,186,188,190,198,199,200,201,204,205,210,211,212,213,214,215,218,220,240,241,242,243,245,250,260,277,299,309,327,338,345,],[-132,124,124,124,124,124,124,124,124,124,124,-132,-132,124,124,124,-123,124,-126,-126,-126,-126,-126,-126,-139,124,124,124,124,124,-125,-125,-124,-124,-132,124,124,124,124,124,124,124,-139,124,124,124,124,124,124,124,124,-132,124,124,124,-132,124,]),'ELSE':([46,47,91,92,297,],[-33,-34,-35,-36,317,]),'EQUALS':([57,93,100,125,127,138,247,289,313,328,339,340,353,354,355,356,],[-131,-110,-158,161,-19,180,-133,-165,-166,-110,-18,-21,-133,-165,-166,-20,]),'C_STRING':([97,107,176,183,218,220,260,],[134,145,-139,227,-139,134,134,]),'RSBRACKET':([115,116,117,119,120,121,122,123,124,127,153,154,156,158,159,160,203,206,244,247,280,281,282,283,284,285,286,289,310,313,325,326,328,336,337,339,340,344,349,350,353,354,355,356,],[152,-122,-121,-80,-81,-131,-127,-128,-129,-19,-73,-76,-110,-87,-88,-89,-86,247,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,335,-133,-110,-135,-85,-18,-21,-136,-84,353,-133,-165,-166,-20,]),'PLUS':([116,117,119,120,121,122,123,124,127,153,154,156,158,159,160,203,244,247,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,198,-76,-110,-87,-88,-89,-86,-133,-133,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'MINUS':([116,117,119,120,121,122,123,124,127,153,154,156,158,159,160,203,244,247,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,199,-76,-110,-87,-88,-89,-86,-133,-133,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'GREATER_THAN':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,168,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'LESS_THAN':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,169,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'NOT_EQUAL':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,170,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'AND':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,171,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'OR':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,172,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'IS_EQUAL':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,203,244,247,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,173,-73,-76,-110,-87,-88,-89,-86,-133,-133,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'TO':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,167,203,224,244,247,252,253,254,255,256,257,266,280,281,282,283,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,-119,-73,-76,-110,-87,-88,-89,-66,-86,-159,-133,-133,-67,-68,-69,-70,-71,-72,299,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'DO':([116,117,119,120,121,122,123,124,127,130,153,154,156,158,159,160,167,203,223,244,247,252,253,254,255,256,257,265,280,281,282,283,284,285,286,289,310,313,320,326,328,333,336,337,339,340,344,349,353,354,355,356,],[-122,-121,-80,-81,-131,-127,-128,-129,-19,-119,-73,-76,-110,-87,-88,-89,-66,-86,-153,-133,-133,-67,-68,-69,-70,-71,-72,298,-74,-75,-77,-78,-79,-82,-136,-165,-83,-166,-160,-133,-110,342,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'MULTIPLY':([117,119,120,121,122,123,124,127,154,156,158,159,160,203,244,247,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-121,-80,-81,-131,-127,-128,-129,-19,200,-110,-87,-88,-89,-86,-133,-133,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'DIVIDE':([117,119,120,121,122,123,124,127,154,156,158,159,160,203,244,247,284,285,286,289,310,313,326,328,336,337,339,340,344,349,353,354,355,356,],[-121,-80,-81,-131,-127,-128,-129,-19,201,-110,-87,-88,-89,-86,-133,-133,-79,-82,-136,-165,-83,-166,-133,-110,-135,-85,-18,-21,-136,-84,-133,-165,-166,-20,]),'THEN':([178,222,],[-153,264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'addProgram':([3,],[4,]),'VA':([5,],[6,]),'VARS':([5,148,],[7,193,]),'empty':([5,6,11,35,36,93,140,141,151,156,229,297,328,],[8,12,12,41,44,127,184,184,44,127,184,318,340,]),'emptyVars':([5,35,148,],[9,40,9,]),'FU':([6,11,],[10,17,]),'FUNC':([6,11,],[11,11,]),'addGlobalVars':([7,],[14,]),'TIPOFUNC':([13,],[18,]),'VARSA':([15,89,],[23,114,]),'TIPO':([15,40,89,111,],[24,86,24,149,]),'addFunc':([29,],[32,]),'rellenaMain':([31,],[34,]),'addVarLista':([33,112,113,195,],[36,150,151,237,]),'BLOQUE':([34,194,235,264,298,330,342,],[37,236,275,297,319,341,347,]),'PARAMS':([35,],[39,]),'ARREGLO':([36,151,],[42,196,]),'printTables':([37,],[45,]),'BLOQUEA':([38,48,],[46,91,]),'ESTATUTO':([38,48,],[48,48,]),'ASIGNACION':([38,48,],[49,49,]),'LLAMADA':([38,48,],[50,50,]),'RETORNO':([38,48,],[51,51,]),'LECTURA':([38,48,],[52,52,]),'ESCRITURA':([38,48,],[53,53,]),'DECISION':([38,48,],[54,54,]),'REPETICION':([38,48,],[55,55,]),'FUNCESP':([38,48,],[56,56,]),'COND':([38,48,],[62,62,]),'NOCOND':([38,48,],[63,63,]),'FLINE':([38,48,],[64,64,]),'FPOINT':([38,48,],[65,65,]),'FCIRCLE':([38,48,],[66,66,]),'FARC':([38,48,],[67,67,]),'FPENUP':([38,48,],[68,68,]),'FPENDOWN':([38,48,],[69,69,]),'FCOLOR':([38,48,],[70,70,]),'FSIZE':([38,48,],[71,71,]),'FCLEAR':([38,48,],[72,72,]),'addParamsFunc':([39,],[84,]),'PARAMSL':([40,],[85,]),'VARSB':([42,196,],[87,238,]),'pushParen':([43,118,126,204,277,338,],[90,155,162,245,309,345,]),'pushPilaOp':([57,121,132,],[93,156,174,]),'pushEra':([57,121,],[94,157,]),'pushSalto':([73,],[99,]),'EXP':([90,95,97,98,101,102,103,104,106,108,128,137,155,162,180,181,186,188,190,205,210,211,212,213,214,215,220,240,241,245,250,260,299,309,327,345,],[115,130,130,130,130,130,130,130,130,130,130,130,130,206,130,130,130,130,130,130,130,130,130,130,130,130,130,280,281,130,130,130,130,325,130,350,]),'TERMINO':([90,95,97,98,101,102,103,104,106,108,128,137,155,162,180,181,186,188,190,205,210,211,212,213,214,215,220,240,241,242,243,245,250,260,299,309,327,345,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,282,283,116,116,116,116,116,116,116,]),'FACTOR':([90,95,97,98,101,102,103,104,106,108,128,137,155,162,180,181,186,188,190,205,210,211,212,213,214,215,220,240,241,242,243,245,250,260,299,309,327,345,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'VARCTE':([90,95,97,98,101,102,103,104,106,108,128,137,155,162,180,181,186,188,190,205,210,211,212,213,214,215,220,240,241,242,243,245,250,260,299,309,327,345,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'LLAMADAMOD':([90,95,97,98,101,102,103,104,106,108,128,137,155,162,180,181,186,188,190,205,210,211,212,213,214,215,220,240,241,242,243,245,250,260,299,309,327,345,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ARREGLOCALL':([93,156,],[125,203,]),'EXPRESION':([95,97,98,101,102,103,104,106,108,128,137,155,180,181,186,188,190,205,210,211,212,213,214,215,220,245,250,260,299,327,],[129,135,136,139,140,141,142,144,146,165,179,202,224,225,229,231,233,246,252,253,254,255,256,257,135,287,165,135,320,287,]),'LECTURAS':([96,258,],[131,292,]),'ESCRITURAA':([97,220,260,],[133,262,294,]),'pushFromId':([100,],[138,]),'popPlusMinus':([116,],[153,]),'popMultDiv':([117,],[154,]),'pushConstInt':([122,],[158,]),'pushConstFloat':([123,],[159,]),'pushConstChar':([124,],[160,]),'LLAMADAS':([128,250,],[163,291,]),'popCondition':([130,],[167,]),'pushConstString':([134,145,227,],[175,189,269,]),'FILLCOLOR':([140,141,229,],[182,185,271,]),'popPenup':([143,],[187,]),'popClear':([147,],[191,]),'FUNCSB':([148,],[192,]),'addVarsFunc':([148,193,],[194,235,]),'popParen':([152,244,247,326,348,353,],[197,284,289,336,352,354,]),'pushEqual':([161,],[205,]),'addParam':([165,287,],[208,311,]),'popReturn':([166,],[209,]),'pushCondition':([168,169,170,171,172,173,],[210,211,212,213,214,215,]),'popWrite':([176,218,221,261,],[220,260,263,295,]),'pushGotoF':([178,223,],[222,265,]),'pushDim':([197,335,],[239,343,]),'pushPlusMinus':([198,199,],[240,241,]),'pushMultDiv':([200,201,],[242,243,]),'pushGosubLlamada':([207,314,],[248,329,]),'popRead':([216,259,],[258,293,]),'pushVC':([224,],[266,]),'popPoint':([226,],[268,]),'popCircle':([228,],[270,]),'popColor':([232,],[273,]),'endFunc':([236,275,],[276,308,]),'ARREGLO2':([239,],[278,]),'addArreglo':([239,343,],[279,348,]),'LLAMADAMODS':([245,327,],[285,337,]),'popIgual':([246,],[288,]),'verifyParams':([249,336,],[290,344,]),'addWriteEnd':([263,295,],[296,315,]),'popLine':([267,],[300,]),'hasColor':([269,],[302,]),'popPendown':([272,],[305,]),'popSize':([274,],[307,]),'pushGosub':([286,344,],[310,349,]),'verifyDim':([289,354,],[313,355,]),'SINO':([297,],[316,]),'popArc':([304,],[322,]),'calculateDir':([313,355,],[328,356,]),'rellenarFalso':([317,],[330,]),'rellenarSalida':([318,341,],[331,346,]),'rellenarWhile':([319,],[332,]),'pushVF':([320,],[333,]),'ARREGLOC2':([328,],[339,]),'rellenaFrom':([347,],[351,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables','PROGRAMA',12,'p_PROGRAMA','parser.py',66),
  ('VA -> VARS addGlobalVars','VA',2,'p_PROGRAMA','parser.py',67),
  ('VA -> empty','VA',1,'p_PROGRAMA','parser.py',68),
  ('FU -> FUNC FU','FU',2,'p_PROGRAMA','parser.py',69),
  ('FU -> empty','FU',1,'p_PROGRAMA','parser.py',70),
  ('VARS -> emptyVars VAR VARSA','VARS',3,'p_VARS','parser.py',75),
  ('VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB','VARSA',6,'p_VARS','parser.py',76),
  ('VARSB -> COMMA ID addVarLista ARREGLO VARSB','VARSB',5,'p_VARS','parser.py',77),
  ('VARSB -> SEMICOLON VARSA','VARSB',2,'p_VARS','parser.py',78),
  ('VARSB -> SEMICOLON','VARSB',1,'p_VARS','parser.py',79),
  ('TIPO -> INT','TIPO',1,'p_TIPO','parser.py',84),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','parser.py',85),
  ('TIPO -> CHAR','TIPO',1,'p_TIPO','parser.py',86),
  ('ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2','ARREGLO',7,'p_ARREGLO','parser.py',93),
  ('ARREGLO -> empty','ARREGLO',1,'p_ARREGLO','parser.py',94),
  ('ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen','ARREGLO2',7,'p_ARREGLO','parser.py',95),
  ('ARREGLO2 -> addArreglo','ARREGLO2',1,'p_ARREGLO','parser.py',96),
  ('ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2','ARREGLOCALL',8,'p_ARREGLOCALL','parser.py',101),
  ('ARREGLOCALL -> empty','ARREGLOCALL',1,'p_ARREGLOCALL','parser.py',102),
  ('ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir','ARREGLOC2',7,'p_ARREGLOCALL','parser.py',103),
  ('ARREGLOC2 -> empty','ARREGLOC2',1,'p_ARREGLOCALL','parser.py',104),
  ('TIPOFUNC -> INT','TIPOFUNC',1,'p_TIPOFUNC','parser.py',109),
  ('TIPOFUNC -> FLOAT','TIPOFUNC',1,'p_TIPOFUNC','parser.py',110),
  ('TIPOFUNC -> CHAR','TIPOFUNC',1,'p_TIPOFUNC','parser.py',111),
  ('TIPOFUNC -> VOID','TIPOFUNC',1,'p_TIPOFUNC','parser.py',112),
  ('FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB','FUNC',10,'p_FUNC','parser.py',119),
  ('FUNCSB -> VARS addVarsFunc BLOQUE endFunc','FUNCSB',4,'p_FUNC','parser.py',120),
  ('FUNCSB -> addVarsFunc BLOQUE endFunc','FUNCSB',3,'p_FUNC','parser.py',121),
  ('PARAMS -> emptyVars PARAMSL','PARAMS',2,'p_PARAMS','parser.py',126),
  ('PARAMS -> empty','PARAMS',1,'p_PARAMS','parser.py',127),
  ('PARAMSL -> TIPO ID addVarLista','PARAMSL',3,'p_PARAMS','parser.py',128),
  ('PARAMSL -> PARAMSL COMMA TIPO ID addVarLista','PARAMSL',5,'p_PARAMS','parser.py',129),
  ('BLOQUE -> LBRACKET BLOQUEA','BLOQUE',2,'p_BLOQUE','parser.py',134),
  ('BLOQUE -> LBRACKET RBRACKET','BLOQUE',2,'p_BLOQUE','parser.py',135),
  ('BLOQUEA -> ESTATUTO BLOQUEA','BLOQUEA',2,'p_BLOQUE','parser.py',136),
  ('BLOQUEA -> ESTATUTO RBRACKET','BLOQUEA',2,'p_BLOQUE','parser.py',137),
  ('ESTATUTO -> ASIGNACION','ESTATUTO',1,'p_ESTATUTO','parser.py',142),
  ('ESTATUTO -> LLAMADA','ESTATUTO',1,'p_ESTATUTO','parser.py',143),
  ('ESTATUTO -> RETORNO','ESTATUTO',1,'p_ESTATUTO','parser.py',144),
  ('ESTATUTO -> LECTURA','ESTATUTO',1,'p_ESTATUTO','parser.py',145),
  ('ESTATUTO -> ESCRITURA','ESTATUTO',1,'p_ESTATUTO','parser.py',146),
  ('ESTATUTO -> DECISION','ESTATUTO',1,'p_ESTATUTO','parser.py',147),
  ('ESTATUTO -> REPETICION','ESTATUTO',1,'p_ESTATUTO','parser.py',148),
  ('ESTATUTO -> FUNCESP','ESTATUTO',1,'p_ESTATUTO','parser.py',149),
  ('ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON','ASIGNACION',8,'p_ASIGNACION','parser.py',154),
  ('LLAMADA -> ID pushEra LPAREN LLAMADAS','LLAMADA',4,'p_LLAMDA','parser.py',159),
  ('LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada','LLAMADA',6,'p_LLAMDA','parser.py',160),
  ('LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada','LLAMADAS',6,'p_LLAMDA','parser.py',161),
  ('LLAMADAS -> EXPRESION addParam COMMA LLAMADAS','LLAMADAS',4,'p_LLAMDA','parser.py',162),
  ('RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON','RETORNO',6,'p_RETORNO','parser.py',167),
  ('LECTURA -> READ LPAREN LECTURAS','LECTURA',3,'p_LECTURA','parser.py',172),
  ('LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS','LECTURAS',5,'p_LECTURA','parser.py',173),
  ('LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead','LECTURAS',5,'p_LECTURA','parser.py',174),
  ('ESCRITURA -> WRITE LPAREN ESCRITURAA','ESCRITURA',3,'p_ESCRITURA','parser.py',179),
  ('ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA','ESCRITURAA',5,'p_ESCRITURA','parser.py',180),
  ('ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd','ESCRITURAA',6,'p_ESCRITURA','parser.py',181),
  ('ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA','ESCRITURAA',4,'p_ESCRITURA','parser.py',182),
  ('ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd','ESCRITURAA',5,'p_ESCRITURA','parser.py',183),
  ('DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO','DECISION',8,'p_DECISION','parser.py',188),
  ('SINO -> ELSE rellenarFalso BLOQUE rellenarSalida','SINO',4,'p_DECISION','parser.py',189),
  ('SINO -> empty rellenarSalida','SINO',2,'p_DECISION','parser.py',190),
  ('REPETICION -> COND','REPETICION',1,'p_REPETICION','parser.py',194),
  ('REPETICION -> NOCOND','REPETICION',1,'p_REPETICION','parser.py',195),
  ('COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile','COND',9,'p_REPETICION','parser.py',196),
  ('NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom','NOCOND',12,'p_REPETICION','parser.py',197),
  ('EXPRESION -> EXP popCondition','EXPRESION',2,'p_EXPRESION','parser.py',202),
  ('EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',203),
  ('EXPRESION -> EXP LESS_THAN pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',204),
  ('EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',205),
  ('EXPRESION -> EXP AND pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',206),
  ('EXPRESION -> EXP OR pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',207),
  ('EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION','EXPRESION',4,'p_EXPRESION','parser.py',208),
  ('EXP -> TERMINO popPlusMinus','EXP',2,'p_EXP','parser.py',213),
  ('EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP','EXP',5,'p_EXP','parser.py',214),
  ('EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP','EXP',5,'p_EXP','parser.py',215),
  ('TERMINO -> FACTOR popMultDiv','TERMINO',2,'p_TERMINO','parser.py',220),
  ('TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO','TERMINO',5,'p_TERMINO','parser.py',221),
  ('TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO','TERMINO',5,'p_TERMINO','parser.py',222),
  ('FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen','FACTOR',5,'p_FACTOR','parser.py',227),
  ('FACTOR -> VARCTE','FACTOR',1,'p_FACTOR','parser.py',228),
  ('FACTOR -> LLAMADAMOD','FACTOR',1,'p_FACTOR','parser.py',229),
  ('LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS','LLAMADAMOD',5,'p_LLAMADAMOD','parser.py',234),
  ('LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub','LLAMADAMOD',6,'p_LLAMADAMOD','parser.py',235),
  ('LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub','LLAMADAMODS',6,'p_LLAMADAMOD','parser.py',236),
  ('LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS','LLAMADAMODS',4,'p_LLAMADAMOD','parser.py',237),
  ('VARCTE -> ID pushPilaOp ARREGLOCALL','VARCTE',3,'p_VARCTE','parser.py',242),
  ('VARCTE -> C_INT pushConstInt','VARCTE',2,'p_VARCTE','parser.py',243),
  ('VARCTE -> C_FLOAT pushConstFloat','VARCTE',2,'p_VARCTE','parser.py',244),
  ('VARCTE -> C_CHAR pushConstChar','VARCTE',2,'p_VARCTE','parser.py',245),
  ('FUNCESP -> FLINE','FUNCESP',1,'p_FUNCESP','parser.py',250),
  ('FUNCESP -> FPOINT','FUNCESP',1,'p_FUNCESP','parser.py',251),
  ('FUNCESP -> FCIRCLE','FUNCESP',1,'p_FUNCESP','parser.py',252),
  ('FUNCESP -> FARC','FUNCESP',1,'p_FUNCESP','parser.py',253),
  ('FUNCESP -> FPENUP','FUNCESP',1,'p_FUNCESP','parser.py',254),
  ('FUNCESP -> FPENDOWN','FUNCESP',1,'p_FUNCESP','parser.py',255),
  ('FUNCESP -> FCOLOR','FUNCESP',1,'p_FUNCESP','parser.py',256),
  ('FUNCESP -> FSIZE','FUNCESP',1,'p_FUNCESP','parser.py',257),
  ('FUNCESP -> FCLEAR','FUNCESP',1,'p_FUNCESP','parser.py',258),
  ('FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON','FLINE',8,'p_FLINE','parser.py',263),
  ('FILLCOLOR -> COMMA C_STRING pushConstString hasColor','FILLCOLOR',4,'p_FILLCOLOR','parser.py',268),
  ('FILLCOLOR -> empty','FILLCOLOR',1,'p_FILLCOLOR','parser.py',269),
  ('FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON','FPOINT',7,'p_FPOINT','parser.py',274),
  ('FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON','FCIRCLE',7,'p_FCIRCLE','parser.py',279),
  ('FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON','FARC',9,'p_FARC','parser.py',284),
  ('FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON','FPENUP',5,'p_FPENUP','parser.py',289),
  ('FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON','FPENDOWN',8,'p_FPENDOWN','parser.py',294),
  ('FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON','FCOLOR',7,'p_FCOLOR','parser.py',299),
  ('FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON','FSIZE',8,'p_FSIZE','parser.py',304),
  ('FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON','FCLEAR',5,'p_FCLEAR','parser.py',309),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',314),
  ('addProgram -> <empty>','addProgram',0,'p_addProgram','parser.py',317),
  ('emptyVars -> <empty>','emptyVars',0,'p_emptyVars','parser.py',324),
  ('addVarLista -> <empty>','addVarLista',0,'p_addVarLista','parser.py',329),
  ('addFunc -> <empty>','addFunc',0,'p_addFunc','parser.py',337),
  ('addParamsFunc -> <empty>','addParamsFunc',0,'p_addParamsFunc','parser.py',357),
  ('addVarsFunc -> <empty>','addVarsFunc',0,'p_addVarsFunc','parser.py',377),
  ('endFunc -> <empty>','endFunc',0,'p_endFunc','parser.py',396),
  ('addGlobalVars -> <empty>','addGlobalVars',0,'p_addGlobalVars','parser.py',420),
  ('popCondition -> <empty>','popCondition',0,'p_popCondition','parser.py',437),
  ('popIgual -> <empty>','popIgual',0,'p_popIgual','parser.py',467),
  ('popMultDiv -> <empty>','popMultDiv',0,'p_popMultDiv','parser.py',497),
  ('popPlusMinus -> <empty>','popPlusMinus',0,'p_popPlusMinus','parser.py',527),
  ('pushEqual -> <empty>','pushEqual',0,'p_pushEqual','parser.py',557),
  ('pushMultDiv -> <empty>','pushMultDiv',0,'p_pushMultDiv','parser.py',562),
  ('pushPlusMinus -> <empty>','pushPlusMinus',0,'p_pushPlusMinus','parser.py',567),
  ('pushCondition -> <empty>','pushCondition',0,'p_pushCondition','parser.py',572),
  ('pushConstInt -> <empty>','pushConstInt',0,'p_pushConstInt','parser.py',577),
  ('pushConstFloat -> <empty>','pushConstFloat',0,'p_pushConstFloat','parser.py',593),
  ('pushConstChar -> <empty>','pushConstChar',0,'p_pushConstChar','parser.py',609),
  ('pushConstString -> <empty>','pushConstString',0,'p_pushConstString','parser.py',625),
  ('pushPilaOp -> <empty>','pushPilaOp',0,'p_pushPilaOp','parser.py',641),
  ('pushParen -> <empty>','pushParen',0,'p_pushParen','parser.py',671),
  ('popParen -> <empty>','popParen',0,'p_popParen','parser.py',676),
  ('addParam -> <empty>','addParam',0,'p_addParam','parser.py',685),
  ('verifyParams -> <empty>','verifyParams',0,'p_verifyParams','parser.py',694),
  ('pushGosub -> <empty>','pushGosub',0,'p_pushGosub','parser.py',715),
  ('pushGosubLlamada -> <empty>','pushGosubLlamada',0,'p_pushGosubLlamada','parser.py',738),
  ('pushEra -> <empty>','pushEra',0,'p_pushEra','parser.py',750),
  ('popWrite -> <empty>','popWrite',0,'p_popWrite','parser.py',758),
  ('addWriteEnd -> <empty>','addWriteEnd',0,'p_addWriteEnd','parser.py',766),
  ('popRead -> <empty>','popRead',0,'p_popRead','parser.py',771),
  ('hasColor -> <empty>','hasColor',0,'p_hasColor','parser.py',779),
  ('popLine -> <empty>','popLine',0,'p_popLine','parser.py',784),
  ('popPoint -> <empty>','popPoint',0,'p_popPoint','parser.py',797),
  ('popCircle -> <empty>','popCircle',0,'p_popCircle','parser.py',814),
  ('popArc -> <empty>','popArc',0,'p_popArc','parser.py',830),
  ('popPenup -> <empty>','popPenup',0,'p_popPenup','parser.py',848),
  ('popPendown -> <empty>','popPendown',0,'p_popPendown','parser.py',853),
  ('popColor -> <empty>','popColor',0,'p_popColor','parser.py',866),
  ('popSize -> <empty>','popSize',0,'p_popSize','parser.py',875),
  ('popClear -> <empty>','popClear',0,'p_popClear','parser.py',888),
  ('popReturn -> <empty>','popReturn',0,'p_popReturn','parser.py',893),
  ('pushGotoF -> <empty>','pushGotoF',0,'p_pushGotoF','parser.py',910),
  ('rellenarFalso -> <empty>','rellenarFalso',0,'p_rellenarFalso','parser.py',925),
  ('rellenarSalida -> <empty>','rellenarSalida',0,'p_rellenaSalida','parser.py',935),
  ('pushSalto -> <empty>','pushSalto',0,'p_pushSalto','parser.py',943),
  ('rellenarWhile -> <empty>','rellenarWhile',0,'p_rellenarWhile','parser.py',950),
  ('pushFromId -> <empty>','pushFromId',0,'p_pushFromId','parser.py',960),
  ('pushVC -> <empty>','pushVC',0,'p_pushVC','parser.py',990),
  ('pushVF -> <empty>','pushVF',0,'p_pushVF','parser.py',1011),
  ('rellenaFrom -> <empty>','rellenaFrom',0,'p_rellenaFrom','parser.py',1036),
  ('rellenaMain -> <empty>','rellenaMain',0,'p_rellenaMain','parser.py',1061),
  ('pushDim -> <empty>','pushDim',0,'p_pushDim','parser.py',1066),
  ('addArreglo -> <empty>','addArreglo',0,'p_addArreglo','parser.py',1075),
  ('verifyDim -> <empty>','verifyDim',0,'p_verifyDim','parser.py',1087),
  ('calculateDir -> <empty>','calculateDir',0,'p_calculateDir','parser.py',1115),
  ('printTables -> <empty>','printTables',0,'p_printTables','parser.py',1179),
]
