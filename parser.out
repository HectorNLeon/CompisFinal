Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables
Rule 2     VA -> VARS addGlobalVars
Rule 3     VA -> empty
Rule 4     FU -> FUNC FU
Rule 5     FU -> empty
Rule 6     VARS -> emptyVars VAR VARSA
Rule 7     VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB
Rule 8     VARSB -> COMMA ID addVarLista ARREGLO VARSB
Rule 9     VARSB -> SEMICOLON VARSA
Rule 10    VARSB -> SEMICOLON
Rule 11    TIPO -> INT
Rule 12    TIPO -> FLOAT
Rule 13    TIPO -> CHAR
Rule 14    ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2
Rule 15    ARREGLO -> empty
Rule 16    ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen
Rule 17    ARREGLO2 -> addArreglo
Rule 18    ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2
Rule 19    ARREGLOCALL -> empty
Rule 20    ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir
Rule 21    ARREGLOC2 -> empty
Rule 22    TIPOFUNC -> INT
Rule 23    TIPOFUNC -> FLOAT
Rule 24    TIPOFUNC -> CHAR
Rule 25    TIPOFUNC -> VOID
Rule 26    FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
Rule 27    FUNCSB -> VARS addVarsFunc BLOQUE endFunc
Rule 28    FUNCSB -> addVarsFunc BLOQUE endFunc
Rule 29    PARAMS -> emptyVars PARAMSL
Rule 30    PARAMS -> empty
Rule 31    PARAMSL -> TIPO ID addVarLista
Rule 32    PARAMSL -> PARAMSL COMMA TIPO ID addVarLista
Rule 33    BLOQUE -> LBRACKET BLOQUEA
Rule 34    BLOQUE -> LBRACKET RBRACKET
Rule 35    BLOQUEA -> ESTATUTO BLOQUEA
Rule 36    BLOQUEA -> ESTATUTO RBRACKET
Rule 37    ESTATUTO -> ASIGNACION
Rule 38    ESTATUTO -> LLAMADA
Rule 39    ESTATUTO -> RETORNO
Rule 40    ESTATUTO -> LECTURA
Rule 41    ESTATUTO -> ESCRITURA
Rule 42    ESTATUTO -> DECISION
Rule 43    ESTATUTO -> REPETICION
Rule 44    ESTATUTO -> FUNCESP
Rule 45    ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON
Rule 46    LLAMADA -> ID pushEra LPAREN LLAMADAS
Rule 47    LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada
Rule 48    LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada
Rule 49    LLAMADAS -> EXPRESION addParam COMMA LLAMADAS
Rule 50    RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON
Rule 51    LECTURA -> READ LPAREN LECTURAS
Rule 52    LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS
Rule 53    LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead
Rule 54    ESCRITURA -> WRITE LPAREN ESCRITURAA
Rule 55    ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA
Rule 56    ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd
Rule 57    ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA
Rule 58    ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd
Rule 59    DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO
Rule 60    SINO -> ELSE rellenarFalso BLOQUE rellenarSalida
Rule 61    SINO -> empty rellenarSalida
Rule 62    REPETICION -> COND
Rule 63    REPETICION -> NOCOND
Rule 64    COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile
Rule 65    NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
Rule 66    EXPRESION -> EXP popCondition
Rule 67    EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION
Rule 68    EXPRESION -> EXP LESS_THAN pushCondition EXPRESION
Rule 69    EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION
Rule 70    EXPRESION -> EXP AND pushCondition EXPRESION
Rule 71    EXPRESION -> EXP OR pushCondition EXPRESION
Rule 72    EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION
Rule 73    EXP -> TERMINO popPlusMinus
Rule 74    EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP
Rule 75    EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP
Rule 76    TERMINO -> FACTOR popMultDiv
Rule 77    TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
Rule 78    TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
Rule 79    FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen
Rule 80    FACTOR -> VARCTE
Rule 81    FACTOR -> LLAMADAMOD
Rule 82    LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS
Rule 83    LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub
Rule 84    LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub
Rule 85    LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS
Rule 86    VARCTE -> ID pushPilaOp ARREGLOCALL
Rule 87    VARCTE -> C_INT pushConstInt
Rule 88    VARCTE -> C_FLOAT pushConstFloat
Rule 89    VARCTE -> C_CHAR pushConstChar
Rule 90    FUNCESP -> FLINE
Rule 91    FUNCESP -> FPOINT
Rule 92    FUNCESP -> FCIRCLE
Rule 93    FUNCESP -> FARC
Rule 94    FUNCESP -> FPENUP
Rule 95    FUNCESP -> FPENDOWN
Rule 96    FUNCESP -> FCOLOR
Rule 97    FUNCESP -> FSIZE
Rule 98    FUNCESP -> FCLEAR
Rule 99    FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON
Rule 100   FILLCOLOR -> COMMA C_STRING pushConstString hasColor
Rule 101   FILLCOLOR -> empty
Rule 102   FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON
Rule 103   FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON
Rule 104   FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON
Rule 105   FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON
Rule 106   FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON
Rule 107   FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON
Rule 108   FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON
Rule 109   FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON
Rule 110   empty -> <empty>
Rule 111   addProgram -> <empty>
Rule 112   emptyVars -> <empty>
Rule 113   addVarLista -> <empty>
Rule 114   addFunc -> <empty>
Rule 115   addParamsFunc -> <empty>
Rule 116   addVarsFunc -> <empty>
Rule 117   endFunc -> <empty>
Rule 118   addGlobalVars -> <empty>
Rule 119   popCondition -> <empty>
Rule 120   popIgual -> <empty>
Rule 121   popMultDiv -> <empty>
Rule 122   popPlusMinus -> <empty>
Rule 123   pushEqual -> <empty>
Rule 124   pushMultDiv -> <empty>
Rule 125   pushPlusMinus -> <empty>
Rule 126   pushCondition -> <empty>
Rule 127   pushConstInt -> <empty>
Rule 128   pushConstFloat -> <empty>
Rule 129   pushConstChar -> <empty>
Rule 130   pushConstString -> <empty>
Rule 131   pushPilaOp -> <empty>
Rule 132   pushParen -> <empty>
Rule 133   popParen -> <empty>
Rule 134   addParam -> <empty>
Rule 135   verifyParams -> <empty>
Rule 136   pushGosub -> <empty>
Rule 137   pushGosubLlamada -> <empty>
Rule 138   pushEra -> <empty>
Rule 139   popWrite -> <empty>
Rule 140   addWriteEnd -> <empty>
Rule 141   popRead -> <empty>
Rule 142   hasColor -> <empty>
Rule 143   popLine -> <empty>
Rule 144   popPoint -> <empty>
Rule 145   popCircle -> <empty>
Rule 146   popArc -> <empty>
Rule 147   popPenup -> <empty>
Rule 148   popPendown -> <empty>
Rule 149   popColor -> <empty>
Rule 150   popSize -> <empty>
Rule 151   popClear -> <empty>
Rule 152   popReturn -> <empty>
Rule 153   pushGotoF -> <empty>
Rule 154   rellenarFalso -> <empty>
Rule 155   rellenarSalida -> <empty>
Rule 156   pushSalto -> <empty>
Rule 157   rellenarWhile -> <empty>
Rule 158   pushFromId -> <empty>
Rule 159   pushVC -> <empty>
Rule 160   pushVF -> <empty>
Rule 161   rellenaFrom -> <empty>
Rule 162   rellenaMain -> <empty>
Rule 163   pushDim -> <empty>
Rule 164   addArreglo -> <empty>
Rule 165   verifyDim -> <empty>
Rule 166   calculateDir -> <empty>
Rule 167   printTables -> <empty>

Terminals, with rules where they appear

AND                  : 70
ARC                  : 104
CHAR                 : 13 24
CIRCLE               : 103
CLEAR                : 109
COLON                : 7
COLOR                : 107
COMMA                : 8 32 49 52 55 57 85 99 100 104 106 108
C_CHAR               : 89
C_FLOAT              : 88
C_INT                : 87
C_STRING             : 55 56 100 107
DIVIDE               : 78
DO                   : 64 65
ELSE                 : 60
EQUALS               : 45 65
FLOAT                : 12 23
FROM                 : 65
GREATER_THAN         : 67
ID                   : 1 7 8 26 31 32 45 46 47 52 53 65 82 83 86
IF                   : 59
INT                  : 11 22
IS_EQUAL             : 72
LBRACKET             : 33 34
LESS_THAN            : 68
LINE                 : 99
LPAREN               : 1 26 46 47 50 51 54 59 64 79 82 83 99 102 103 104 105 106 107 108 109
LSBRACKET            : 14 16 18 20
MAIN                 : 1
MINUS                : 75
MODULE               : 26
MULTIPLY             : 77
NOT_EQUAL            : 69
OR                   : 71
PENDOWN              : 106
PENUP                : 105
PLUS                 : 74
POINT                : 102
PROGRAM              : 1
RBRACKET             : 34 36
READ                 : 51
RETURN               : 50
RPAREN               : 1 26 47 48 50 53 56 58 59 64 79 83 84 99 102 103 104 105 106 107 108 109
RSBRACKET            : 14 16 18 20
SEMICOLON            : 1 9 10 26 45 47 48 50 53 56 58 99 102 103 104 105 106 107 108 109
SIZE                 : 108
THEN                 : 59
TO                   : 65
VAR                  : 6
VOID                 : 25
WHILE                : 64
WRITE                : 54
error                : 

Nonterminals, with rules where they appear

ARREGLO              : 7 8
ARREGLO2             : 14
ARREGLOC2            : 18
ARREGLOCALL          : 45 86
ASIGNACION           : 37
BLOQUE               : 1 27 28 59 60 64 65
BLOQUEA              : 33 35
COND                 : 62
DECISION             : 42
ESCRITURA            : 41
ESCRITURAA           : 54 55 57
ESTATUTO             : 35 36
EXP                  : 14 16 18 20 66 67 68 69 70 71 72 74 75
EXPRESION            : 45 48 49 50 57 58 59 64 65 65 67 68 69 70 71 72 79 84 85 99 99 102 103 104 104 106 106 108 108
FACTOR               : 76 77 78
FARC                 : 93
FCIRCLE              : 92
FCLEAR               : 98
FCOLOR               : 96
FILLCOLOR            : 102 103 104
FLINE                : 90
FPENDOWN             : 95
FPENUP               : 94
FPOINT               : 91
FSIZE                : 97
FU                   : 1 4
FUNC                 : 4
FUNCESP              : 44
FUNCSB               : 26
LECTURA              : 40
LECTURAS             : 51 52
LLAMADA              : 38
LLAMADAMOD           : 81
LLAMADAMODS          : 82 85
LLAMADAS             : 46 49
NOCOND               : 63
PARAMS               : 26
PARAMSL              : 29 32
PROGRAMA             : 0
REPETICION           : 43
RETORNO              : 39
SINO                 : 59
TERMINO              : 73 74 75 77 78
TIPO                 : 7 31 32
TIPOFUNC             : 26
VA                   : 1
VARCTE               : 80
VARS                 : 2 27
VARSA                : 6 9
VARSB                : 7 8
addArreglo           : 16 17
addFunc              : 26
addGlobalVars        : 2
addParam             : 48 49 84 85
addParamsFunc        : 26
addProgram           : 1
addVarLista          : 7 8 31 32
addVarsFunc          : 27 28
addWriteEnd          : 56 58
calculateDir         : 18 20
empty                : 3 5 15 19 21 30 61 101
emptyVars            : 6 29
endFunc              : 27 28
hasColor             : 100
popArc               : 104
popCircle            : 103
popClear             : 109
popColor             : 107
popCondition         : 66
popIgual             : 45
popLine              : 99
popMultDiv           : 76 77 78
popParen             : 14 16 18 20 79 84
popPendown           : 106
popPenup             : 105
popPlusMinus         : 73 74 75
popPoint             : 102
popRead              : 52 53
popReturn            : 50
popSize              : 108
popWrite             : 55 56 57 58
printTables          : 1
pushCondition        : 67 68 69 70 71 72
pushConstChar        : 89
pushConstFloat       : 88
pushConstInt         : 87
pushConstString      : 55 56 100 107
pushDim              : 14 16
pushEqual            : 45
pushEra              : 46 47 82 83
pushFromId           : 65
pushGosub            : 83 84
pushGosubLlamada     : 47 48
pushGotoF            : 59 64
pushMultDiv          : 77 78
pushParen            : 14 16 18 20 79 82 83
pushPilaOp           : 45 52 53 86
pushPlusMinus        : 74 75
pushSalto            : 64
pushVC               : 65
pushVF               : 65
rellenaFrom          : 65
rellenaMain          : 1
rellenarFalso        : 60
rellenarSalida       : 60 61
rellenarWhile        : 64
verifyDim            : 18 20
verifyParams         : 48 84

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables
    (111) addProgram -> .

    SEMICOLON       reduce using rule 111 (addProgram -> .)

    addProgram                     shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID addProgram . SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON . VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables
    (2) VA -> . VARS addGlobalVars
    (3) VA -> . empty
    (6) VARS -> . emptyVars VAR VARSA
    (110) empty -> .
    (112) emptyVars -> .

    MODULE          reduce using rule 110 (empty -> .)
    MAIN            reduce using rule 110 (empty -> .)
    VAR             reduce using rule 112 (emptyVars -> .)

    VA                             shift and go to state 6
    VARS                           shift and go to state 7
    empty                          shift and go to state 8
    emptyVars                      shift and go to state 9

state 6

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA . FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables
    (4) FU -> . FUNC FU
    (5) FU -> . empty
    (26) FUNC -> . MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
    (110) empty -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 110 (empty -> .)

    FU                             shift and go to state 10
    FUNC                           shift and go to state 11
    empty                          shift and go to state 12

state 7

    (2) VA -> VARS . addGlobalVars
    (118) addGlobalVars -> .

    MODULE          reduce using rule 118 (addGlobalVars -> .)
    MAIN            reduce using rule 118 (addGlobalVars -> .)

    addGlobalVars                  shift and go to state 14

state 8

    (3) VA -> empty .

    MODULE          reduce using rule 3 (VA -> empty .)
    MAIN            reduce using rule 3 (VA -> empty .)


state 9

    (6) VARS -> emptyVars . VAR VARSA

    VAR             shift and go to state 15


state 10

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU . MAIN LPAREN RPAREN rellenaMain BLOQUE printTables

    MAIN            shift and go to state 16


state 11

    (4) FU -> FUNC . FU
    (4) FU -> . FUNC FU
    (5) FU -> . empty
    (26) FUNC -> . MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
    (110) empty -> .

    MODULE          shift and go to state 13
    MAIN            reduce using rule 110 (empty -> .)

    FUNC                           shift and go to state 11
    FU                             shift and go to state 17
    empty                          shift and go to state 12

state 12

    (5) FU -> empty .

    MAIN            reduce using rule 5 (FU -> empty .)


state 13

    (26) FUNC -> MODULE . TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
    (22) TIPOFUNC -> . INT
    (23) TIPOFUNC -> . FLOAT
    (24) TIPOFUNC -> . CHAR
    (25) TIPOFUNC -> . VOID

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21
    VOID            shift and go to state 22

    TIPOFUNC                       shift and go to state 18

state 14

    (2) VA -> VARS addGlobalVars .

    MODULE          reduce using rule 2 (VA -> VARS addGlobalVars .)
    MAIN            reduce using rule 2 (VA -> VARS addGlobalVars .)


state 15

    (6) VARS -> emptyVars VAR . VARSA
    (7) VARSA -> . TIPO COLON ID addVarLista ARREGLO VARSB
    (11) TIPO -> . INT
    (12) TIPO -> . FLOAT
    (13) TIPO -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    VARSA                          shift and go to state 23
    TIPO                           shift and go to state 24

state 16

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN . LPAREN RPAREN rellenaMain BLOQUE printTables

    LPAREN          shift and go to state 28


state 17

    (4) FU -> FUNC FU .

    MAIN            reduce using rule 4 (FU -> FUNC FU .)


state 18

    (26) FUNC -> MODULE TIPOFUNC . ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB

    ID              shift and go to state 29


state 19

    (22) TIPOFUNC -> INT .

    ID              reduce using rule 22 (TIPOFUNC -> INT .)


state 20

    (23) TIPOFUNC -> FLOAT .

    ID              reduce using rule 23 (TIPOFUNC -> FLOAT .)


state 21

    (24) TIPOFUNC -> CHAR .

    ID              reduce using rule 24 (TIPOFUNC -> CHAR .)


state 22

    (25) TIPOFUNC -> VOID .

    ID              reduce using rule 25 (TIPOFUNC -> VOID .)


state 23

    (6) VARS -> emptyVars VAR VARSA .

    MODULE          reduce using rule 6 (VARS -> emptyVars VAR VARSA .)
    MAIN            reduce using rule 6 (VARS -> emptyVars VAR VARSA .)
    LBRACKET        reduce using rule 6 (VARS -> emptyVars VAR VARSA .)


state 24

    (7) VARSA -> TIPO . COLON ID addVarLista ARREGLO VARSB

    COLON           shift and go to state 30


state 25

    (11) TIPO -> INT .

    COLON           reduce using rule 11 (TIPO -> INT .)
    ID              reduce using rule 11 (TIPO -> INT .)


state 26

    (12) TIPO -> FLOAT .

    COLON           reduce using rule 12 (TIPO -> FLOAT .)
    ID              reduce using rule 12 (TIPO -> FLOAT .)


state 27

    (13) TIPO -> CHAR .

    COLON           reduce using rule 13 (TIPO -> CHAR .)
    ID              reduce using rule 13 (TIPO -> CHAR .)


state 28

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN . RPAREN rellenaMain BLOQUE printTables

    RPAREN          shift and go to state 31


state 29

    (26) FUNC -> MODULE TIPOFUNC ID . addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
    (114) addFunc -> .

    LPAREN          reduce using rule 114 (addFunc -> .)

    addFunc                        shift and go to state 32

state 30

    (7) VARSA -> TIPO COLON . ID addVarLista ARREGLO VARSB

    ID              shift and go to state 33


state 31

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN . rellenaMain BLOQUE printTables
    (162) rellenaMain -> .

    LBRACKET        reduce using rule 162 (rellenaMain -> .)

    rellenaMain                    shift and go to state 34

state 32

    (26) FUNC -> MODULE TIPOFUNC ID addFunc . LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB

    LPAREN          shift and go to state 35


state 33

    (7) VARSA -> TIPO COLON ID . addVarLista ARREGLO VARSB
    (113) addVarLista -> .

    LSBRACKET       reduce using rule 113 (addVarLista -> .)
    COMMA           reduce using rule 113 (addVarLista -> .)
    SEMICOLON       reduce using rule 113 (addVarLista -> .)

    addVarLista                    shift and go to state 36

state 34

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain . BLOQUE printTables
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 37

state 35

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN . PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB
    (29) PARAMS -> . emptyVars PARAMSL
    (30) PARAMS -> . empty
    (112) emptyVars -> .
    (110) empty -> .

    INT             reduce using rule 112 (emptyVars -> .)
    FLOAT           reduce using rule 112 (emptyVars -> .)
    CHAR            reduce using rule 112 (emptyVars -> .)
    RPAREN          reduce using rule 110 (empty -> .)

    PARAMS                         shift and go to state 39
    emptyVars                      shift and go to state 40
    empty                          shift and go to state 41

state 36

    (7) VARSA -> TIPO COLON ID addVarLista . ARREGLO VARSB
    (14) ARREGLO -> . LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2
    (15) ARREGLO -> . empty
    (110) empty -> .

    LSBRACKET       shift and go to state 43
    COMMA           reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)

    ARREGLO                        shift and go to state 42
    empty                          shift and go to state 44

state 37

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE . printTables
    (167) printTables -> .

    $end            reduce using rule 167 (printTables -> .)

    printTables                    shift and go to state 45

state 38

    (33) BLOQUE -> LBRACKET . BLOQUEA
    (34) BLOQUE -> LBRACKET . RBRACKET
    (35) BLOQUEA -> . ESTATUTO BLOQUEA
    (36) BLOQUEA -> . ESTATUTO RBRACKET
    (37) ESTATUTO -> . ASIGNACION
    (38) ESTATUTO -> . LLAMADA
    (39) ESTATUTO -> . RETORNO
    (40) ESTATUTO -> . LECTURA
    (41) ESTATUTO -> . ESCRITURA
    (42) ESTATUTO -> . DECISION
    (43) ESTATUTO -> . REPETICION
    (44) ESTATUTO -> . FUNCESP
    (45) ASIGNACION -> . ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON
    (46) LLAMADA -> . ID pushEra LPAREN LLAMADAS
    (47) LLAMADA -> . ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada
    (50) RETORNO -> . RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON
    (51) LECTURA -> . READ LPAREN LECTURAS
    (54) ESCRITURA -> . WRITE LPAREN ESCRITURAA
    (59) DECISION -> . IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO
    (62) REPETICION -> . COND
    (63) REPETICION -> . NOCOND
    (90) FUNCESP -> . FLINE
    (91) FUNCESP -> . FPOINT
    (92) FUNCESP -> . FCIRCLE
    (93) FUNCESP -> . FARC
    (94) FUNCESP -> . FPENUP
    (95) FUNCESP -> . FPENDOWN
    (96) FUNCESP -> . FCOLOR
    (97) FUNCESP -> . FSIZE
    (98) FUNCESP -> . FCLEAR
    (64) COND -> . WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile
    (65) NOCOND -> . FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
    (99) FLINE -> . LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON
    (102) FPOINT -> . POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON
    (103) FCIRCLE -> . CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON
    (104) FARC -> . ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON
    (105) FPENUP -> . PENUP LPAREN RPAREN popPenup SEMICOLON
    (106) FPENDOWN -> . PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON
    (107) FCOLOR -> . COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON
    (108) FSIZE -> . SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON
    (109) FCLEAR -> . CLEAR LPAREN RPAREN popClear SEMICOLON

    RBRACKET        shift and go to state 47
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    WRITE           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 73
    FROM            shift and go to state 74
    LINE            shift and go to state 75
    POINT           shift and go to state 76
    CIRCLE          shift and go to state 77
    ARC             shift and go to state 78
    PENUP           shift and go to state 79
    PENDOWN         shift and go to state 80
    COLOR           shift and go to state 81
    SIZE            shift and go to state 82
    CLEAR           shift and go to state 83

    BLOQUEA                        shift and go to state 46
    ESTATUTO                       shift and go to state 48
    ASIGNACION                     shift and go to state 49
    LLAMADA                        shift and go to state 50
    RETORNO                        shift and go to state 51
    LECTURA                        shift and go to state 52
    ESCRITURA                      shift and go to state 53
    DECISION                       shift and go to state 54
    REPETICION                     shift and go to state 55
    FUNCESP                        shift and go to state 56
    COND                           shift and go to state 62
    NOCOND                         shift and go to state 63
    FLINE                          shift and go to state 64
    FPOINT                         shift and go to state 65
    FCIRCLE                        shift and go to state 66
    FARC                           shift and go to state 67
    FPENUP                         shift and go to state 68
    FPENDOWN                       shift and go to state 69
    FCOLOR                         shift and go to state 70
    FSIZE                          shift and go to state 71
    FCLEAR                         shift and go to state 72

state 39

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS . addParamsFunc RPAREN SEMICOLON FUNCSB
    (115) addParamsFunc -> .

    RPAREN          reduce using rule 115 (addParamsFunc -> .)

    addParamsFunc                  shift and go to state 84

state 40

    (29) PARAMS -> emptyVars . PARAMSL
    (31) PARAMSL -> . TIPO ID addVarLista
    (32) PARAMSL -> . PARAMSL COMMA TIPO ID addVarLista
    (11) TIPO -> . INT
    (12) TIPO -> . FLOAT
    (13) TIPO -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    PARAMSL                        shift and go to state 85
    TIPO                           shift and go to state 86

state 41

    (30) PARAMS -> empty .

    RPAREN          reduce using rule 30 (PARAMS -> empty .)


state 42

    (7) VARSA -> TIPO COLON ID addVarLista ARREGLO . VARSB
    (8) VARSB -> . COMMA ID addVarLista ARREGLO VARSB
    (9) VARSB -> . SEMICOLON VARSA
    (10) VARSB -> . SEMICOLON

    COMMA           shift and go to state 88
    SEMICOLON       shift and go to state 89

    VARSB                          shift and go to state 87

state 43

    (14) ARREGLO -> LSBRACKET . pushParen EXP RSBRACKET popParen pushDim ARREGLO2
    (132) pushParen -> .

    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 90

state 44

    (15) ARREGLO -> empty .

    COMMA           reduce using rule 15 (ARREGLO -> empty .)
    SEMICOLON       reduce using rule 15 (ARREGLO -> empty .)


state 45

    (1) PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID addProgram SEMICOLON VA FU MAIN LPAREN RPAREN rellenaMain BLOQUE printTables .)


state 46

    (33) BLOQUE -> LBRACKET BLOQUEA .

    $end            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    MODULE          reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    MAIN            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    ELSE            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    RBRACKET        reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    ID              reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    RETURN          reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    READ            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    WRITE           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    IF              reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    WHILE           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    FROM            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    LINE            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    POINT           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    CIRCLE          reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    ARC             reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    PENUP           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    PENDOWN         reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    COLOR           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    SIZE            reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)
    CLEAR           reduce using rule 33 (BLOQUE -> LBRACKET BLOQUEA .)


state 47

    (34) BLOQUE -> LBRACKET RBRACKET .

    $end            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    MODULE          reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    MAIN            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    ID              reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    READ            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    WRITE           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    IF              reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    FROM            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    LINE            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    POINT           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    CIRCLE          reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    ARC             reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    PENUP           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    PENDOWN         reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    COLOR           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    SIZE            reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)
    CLEAR           reduce using rule 34 (BLOQUE -> LBRACKET RBRACKET .)


state 48

    (35) BLOQUEA -> ESTATUTO . BLOQUEA
    (36) BLOQUEA -> ESTATUTO . RBRACKET
    (35) BLOQUEA -> . ESTATUTO BLOQUEA
    (36) BLOQUEA -> . ESTATUTO RBRACKET
    (37) ESTATUTO -> . ASIGNACION
    (38) ESTATUTO -> . LLAMADA
    (39) ESTATUTO -> . RETORNO
    (40) ESTATUTO -> . LECTURA
    (41) ESTATUTO -> . ESCRITURA
    (42) ESTATUTO -> . DECISION
    (43) ESTATUTO -> . REPETICION
    (44) ESTATUTO -> . FUNCESP
    (45) ASIGNACION -> . ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON
    (46) LLAMADA -> . ID pushEra LPAREN LLAMADAS
    (47) LLAMADA -> . ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada
    (50) RETORNO -> . RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON
    (51) LECTURA -> . READ LPAREN LECTURAS
    (54) ESCRITURA -> . WRITE LPAREN ESCRITURAA
    (59) DECISION -> . IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO
    (62) REPETICION -> . COND
    (63) REPETICION -> . NOCOND
    (90) FUNCESP -> . FLINE
    (91) FUNCESP -> . FPOINT
    (92) FUNCESP -> . FCIRCLE
    (93) FUNCESP -> . FARC
    (94) FUNCESP -> . FPENUP
    (95) FUNCESP -> . FPENDOWN
    (96) FUNCESP -> . FCOLOR
    (97) FUNCESP -> . FSIZE
    (98) FUNCESP -> . FCLEAR
    (64) COND -> . WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile
    (65) NOCOND -> . FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
    (99) FLINE -> . LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON
    (102) FPOINT -> . POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON
    (103) FCIRCLE -> . CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON
    (104) FARC -> . ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON
    (105) FPENUP -> . PENUP LPAREN RPAREN popPenup SEMICOLON
    (106) FPENDOWN -> . PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON
    (107) FCOLOR -> . COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON
    (108) FSIZE -> . SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON
    (109) FCLEAR -> . CLEAR LPAREN RPAREN popClear SEMICOLON

    RBRACKET        shift and go to state 92
    ID              shift and go to state 57
    RETURN          shift and go to state 58
    READ            shift and go to state 59
    WRITE           shift and go to state 60
    IF              shift and go to state 61
    WHILE           shift and go to state 73
    FROM            shift and go to state 74
    LINE            shift and go to state 75
    POINT           shift and go to state 76
    CIRCLE          shift and go to state 77
    ARC             shift and go to state 78
    PENUP           shift and go to state 79
    PENDOWN         shift and go to state 80
    COLOR           shift and go to state 81
    SIZE            shift and go to state 82
    CLEAR           shift and go to state 83

    ESTATUTO                       shift and go to state 48
    BLOQUEA                        shift and go to state 91
    ASIGNACION                     shift and go to state 49
    LLAMADA                        shift and go to state 50
    RETORNO                        shift and go to state 51
    LECTURA                        shift and go to state 52
    ESCRITURA                      shift and go to state 53
    DECISION                       shift and go to state 54
    REPETICION                     shift and go to state 55
    FUNCESP                        shift and go to state 56
    COND                           shift and go to state 62
    NOCOND                         shift and go to state 63
    FLINE                          shift and go to state 64
    FPOINT                         shift and go to state 65
    FCIRCLE                        shift and go to state 66
    FARC                           shift and go to state 67
    FPENUP                         shift and go to state 68
    FPENDOWN                       shift and go to state 69
    FCOLOR                         shift and go to state 70
    FSIZE                          shift and go to state 71
    FCLEAR                         shift and go to state 72

state 49

    (37) ESTATUTO -> ASIGNACION .

    RBRACKET        reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    ID              reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    READ            reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    WRITE           reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    FROM            reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    LINE            reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    POINT           reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    CIRCLE          reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    ARC             reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    PENUP           reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    PENDOWN         reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    COLOR           reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    SIZE            reduce using rule 37 (ESTATUTO -> ASIGNACION .)
    CLEAR           reduce using rule 37 (ESTATUTO -> ASIGNACION .)


state 50

    (38) ESTATUTO -> LLAMADA .

    RBRACKET        reduce using rule 38 (ESTATUTO -> LLAMADA .)
    ID              reduce using rule 38 (ESTATUTO -> LLAMADA .)
    RETURN          reduce using rule 38 (ESTATUTO -> LLAMADA .)
    READ            reduce using rule 38 (ESTATUTO -> LLAMADA .)
    WRITE           reduce using rule 38 (ESTATUTO -> LLAMADA .)
    IF              reduce using rule 38 (ESTATUTO -> LLAMADA .)
    WHILE           reduce using rule 38 (ESTATUTO -> LLAMADA .)
    FROM            reduce using rule 38 (ESTATUTO -> LLAMADA .)
    LINE            reduce using rule 38 (ESTATUTO -> LLAMADA .)
    POINT           reduce using rule 38 (ESTATUTO -> LLAMADA .)
    CIRCLE          reduce using rule 38 (ESTATUTO -> LLAMADA .)
    ARC             reduce using rule 38 (ESTATUTO -> LLAMADA .)
    PENUP           reduce using rule 38 (ESTATUTO -> LLAMADA .)
    PENDOWN         reduce using rule 38 (ESTATUTO -> LLAMADA .)
    COLOR           reduce using rule 38 (ESTATUTO -> LLAMADA .)
    SIZE            reduce using rule 38 (ESTATUTO -> LLAMADA .)
    CLEAR           reduce using rule 38 (ESTATUTO -> LLAMADA .)


state 51

    (39) ESTATUTO -> RETORNO .

    RBRACKET        reduce using rule 39 (ESTATUTO -> RETORNO .)
    ID              reduce using rule 39 (ESTATUTO -> RETORNO .)
    RETURN          reduce using rule 39 (ESTATUTO -> RETORNO .)
    READ            reduce using rule 39 (ESTATUTO -> RETORNO .)
    WRITE           reduce using rule 39 (ESTATUTO -> RETORNO .)
    IF              reduce using rule 39 (ESTATUTO -> RETORNO .)
    WHILE           reduce using rule 39 (ESTATUTO -> RETORNO .)
    FROM            reduce using rule 39 (ESTATUTO -> RETORNO .)
    LINE            reduce using rule 39 (ESTATUTO -> RETORNO .)
    POINT           reduce using rule 39 (ESTATUTO -> RETORNO .)
    CIRCLE          reduce using rule 39 (ESTATUTO -> RETORNO .)
    ARC             reduce using rule 39 (ESTATUTO -> RETORNO .)
    PENUP           reduce using rule 39 (ESTATUTO -> RETORNO .)
    PENDOWN         reduce using rule 39 (ESTATUTO -> RETORNO .)
    COLOR           reduce using rule 39 (ESTATUTO -> RETORNO .)
    SIZE            reduce using rule 39 (ESTATUTO -> RETORNO .)
    CLEAR           reduce using rule 39 (ESTATUTO -> RETORNO .)


state 52

    (40) ESTATUTO -> LECTURA .

    RBRACKET        reduce using rule 40 (ESTATUTO -> LECTURA .)
    ID              reduce using rule 40 (ESTATUTO -> LECTURA .)
    RETURN          reduce using rule 40 (ESTATUTO -> LECTURA .)
    READ            reduce using rule 40 (ESTATUTO -> LECTURA .)
    WRITE           reduce using rule 40 (ESTATUTO -> LECTURA .)
    IF              reduce using rule 40 (ESTATUTO -> LECTURA .)
    WHILE           reduce using rule 40 (ESTATUTO -> LECTURA .)
    FROM            reduce using rule 40 (ESTATUTO -> LECTURA .)
    LINE            reduce using rule 40 (ESTATUTO -> LECTURA .)
    POINT           reduce using rule 40 (ESTATUTO -> LECTURA .)
    CIRCLE          reduce using rule 40 (ESTATUTO -> LECTURA .)
    ARC             reduce using rule 40 (ESTATUTO -> LECTURA .)
    PENUP           reduce using rule 40 (ESTATUTO -> LECTURA .)
    PENDOWN         reduce using rule 40 (ESTATUTO -> LECTURA .)
    COLOR           reduce using rule 40 (ESTATUTO -> LECTURA .)
    SIZE            reduce using rule 40 (ESTATUTO -> LECTURA .)
    CLEAR           reduce using rule 40 (ESTATUTO -> LECTURA .)


state 53

    (41) ESTATUTO -> ESCRITURA .

    RBRACKET        reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    ID              reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    RETURN          reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    READ            reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    WRITE           reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    IF              reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    WHILE           reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    FROM            reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    LINE            reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    POINT           reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    CIRCLE          reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    ARC             reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    PENUP           reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    PENDOWN         reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    COLOR           reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    SIZE            reduce using rule 41 (ESTATUTO -> ESCRITURA .)
    CLEAR           reduce using rule 41 (ESTATUTO -> ESCRITURA .)


state 54

    (42) ESTATUTO -> DECISION .

    RBRACKET        reduce using rule 42 (ESTATUTO -> DECISION .)
    ID              reduce using rule 42 (ESTATUTO -> DECISION .)
    RETURN          reduce using rule 42 (ESTATUTO -> DECISION .)
    READ            reduce using rule 42 (ESTATUTO -> DECISION .)
    WRITE           reduce using rule 42 (ESTATUTO -> DECISION .)
    IF              reduce using rule 42 (ESTATUTO -> DECISION .)
    WHILE           reduce using rule 42 (ESTATUTO -> DECISION .)
    FROM            reduce using rule 42 (ESTATUTO -> DECISION .)
    LINE            reduce using rule 42 (ESTATUTO -> DECISION .)
    POINT           reduce using rule 42 (ESTATUTO -> DECISION .)
    CIRCLE          reduce using rule 42 (ESTATUTO -> DECISION .)
    ARC             reduce using rule 42 (ESTATUTO -> DECISION .)
    PENUP           reduce using rule 42 (ESTATUTO -> DECISION .)
    PENDOWN         reduce using rule 42 (ESTATUTO -> DECISION .)
    COLOR           reduce using rule 42 (ESTATUTO -> DECISION .)
    SIZE            reduce using rule 42 (ESTATUTO -> DECISION .)
    CLEAR           reduce using rule 42 (ESTATUTO -> DECISION .)


state 55

    (43) ESTATUTO -> REPETICION .

    RBRACKET        reduce using rule 43 (ESTATUTO -> REPETICION .)
    ID              reduce using rule 43 (ESTATUTO -> REPETICION .)
    RETURN          reduce using rule 43 (ESTATUTO -> REPETICION .)
    READ            reduce using rule 43 (ESTATUTO -> REPETICION .)
    WRITE           reduce using rule 43 (ESTATUTO -> REPETICION .)
    IF              reduce using rule 43 (ESTATUTO -> REPETICION .)
    WHILE           reduce using rule 43 (ESTATUTO -> REPETICION .)
    FROM            reduce using rule 43 (ESTATUTO -> REPETICION .)
    LINE            reduce using rule 43 (ESTATUTO -> REPETICION .)
    POINT           reduce using rule 43 (ESTATUTO -> REPETICION .)
    CIRCLE          reduce using rule 43 (ESTATUTO -> REPETICION .)
    ARC             reduce using rule 43 (ESTATUTO -> REPETICION .)
    PENUP           reduce using rule 43 (ESTATUTO -> REPETICION .)
    PENDOWN         reduce using rule 43 (ESTATUTO -> REPETICION .)
    COLOR           reduce using rule 43 (ESTATUTO -> REPETICION .)
    SIZE            reduce using rule 43 (ESTATUTO -> REPETICION .)
    CLEAR           reduce using rule 43 (ESTATUTO -> REPETICION .)


state 56

    (44) ESTATUTO -> FUNCESP .

    RBRACKET        reduce using rule 44 (ESTATUTO -> FUNCESP .)
    ID              reduce using rule 44 (ESTATUTO -> FUNCESP .)
    RETURN          reduce using rule 44 (ESTATUTO -> FUNCESP .)
    READ            reduce using rule 44 (ESTATUTO -> FUNCESP .)
    WRITE           reduce using rule 44 (ESTATUTO -> FUNCESP .)
    IF              reduce using rule 44 (ESTATUTO -> FUNCESP .)
    WHILE           reduce using rule 44 (ESTATUTO -> FUNCESP .)
    FROM            reduce using rule 44 (ESTATUTO -> FUNCESP .)
    LINE            reduce using rule 44 (ESTATUTO -> FUNCESP .)
    POINT           reduce using rule 44 (ESTATUTO -> FUNCESP .)
    CIRCLE          reduce using rule 44 (ESTATUTO -> FUNCESP .)
    ARC             reduce using rule 44 (ESTATUTO -> FUNCESP .)
    PENUP           reduce using rule 44 (ESTATUTO -> FUNCESP .)
    PENDOWN         reduce using rule 44 (ESTATUTO -> FUNCESP .)
    COLOR           reduce using rule 44 (ESTATUTO -> FUNCESP .)
    SIZE            reduce using rule 44 (ESTATUTO -> FUNCESP .)
    CLEAR           reduce using rule 44 (ESTATUTO -> FUNCESP .)


state 57

    (45) ASIGNACION -> ID . pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON
    (46) LLAMADA -> ID . pushEra LPAREN LLAMADAS
    (47) LLAMADA -> ID . pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada
    (131) pushPilaOp -> .
    (138) pushEra -> .

    LSBRACKET       reduce using rule 131 (pushPilaOp -> .)
    EQUALS          reduce using rule 131 (pushPilaOp -> .)
    LPAREN          reduce using rule 138 (pushEra -> .)

    pushPilaOp                     shift and go to state 93
    pushEra                        shift and go to state 94

state 58

    (50) RETORNO -> RETURN . LPAREN EXPRESION RPAREN popReturn SEMICOLON

    LPAREN          shift and go to state 95


state 59

    (51) LECTURA -> READ . LPAREN LECTURAS

    LPAREN          shift and go to state 96


state 60

    (54) ESCRITURA -> WRITE . LPAREN ESCRITURAA

    LPAREN          shift and go to state 97


state 61

    (59) DECISION -> IF . LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO

    LPAREN          shift and go to state 98


state 62

    (62) REPETICION -> COND .

    RBRACKET        reduce using rule 62 (REPETICION -> COND .)
    ID              reduce using rule 62 (REPETICION -> COND .)
    RETURN          reduce using rule 62 (REPETICION -> COND .)
    READ            reduce using rule 62 (REPETICION -> COND .)
    WRITE           reduce using rule 62 (REPETICION -> COND .)
    IF              reduce using rule 62 (REPETICION -> COND .)
    WHILE           reduce using rule 62 (REPETICION -> COND .)
    FROM            reduce using rule 62 (REPETICION -> COND .)
    LINE            reduce using rule 62 (REPETICION -> COND .)
    POINT           reduce using rule 62 (REPETICION -> COND .)
    CIRCLE          reduce using rule 62 (REPETICION -> COND .)
    ARC             reduce using rule 62 (REPETICION -> COND .)
    PENUP           reduce using rule 62 (REPETICION -> COND .)
    PENDOWN         reduce using rule 62 (REPETICION -> COND .)
    COLOR           reduce using rule 62 (REPETICION -> COND .)
    SIZE            reduce using rule 62 (REPETICION -> COND .)
    CLEAR           reduce using rule 62 (REPETICION -> COND .)


state 63

    (63) REPETICION -> NOCOND .

    RBRACKET        reduce using rule 63 (REPETICION -> NOCOND .)
    ID              reduce using rule 63 (REPETICION -> NOCOND .)
    RETURN          reduce using rule 63 (REPETICION -> NOCOND .)
    READ            reduce using rule 63 (REPETICION -> NOCOND .)
    WRITE           reduce using rule 63 (REPETICION -> NOCOND .)
    IF              reduce using rule 63 (REPETICION -> NOCOND .)
    WHILE           reduce using rule 63 (REPETICION -> NOCOND .)
    FROM            reduce using rule 63 (REPETICION -> NOCOND .)
    LINE            reduce using rule 63 (REPETICION -> NOCOND .)
    POINT           reduce using rule 63 (REPETICION -> NOCOND .)
    CIRCLE          reduce using rule 63 (REPETICION -> NOCOND .)
    ARC             reduce using rule 63 (REPETICION -> NOCOND .)
    PENUP           reduce using rule 63 (REPETICION -> NOCOND .)
    PENDOWN         reduce using rule 63 (REPETICION -> NOCOND .)
    COLOR           reduce using rule 63 (REPETICION -> NOCOND .)
    SIZE            reduce using rule 63 (REPETICION -> NOCOND .)
    CLEAR           reduce using rule 63 (REPETICION -> NOCOND .)


state 64

    (90) FUNCESP -> FLINE .

    RBRACKET        reduce using rule 90 (FUNCESP -> FLINE .)
    ID              reduce using rule 90 (FUNCESP -> FLINE .)
    RETURN          reduce using rule 90 (FUNCESP -> FLINE .)
    READ            reduce using rule 90 (FUNCESP -> FLINE .)
    WRITE           reduce using rule 90 (FUNCESP -> FLINE .)
    IF              reduce using rule 90 (FUNCESP -> FLINE .)
    WHILE           reduce using rule 90 (FUNCESP -> FLINE .)
    FROM            reduce using rule 90 (FUNCESP -> FLINE .)
    LINE            reduce using rule 90 (FUNCESP -> FLINE .)
    POINT           reduce using rule 90 (FUNCESP -> FLINE .)
    CIRCLE          reduce using rule 90 (FUNCESP -> FLINE .)
    ARC             reduce using rule 90 (FUNCESP -> FLINE .)
    PENUP           reduce using rule 90 (FUNCESP -> FLINE .)
    PENDOWN         reduce using rule 90 (FUNCESP -> FLINE .)
    COLOR           reduce using rule 90 (FUNCESP -> FLINE .)
    SIZE            reduce using rule 90 (FUNCESP -> FLINE .)
    CLEAR           reduce using rule 90 (FUNCESP -> FLINE .)


state 65

    (91) FUNCESP -> FPOINT .

    RBRACKET        reduce using rule 91 (FUNCESP -> FPOINT .)
    ID              reduce using rule 91 (FUNCESP -> FPOINT .)
    RETURN          reduce using rule 91 (FUNCESP -> FPOINT .)
    READ            reduce using rule 91 (FUNCESP -> FPOINT .)
    WRITE           reduce using rule 91 (FUNCESP -> FPOINT .)
    IF              reduce using rule 91 (FUNCESP -> FPOINT .)
    WHILE           reduce using rule 91 (FUNCESP -> FPOINT .)
    FROM            reduce using rule 91 (FUNCESP -> FPOINT .)
    LINE            reduce using rule 91 (FUNCESP -> FPOINT .)
    POINT           reduce using rule 91 (FUNCESP -> FPOINT .)
    CIRCLE          reduce using rule 91 (FUNCESP -> FPOINT .)
    ARC             reduce using rule 91 (FUNCESP -> FPOINT .)
    PENUP           reduce using rule 91 (FUNCESP -> FPOINT .)
    PENDOWN         reduce using rule 91 (FUNCESP -> FPOINT .)
    COLOR           reduce using rule 91 (FUNCESP -> FPOINT .)
    SIZE            reduce using rule 91 (FUNCESP -> FPOINT .)
    CLEAR           reduce using rule 91 (FUNCESP -> FPOINT .)


state 66

    (92) FUNCESP -> FCIRCLE .

    RBRACKET        reduce using rule 92 (FUNCESP -> FCIRCLE .)
    ID              reduce using rule 92 (FUNCESP -> FCIRCLE .)
    RETURN          reduce using rule 92 (FUNCESP -> FCIRCLE .)
    READ            reduce using rule 92 (FUNCESP -> FCIRCLE .)
    WRITE           reduce using rule 92 (FUNCESP -> FCIRCLE .)
    IF              reduce using rule 92 (FUNCESP -> FCIRCLE .)
    WHILE           reduce using rule 92 (FUNCESP -> FCIRCLE .)
    FROM            reduce using rule 92 (FUNCESP -> FCIRCLE .)
    LINE            reduce using rule 92 (FUNCESP -> FCIRCLE .)
    POINT           reduce using rule 92 (FUNCESP -> FCIRCLE .)
    CIRCLE          reduce using rule 92 (FUNCESP -> FCIRCLE .)
    ARC             reduce using rule 92 (FUNCESP -> FCIRCLE .)
    PENUP           reduce using rule 92 (FUNCESP -> FCIRCLE .)
    PENDOWN         reduce using rule 92 (FUNCESP -> FCIRCLE .)
    COLOR           reduce using rule 92 (FUNCESP -> FCIRCLE .)
    SIZE            reduce using rule 92 (FUNCESP -> FCIRCLE .)
    CLEAR           reduce using rule 92 (FUNCESP -> FCIRCLE .)


state 67

    (93) FUNCESP -> FARC .

    RBRACKET        reduce using rule 93 (FUNCESP -> FARC .)
    ID              reduce using rule 93 (FUNCESP -> FARC .)
    RETURN          reduce using rule 93 (FUNCESP -> FARC .)
    READ            reduce using rule 93 (FUNCESP -> FARC .)
    WRITE           reduce using rule 93 (FUNCESP -> FARC .)
    IF              reduce using rule 93 (FUNCESP -> FARC .)
    WHILE           reduce using rule 93 (FUNCESP -> FARC .)
    FROM            reduce using rule 93 (FUNCESP -> FARC .)
    LINE            reduce using rule 93 (FUNCESP -> FARC .)
    POINT           reduce using rule 93 (FUNCESP -> FARC .)
    CIRCLE          reduce using rule 93 (FUNCESP -> FARC .)
    ARC             reduce using rule 93 (FUNCESP -> FARC .)
    PENUP           reduce using rule 93 (FUNCESP -> FARC .)
    PENDOWN         reduce using rule 93 (FUNCESP -> FARC .)
    COLOR           reduce using rule 93 (FUNCESP -> FARC .)
    SIZE            reduce using rule 93 (FUNCESP -> FARC .)
    CLEAR           reduce using rule 93 (FUNCESP -> FARC .)


state 68

    (94) FUNCESP -> FPENUP .

    RBRACKET        reduce using rule 94 (FUNCESP -> FPENUP .)
    ID              reduce using rule 94 (FUNCESP -> FPENUP .)
    RETURN          reduce using rule 94 (FUNCESP -> FPENUP .)
    READ            reduce using rule 94 (FUNCESP -> FPENUP .)
    WRITE           reduce using rule 94 (FUNCESP -> FPENUP .)
    IF              reduce using rule 94 (FUNCESP -> FPENUP .)
    WHILE           reduce using rule 94 (FUNCESP -> FPENUP .)
    FROM            reduce using rule 94 (FUNCESP -> FPENUP .)
    LINE            reduce using rule 94 (FUNCESP -> FPENUP .)
    POINT           reduce using rule 94 (FUNCESP -> FPENUP .)
    CIRCLE          reduce using rule 94 (FUNCESP -> FPENUP .)
    ARC             reduce using rule 94 (FUNCESP -> FPENUP .)
    PENUP           reduce using rule 94 (FUNCESP -> FPENUP .)
    PENDOWN         reduce using rule 94 (FUNCESP -> FPENUP .)
    COLOR           reduce using rule 94 (FUNCESP -> FPENUP .)
    SIZE            reduce using rule 94 (FUNCESP -> FPENUP .)
    CLEAR           reduce using rule 94 (FUNCESP -> FPENUP .)


state 69

    (95) FUNCESP -> FPENDOWN .

    RBRACKET        reduce using rule 95 (FUNCESP -> FPENDOWN .)
    ID              reduce using rule 95 (FUNCESP -> FPENDOWN .)
    RETURN          reduce using rule 95 (FUNCESP -> FPENDOWN .)
    READ            reduce using rule 95 (FUNCESP -> FPENDOWN .)
    WRITE           reduce using rule 95 (FUNCESP -> FPENDOWN .)
    IF              reduce using rule 95 (FUNCESP -> FPENDOWN .)
    WHILE           reduce using rule 95 (FUNCESP -> FPENDOWN .)
    FROM            reduce using rule 95 (FUNCESP -> FPENDOWN .)
    LINE            reduce using rule 95 (FUNCESP -> FPENDOWN .)
    POINT           reduce using rule 95 (FUNCESP -> FPENDOWN .)
    CIRCLE          reduce using rule 95 (FUNCESP -> FPENDOWN .)
    ARC             reduce using rule 95 (FUNCESP -> FPENDOWN .)
    PENUP           reduce using rule 95 (FUNCESP -> FPENDOWN .)
    PENDOWN         reduce using rule 95 (FUNCESP -> FPENDOWN .)
    COLOR           reduce using rule 95 (FUNCESP -> FPENDOWN .)
    SIZE            reduce using rule 95 (FUNCESP -> FPENDOWN .)
    CLEAR           reduce using rule 95 (FUNCESP -> FPENDOWN .)


state 70

    (96) FUNCESP -> FCOLOR .

    RBRACKET        reduce using rule 96 (FUNCESP -> FCOLOR .)
    ID              reduce using rule 96 (FUNCESP -> FCOLOR .)
    RETURN          reduce using rule 96 (FUNCESP -> FCOLOR .)
    READ            reduce using rule 96 (FUNCESP -> FCOLOR .)
    WRITE           reduce using rule 96 (FUNCESP -> FCOLOR .)
    IF              reduce using rule 96 (FUNCESP -> FCOLOR .)
    WHILE           reduce using rule 96 (FUNCESP -> FCOLOR .)
    FROM            reduce using rule 96 (FUNCESP -> FCOLOR .)
    LINE            reduce using rule 96 (FUNCESP -> FCOLOR .)
    POINT           reduce using rule 96 (FUNCESP -> FCOLOR .)
    CIRCLE          reduce using rule 96 (FUNCESP -> FCOLOR .)
    ARC             reduce using rule 96 (FUNCESP -> FCOLOR .)
    PENUP           reduce using rule 96 (FUNCESP -> FCOLOR .)
    PENDOWN         reduce using rule 96 (FUNCESP -> FCOLOR .)
    COLOR           reduce using rule 96 (FUNCESP -> FCOLOR .)
    SIZE            reduce using rule 96 (FUNCESP -> FCOLOR .)
    CLEAR           reduce using rule 96 (FUNCESP -> FCOLOR .)


state 71

    (97) FUNCESP -> FSIZE .

    RBRACKET        reduce using rule 97 (FUNCESP -> FSIZE .)
    ID              reduce using rule 97 (FUNCESP -> FSIZE .)
    RETURN          reduce using rule 97 (FUNCESP -> FSIZE .)
    READ            reduce using rule 97 (FUNCESP -> FSIZE .)
    WRITE           reduce using rule 97 (FUNCESP -> FSIZE .)
    IF              reduce using rule 97 (FUNCESP -> FSIZE .)
    WHILE           reduce using rule 97 (FUNCESP -> FSIZE .)
    FROM            reduce using rule 97 (FUNCESP -> FSIZE .)
    LINE            reduce using rule 97 (FUNCESP -> FSIZE .)
    POINT           reduce using rule 97 (FUNCESP -> FSIZE .)
    CIRCLE          reduce using rule 97 (FUNCESP -> FSIZE .)
    ARC             reduce using rule 97 (FUNCESP -> FSIZE .)
    PENUP           reduce using rule 97 (FUNCESP -> FSIZE .)
    PENDOWN         reduce using rule 97 (FUNCESP -> FSIZE .)
    COLOR           reduce using rule 97 (FUNCESP -> FSIZE .)
    SIZE            reduce using rule 97 (FUNCESP -> FSIZE .)
    CLEAR           reduce using rule 97 (FUNCESP -> FSIZE .)


state 72

    (98) FUNCESP -> FCLEAR .

    RBRACKET        reduce using rule 98 (FUNCESP -> FCLEAR .)
    ID              reduce using rule 98 (FUNCESP -> FCLEAR .)
    RETURN          reduce using rule 98 (FUNCESP -> FCLEAR .)
    READ            reduce using rule 98 (FUNCESP -> FCLEAR .)
    WRITE           reduce using rule 98 (FUNCESP -> FCLEAR .)
    IF              reduce using rule 98 (FUNCESP -> FCLEAR .)
    WHILE           reduce using rule 98 (FUNCESP -> FCLEAR .)
    FROM            reduce using rule 98 (FUNCESP -> FCLEAR .)
    LINE            reduce using rule 98 (FUNCESP -> FCLEAR .)
    POINT           reduce using rule 98 (FUNCESP -> FCLEAR .)
    CIRCLE          reduce using rule 98 (FUNCESP -> FCLEAR .)
    ARC             reduce using rule 98 (FUNCESP -> FCLEAR .)
    PENUP           reduce using rule 98 (FUNCESP -> FCLEAR .)
    PENDOWN         reduce using rule 98 (FUNCESP -> FCLEAR .)
    COLOR           reduce using rule 98 (FUNCESP -> FCLEAR .)
    SIZE            reduce using rule 98 (FUNCESP -> FCLEAR .)
    CLEAR           reduce using rule 98 (FUNCESP -> FCLEAR .)


state 73

    (64) COND -> WHILE . pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile
    (156) pushSalto -> .

    LPAREN          reduce using rule 156 (pushSalto -> .)

    pushSalto                      shift and go to state 99

state 74

    (65) NOCOND -> FROM . ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom

    ID              shift and go to state 100


state 75

    (99) FLINE -> LINE . LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON

    LPAREN          shift and go to state 101


state 76

    (102) FPOINT -> POINT . LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON

    LPAREN          shift and go to state 102


state 77

    (103) FCIRCLE -> CIRCLE . LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON

    LPAREN          shift and go to state 103


state 78

    (104) FARC -> ARC . LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON

    LPAREN          shift and go to state 104


state 79

    (105) FPENUP -> PENUP . LPAREN RPAREN popPenup SEMICOLON

    LPAREN          shift and go to state 105


state 80

    (106) FPENDOWN -> PENDOWN . LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON

    LPAREN          shift and go to state 106


state 81

    (107) FCOLOR -> COLOR . LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON

    LPAREN          shift and go to state 107


state 82

    (108) FSIZE -> SIZE . LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON

    LPAREN          shift and go to state 108


state 83

    (109) FCLEAR -> CLEAR . LPAREN RPAREN popClear SEMICOLON

    LPAREN          shift and go to state 109


state 84

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc . RPAREN SEMICOLON FUNCSB

    RPAREN          shift and go to state 110


state 85

    (29) PARAMS -> emptyVars PARAMSL .
    (32) PARAMSL -> PARAMSL . COMMA TIPO ID addVarLista

    RPAREN          reduce using rule 29 (PARAMS -> emptyVars PARAMSL .)
    COMMA           shift and go to state 111


state 86

    (31) PARAMSL -> TIPO . ID addVarLista

    ID              shift and go to state 112


state 87

    (7) VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB .

    MODULE          reduce using rule 7 (VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB .)
    MAIN            reduce using rule 7 (VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB .)
    LBRACKET        reduce using rule 7 (VARSA -> TIPO COLON ID addVarLista ARREGLO VARSB .)


state 88

    (8) VARSB -> COMMA . ID addVarLista ARREGLO VARSB

    ID              shift and go to state 113


state 89

    (9) VARSB -> SEMICOLON . VARSA
    (10) VARSB -> SEMICOLON .
    (7) VARSA -> . TIPO COLON ID addVarLista ARREGLO VARSB
    (11) TIPO -> . INT
    (12) TIPO -> . FLOAT
    (13) TIPO -> . CHAR

    MODULE          reduce using rule 10 (VARSB -> SEMICOLON .)
    MAIN            reduce using rule 10 (VARSB -> SEMICOLON .)
    LBRACKET        reduce using rule 10 (VARSB -> SEMICOLON .)
    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    VARSA                          shift and go to state 114
    TIPO                           shift and go to state 24

state 90

    (14) ARREGLO -> LSBRACKET pushParen . EXP RSBRACKET popParen pushDim ARREGLO2
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 115
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 91

    (35) BLOQUEA -> ESTATUTO BLOQUEA .

    $end            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    MODULE          reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    MAIN            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    ELSE            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    RBRACKET        reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    ID              reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    RETURN          reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    READ            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    WRITE           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    IF              reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    WHILE           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    FROM            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    LINE            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    POINT           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    CIRCLE          reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    ARC             reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    PENUP           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    PENDOWN         reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    COLOR           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    SIZE            reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)
    CLEAR           reduce using rule 35 (BLOQUEA -> ESTATUTO BLOQUEA .)


state 92

    (36) BLOQUEA -> ESTATUTO RBRACKET .

    $end            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    MODULE          reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    MAIN            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    ELSE            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    RBRACKET        reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    ID              reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    RETURN          reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    READ            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    WRITE           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    IF              reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    WHILE           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    FROM            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    LINE            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    POINT           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    CIRCLE          reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    ARC             reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    PENUP           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    PENDOWN         reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    COLOR           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    SIZE            reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)
    CLEAR           reduce using rule 36 (BLOQUEA -> ESTATUTO RBRACKET .)


state 93

    (45) ASIGNACION -> ID pushPilaOp . ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON
    (18) ARREGLOCALL -> . LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2
    (19) ARREGLOCALL -> . empty
    (110) empty -> .

    LSBRACKET       shift and go to state 126
    EQUALS          reduce using rule 110 (empty -> .)

    ARREGLOCALL                    shift and go to state 125
    empty                          shift and go to state 127

state 94

    (46) LLAMADA -> ID pushEra . LPAREN LLAMADAS
    (47) LLAMADA -> ID pushEra . LPAREN RPAREN SEMICOLON pushGosubLlamada

    LPAREN          shift and go to state 128


state 95

    (50) RETORNO -> RETURN LPAREN . EXPRESION RPAREN popReturn SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 129
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 96

    (51) LECTURA -> READ LPAREN . LECTURAS
    (52) LECTURAS -> . ID pushPilaOp COMMA popRead LECTURAS
    (53) LECTURAS -> . ID pushPilaOp RPAREN SEMICOLON popRead

    ID              shift and go to state 132

    LECTURAS                       shift and go to state 131

state 97

    (54) ESCRITURA -> WRITE LPAREN . ESCRITURAA
    (55) ESCRITURAA -> . C_STRING pushConstString COMMA popWrite ESCRITURAA
    (56) ESCRITURAA -> . C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd
    (57) ESCRITURAA -> . EXPRESION COMMA popWrite ESCRITURAA
    (58) ESCRITURAA -> . EXPRESION RPAREN SEMICOLON popWrite addWriteEnd
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    C_STRING        shift and go to state 134
    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    ESCRITURAA                     shift and go to state 133
    EXPRESION                      shift and go to state 135
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 98

    (59) DECISION -> IF LPAREN . EXPRESION RPAREN pushGotoF THEN BLOQUE SINO
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 136
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 99

    (64) COND -> WHILE pushSalto . LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile

    LPAREN          shift and go to state 137


state 100

    (65) NOCOND -> FROM ID . pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
    (158) pushFromId -> .

    EQUALS          reduce using rule 158 (pushFromId -> .)

    pushFromId                     shift and go to state 138

state 101

    (99) FLINE -> LINE LPAREN . EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 139
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 102

    (102) FPOINT -> POINT LPAREN . EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 140
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 103

    (103) FCIRCLE -> CIRCLE LPAREN . EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 141
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 104

    (104) FARC -> ARC LPAREN . EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 142
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 105

    (105) FPENUP -> PENUP LPAREN . RPAREN popPenup SEMICOLON

    RPAREN          shift and go to state 143


state 106

    (106) FPENDOWN -> PENDOWN LPAREN . EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 144
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 107

    (107) FCOLOR -> COLOR LPAREN . C_STRING pushConstString RPAREN popColor SEMICOLON

    C_STRING        shift and go to state 145


state 108

    (108) FSIZE -> SIZE LPAREN . EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 146
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 109

    (109) FCLEAR -> CLEAR LPAREN . RPAREN popClear SEMICOLON

    RPAREN          shift and go to state 147


state 110

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN . SEMICOLON FUNCSB

    SEMICOLON       shift and go to state 148


state 111

    (32) PARAMSL -> PARAMSL COMMA . TIPO ID addVarLista
    (11) TIPO -> . INT
    (12) TIPO -> . FLOAT
    (13) TIPO -> . CHAR

    INT             shift and go to state 25
    FLOAT           shift and go to state 26
    CHAR            shift and go to state 27

    TIPO                           shift and go to state 149

state 112

    (31) PARAMSL -> TIPO ID . addVarLista
    (113) addVarLista -> .

    COMMA           reduce using rule 113 (addVarLista -> .)
    RPAREN          reduce using rule 113 (addVarLista -> .)

    addVarLista                    shift and go to state 150

state 113

    (8) VARSB -> COMMA ID . addVarLista ARREGLO VARSB
    (113) addVarLista -> .

    LSBRACKET       reduce using rule 113 (addVarLista -> .)
    COMMA           reduce using rule 113 (addVarLista -> .)
    SEMICOLON       reduce using rule 113 (addVarLista -> .)

    addVarLista                    shift and go to state 151

state 114

    (9) VARSB -> SEMICOLON VARSA .

    MODULE          reduce using rule 9 (VARSB -> SEMICOLON VARSA .)
    MAIN            reduce using rule 9 (VARSB -> SEMICOLON VARSA .)
    LBRACKET        reduce using rule 9 (VARSB -> SEMICOLON VARSA .)


state 115

    (14) ARREGLO -> LSBRACKET pushParen EXP . RSBRACKET popParen pushDim ARREGLO2

    RSBRACKET       shift and go to state 152


state 116

    (73) EXP -> TERMINO . popPlusMinus
    (74) EXP -> TERMINO . popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> TERMINO . popPlusMinus MINUS pushPlusMinus EXP
    (122) popPlusMinus -> .

    PLUS            reduce using rule 122 (popPlusMinus -> .)
    MINUS           reduce using rule 122 (popPlusMinus -> .)
    RSBRACKET       reduce using rule 122 (popPlusMinus -> .)
    GREATER_THAN    reduce using rule 122 (popPlusMinus -> .)
    LESS_THAN       reduce using rule 122 (popPlusMinus -> .)
    NOT_EQUAL       reduce using rule 122 (popPlusMinus -> .)
    AND             reduce using rule 122 (popPlusMinus -> .)
    OR              reduce using rule 122 (popPlusMinus -> .)
    IS_EQUAL        reduce using rule 122 (popPlusMinus -> .)
    RPAREN          reduce using rule 122 (popPlusMinus -> .)
    COMMA           reduce using rule 122 (popPlusMinus -> .)
    TO              reduce using rule 122 (popPlusMinus -> .)
    SEMICOLON       reduce using rule 122 (popPlusMinus -> .)
    DO              reduce using rule 122 (popPlusMinus -> .)

    popPlusMinus                   shift and go to state 153

state 117

    (76) TERMINO -> FACTOR . popMultDiv
    (77) TERMINO -> FACTOR . popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> FACTOR . popMultDiv DIVIDE pushMultDiv TERMINO
    (121) popMultDiv -> .

    MULTIPLY        reduce using rule 121 (popMultDiv -> .)
    DIVIDE          reduce using rule 121 (popMultDiv -> .)
    PLUS            reduce using rule 121 (popMultDiv -> .)
    MINUS           reduce using rule 121 (popMultDiv -> .)
    RSBRACKET       reduce using rule 121 (popMultDiv -> .)
    GREATER_THAN    reduce using rule 121 (popMultDiv -> .)
    LESS_THAN       reduce using rule 121 (popMultDiv -> .)
    NOT_EQUAL       reduce using rule 121 (popMultDiv -> .)
    AND             reduce using rule 121 (popMultDiv -> .)
    OR              reduce using rule 121 (popMultDiv -> .)
    IS_EQUAL        reduce using rule 121 (popMultDiv -> .)
    RPAREN          reduce using rule 121 (popMultDiv -> .)
    COMMA           reduce using rule 121 (popMultDiv -> .)
    TO              reduce using rule 121 (popMultDiv -> .)
    SEMICOLON       reduce using rule 121 (popMultDiv -> .)
    DO              reduce using rule 121 (popMultDiv -> .)

    popMultDiv                     shift and go to state 154

state 118

    (79) FACTOR -> LPAREN . pushParen EXPRESION RPAREN popParen
    (132) pushParen -> .

    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 155

state 119

    (80) FACTOR -> VARCTE .

    MULTIPLY        reduce using rule 80 (FACTOR -> VARCTE .)
    DIVIDE          reduce using rule 80 (FACTOR -> VARCTE .)
    PLUS            reduce using rule 80 (FACTOR -> VARCTE .)
    MINUS           reduce using rule 80 (FACTOR -> VARCTE .)
    RSBRACKET       reduce using rule 80 (FACTOR -> VARCTE .)
    GREATER_THAN    reduce using rule 80 (FACTOR -> VARCTE .)
    LESS_THAN       reduce using rule 80 (FACTOR -> VARCTE .)
    NOT_EQUAL       reduce using rule 80 (FACTOR -> VARCTE .)
    AND             reduce using rule 80 (FACTOR -> VARCTE .)
    OR              reduce using rule 80 (FACTOR -> VARCTE .)
    IS_EQUAL        reduce using rule 80 (FACTOR -> VARCTE .)
    RPAREN          reduce using rule 80 (FACTOR -> VARCTE .)
    COMMA           reduce using rule 80 (FACTOR -> VARCTE .)
    TO              reduce using rule 80 (FACTOR -> VARCTE .)
    SEMICOLON       reduce using rule 80 (FACTOR -> VARCTE .)
    DO              reduce using rule 80 (FACTOR -> VARCTE .)


state 120

    (81) FACTOR -> LLAMADAMOD .

    MULTIPLY        reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    DIVIDE          reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    PLUS            reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    MINUS           reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    RSBRACKET       reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    GREATER_THAN    reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    LESS_THAN       reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    NOT_EQUAL       reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    AND             reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    OR              reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    IS_EQUAL        reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    RPAREN          reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    COMMA           reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    TO              reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    SEMICOLON       reduce using rule 81 (FACTOR -> LLAMADAMOD .)
    DO              reduce using rule 81 (FACTOR -> LLAMADAMOD .)


state 121

    (86) VARCTE -> ID . pushPilaOp ARREGLOCALL
    (82) LLAMADAMOD -> ID . pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> ID . pushEra LPAREN pushParen RPAREN pushGosub
    (131) pushPilaOp -> .
    (138) pushEra -> .

    LSBRACKET       reduce using rule 131 (pushPilaOp -> .)
    MULTIPLY        reduce using rule 131 (pushPilaOp -> .)
    DIVIDE          reduce using rule 131 (pushPilaOp -> .)
    PLUS            reduce using rule 131 (pushPilaOp -> .)
    MINUS           reduce using rule 131 (pushPilaOp -> .)
    RSBRACKET       reduce using rule 131 (pushPilaOp -> .)
    GREATER_THAN    reduce using rule 131 (pushPilaOp -> .)
    LESS_THAN       reduce using rule 131 (pushPilaOp -> .)
    NOT_EQUAL       reduce using rule 131 (pushPilaOp -> .)
    AND             reduce using rule 131 (pushPilaOp -> .)
    OR              reduce using rule 131 (pushPilaOp -> .)
    IS_EQUAL        reduce using rule 131 (pushPilaOp -> .)
    RPAREN          reduce using rule 131 (pushPilaOp -> .)
    COMMA           reduce using rule 131 (pushPilaOp -> .)
    TO              reduce using rule 131 (pushPilaOp -> .)
    SEMICOLON       reduce using rule 131 (pushPilaOp -> .)
    DO              reduce using rule 131 (pushPilaOp -> .)
    LPAREN          reduce using rule 138 (pushEra -> .)

    pushPilaOp                     shift and go to state 156
    pushEra                        shift and go to state 157

state 122

    (87) VARCTE -> C_INT . pushConstInt
    (127) pushConstInt -> .

    MULTIPLY        reduce using rule 127 (pushConstInt -> .)
    DIVIDE          reduce using rule 127 (pushConstInt -> .)
    PLUS            reduce using rule 127 (pushConstInt -> .)
    MINUS           reduce using rule 127 (pushConstInt -> .)
    RSBRACKET       reduce using rule 127 (pushConstInt -> .)
    GREATER_THAN    reduce using rule 127 (pushConstInt -> .)
    LESS_THAN       reduce using rule 127 (pushConstInt -> .)
    NOT_EQUAL       reduce using rule 127 (pushConstInt -> .)
    AND             reduce using rule 127 (pushConstInt -> .)
    OR              reduce using rule 127 (pushConstInt -> .)
    IS_EQUAL        reduce using rule 127 (pushConstInt -> .)
    RPAREN          reduce using rule 127 (pushConstInt -> .)
    COMMA           reduce using rule 127 (pushConstInt -> .)
    TO              reduce using rule 127 (pushConstInt -> .)
    SEMICOLON       reduce using rule 127 (pushConstInt -> .)
    DO              reduce using rule 127 (pushConstInt -> .)

    pushConstInt                   shift and go to state 158

state 123

    (88) VARCTE -> C_FLOAT . pushConstFloat
    (128) pushConstFloat -> .

    MULTIPLY        reduce using rule 128 (pushConstFloat -> .)
    DIVIDE          reduce using rule 128 (pushConstFloat -> .)
    PLUS            reduce using rule 128 (pushConstFloat -> .)
    MINUS           reduce using rule 128 (pushConstFloat -> .)
    RSBRACKET       reduce using rule 128 (pushConstFloat -> .)
    GREATER_THAN    reduce using rule 128 (pushConstFloat -> .)
    LESS_THAN       reduce using rule 128 (pushConstFloat -> .)
    NOT_EQUAL       reduce using rule 128 (pushConstFloat -> .)
    AND             reduce using rule 128 (pushConstFloat -> .)
    OR              reduce using rule 128 (pushConstFloat -> .)
    IS_EQUAL        reduce using rule 128 (pushConstFloat -> .)
    RPAREN          reduce using rule 128 (pushConstFloat -> .)
    COMMA           reduce using rule 128 (pushConstFloat -> .)
    TO              reduce using rule 128 (pushConstFloat -> .)
    SEMICOLON       reduce using rule 128 (pushConstFloat -> .)
    DO              reduce using rule 128 (pushConstFloat -> .)

    pushConstFloat                 shift and go to state 159

state 124

    (89) VARCTE -> C_CHAR . pushConstChar
    (129) pushConstChar -> .

    MULTIPLY        reduce using rule 129 (pushConstChar -> .)
    DIVIDE          reduce using rule 129 (pushConstChar -> .)
    PLUS            reduce using rule 129 (pushConstChar -> .)
    MINUS           reduce using rule 129 (pushConstChar -> .)
    RSBRACKET       reduce using rule 129 (pushConstChar -> .)
    GREATER_THAN    reduce using rule 129 (pushConstChar -> .)
    LESS_THAN       reduce using rule 129 (pushConstChar -> .)
    NOT_EQUAL       reduce using rule 129 (pushConstChar -> .)
    AND             reduce using rule 129 (pushConstChar -> .)
    OR              reduce using rule 129 (pushConstChar -> .)
    IS_EQUAL        reduce using rule 129 (pushConstChar -> .)
    RPAREN          reduce using rule 129 (pushConstChar -> .)
    COMMA           reduce using rule 129 (pushConstChar -> .)
    TO              reduce using rule 129 (pushConstChar -> .)
    SEMICOLON       reduce using rule 129 (pushConstChar -> .)
    DO              reduce using rule 129 (pushConstChar -> .)

    pushConstChar                  shift and go to state 160

state 125

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL . EQUALS pushEqual EXPRESION popIgual SEMICOLON

    EQUALS          shift and go to state 161


state 126

    (18) ARREGLOCALL -> LSBRACKET . pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2
    (132) pushParen -> .

    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 162

state 127

    (19) ARREGLOCALL -> empty .

    EQUALS          reduce using rule 19 (ARREGLOCALL -> empty .)
    MULTIPLY        reduce using rule 19 (ARREGLOCALL -> empty .)
    DIVIDE          reduce using rule 19 (ARREGLOCALL -> empty .)
    PLUS            reduce using rule 19 (ARREGLOCALL -> empty .)
    MINUS           reduce using rule 19 (ARREGLOCALL -> empty .)
    RSBRACKET       reduce using rule 19 (ARREGLOCALL -> empty .)
    GREATER_THAN    reduce using rule 19 (ARREGLOCALL -> empty .)
    LESS_THAN       reduce using rule 19 (ARREGLOCALL -> empty .)
    NOT_EQUAL       reduce using rule 19 (ARREGLOCALL -> empty .)
    AND             reduce using rule 19 (ARREGLOCALL -> empty .)
    OR              reduce using rule 19 (ARREGLOCALL -> empty .)
    IS_EQUAL        reduce using rule 19 (ARREGLOCALL -> empty .)
    RPAREN          reduce using rule 19 (ARREGLOCALL -> empty .)
    COMMA           reduce using rule 19 (ARREGLOCALL -> empty .)
    TO              reduce using rule 19 (ARREGLOCALL -> empty .)
    SEMICOLON       reduce using rule 19 (ARREGLOCALL -> empty .)
    DO              reduce using rule 19 (ARREGLOCALL -> empty .)


state 128

    (46) LLAMADA -> ID pushEra LPAREN . LLAMADAS
    (47) LLAMADA -> ID pushEra LPAREN . RPAREN SEMICOLON pushGosubLlamada
    (48) LLAMADAS -> . EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada
    (49) LLAMADAS -> . EXPRESION addParam COMMA LLAMADAS
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    RPAREN          shift and go to state 164
    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    LLAMADAS                       shift and go to state 163
    EXPRESION                      shift and go to state 165
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 129

    (50) RETORNO -> RETURN LPAREN EXPRESION . RPAREN popReturn SEMICOLON

    RPAREN          shift and go to state 166


state 130

    (66) EXPRESION -> EXP . popCondition
    (67) EXPRESION -> EXP . GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> EXP . LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> EXP . NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> EXP . AND pushCondition EXPRESION
    (71) EXPRESION -> EXP . OR pushCondition EXPRESION
    (72) EXPRESION -> EXP . IS_EQUAL pushCondition EXPRESION
    (119) popCondition -> .

    GREATER_THAN    shift and go to state 168
    LESS_THAN       shift and go to state 169
    NOT_EQUAL       shift and go to state 170
    AND             shift and go to state 171
    OR              shift and go to state 172
    IS_EQUAL        shift and go to state 173
    RPAREN          reduce using rule 119 (popCondition -> .)
    COMMA           reduce using rule 119 (popCondition -> .)
    TO              reduce using rule 119 (popCondition -> .)
    SEMICOLON       reduce using rule 119 (popCondition -> .)
    DO              reduce using rule 119 (popCondition -> .)

    popCondition                   shift and go to state 167

state 131

    (51) LECTURA -> READ LPAREN LECTURAS .

    RBRACKET        reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    ID              reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    RETURN          reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    READ            reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    WRITE           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    IF              reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    WHILE           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    FROM            reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    LINE            reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    POINT           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    CIRCLE          reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    ARC             reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    PENUP           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    PENDOWN         reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    COLOR           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    SIZE            reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)
    CLEAR           reduce using rule 51 (LECTURA -> READ LPAREN LECTURAS .)


state 132

    (52) LECTURAS -> ID . pushPilaOp COMMA popRead LECTURAS
    (53) LECTURAS -> ID . pushPilaOp RPAREN SEMICOLON popRead
    (131) pushPilaOp -> .

    COMMA           reduce using rule 131 (pushPilaOp -> .)
    RPAREN          reduce using rule 131 (pushPilaOp -> .)

    pushPilaOp                     shift and go to state 174

state 133

    (54) ESCRITURA -> WRITE LPAREN ESCRITURAA .

    RBRACKET        reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    ID              reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    RETURN          reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    READ            reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    WRITE           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    IF              reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    WHILE           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    FROM            reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    LINE            reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    POINT           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    CIRCLE          reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    ARC             reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    PENUP           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    PENDOWN         reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    COLOR           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    SIZE            reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)
    CLEAR           reduce using rule 54 (ESCRITURA -> WRITE LPAREN ESCRITURAA .)


state 134

    (55) ESCRITURAA -> C_STRING . pushConstString COMMA popWrite ESCRITURAA
    (56) ESCRITURAA -> C_STRING . pushConstString RPAREN SEMICOLON popWrite addWriteEnd
    (130) pushConstString -> .

    COMMA           reduce using rule 130 (pushConstString -> .)
    RPAREN          reduce using rule 130 (pushConstString -> .)

    pushConstString                shift and go to state 175

state 135

    (57) ESCRITURAA -> EXPRESION . COMMA popWrite ESCRITURAA
    (58) ESCRITURAA -> EXPRESION . RPAREN SEMICOLON popWrite addWriteEnd

    COMMA           shift and go to state 176
    RPAREN          shift and go to state 177


state 136

    (59) DECISION -> IF LPAREN EXPRESION . RPAREN pushGotoF THEN BLOQUE SINO

    RPAREN          shift and go to state 178


state 137

    (64) COND -> WHILE pushSalto LPAREN . EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 179
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 138

    (65) NOCOND -> FROM ID pushFromId . EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom

    EQUALS          shift and go to state 180


state 139

    (99) FLINE -> LINE LPAREN EXPRESION . COMMA EXPRESION RPAREN popLine SEMICOLON

    COMMA           shift and go to state 181


state 140

    (102) FPOINT -> POINT LPAREN EXPRESION . FILLCOLOR RPAREN popPoint SEMICOLON
    (100) FILLCOLOR -> . COMMA C_STRING pushConstString hasColor
    (101) FILLCOLOR -> . empty
    (110) empty -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 110 (empty -> .)

    FILLCOLOR                      shift and go to state 182
    empty                          shift and go to state 184

state 141

    (103) FCIRCLE -> CIRCLE LPAREN EXPRESION . FILLCOLOR RPAREN popCircle SEMICOLON
    (100) FILLCOLOR -> . COMMA C_STRING pushConstString hasColor
    (101) FILLCOLOR -> . empty
    (110) empty -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 110 (empty -> .)

    FILLCOLOR                      shift and go to state 185
    empty                          shift and go to state 184

state 142

    (104) FARC -> ARC LPAREN EXPRESION . COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON

    COMMA           shift and go to state 186


state 143

    (105) FPENUP -> PENUP LPAREN RPAREN . popPenup SEMICOLON
    (147) popPenup -> .

    SEMICOLON       reduce using rule 147 (popPenup -> .)

    popPenup                       shift and go to state 187

state 144

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION . COMMA EXPRESION RPAREN popPendown SEMICOLON

    COMMA           shift and go to state 188


state 145

    (107) FCOLOR -> COLOR LPAREN C_STRING . pushConstString RPAREN popColor SEMICOLON
    (130) pushConstString -> .

    RPAREN          reduce using rule 130 (pushConstString -> .)

    pushConstString                shift and go to state 189

state 146

    (108) FSIZE -> SIZE LPAREN EXPRESION . COMMA EXPRESION RPAREN popSize SEMICOLON

    COMMA           shift and go to state 190


state 147

    (109) FCLEAR -> CLEAR LPAREN RPAREN . popClear SEMICOLON
    (151) popClear -> .

    SEMICOLON       reduce using rule 151 (popClear -> .)

    popClear                       shift and go to state 191

state 148

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON . FUNCSB
    (27) FUNCSB -> . VARS addVarsFunc BLOQUE endFunc
    (28) FUNCSB -> . addVarsFunc BLOQUE endFunc
    (6) VARS -> . emptyVars VAR VARSA
    (116) addVarsFunc -> .
    (112) emptyVars -> .

    LBRACKET        reduce using rule 116 (addVarsFunc -> .)
    VAR             reduce using rule 112 (emptyVars -> .)

    FUNCSB                         shift and go to state 192
    VARS                           shift and go to state 193
    addVarsFunc                    shift and go to state 194
    emptyVars                      shift and go to state 9

state 149

    (32) PARAMSL -> PARAMSL COMMA TIPO . ID addVarLista

    ID              shift and go to state 195


state 150

    (31) PARAMSL -> TIPO ID addVarLista .

    COMMA           reduce using rule 31 (PARAMSL -> TIPO ID addVarLista .)
    RPAREN          reduce using rule 31 (PARAMSL -> TIPO ID addVarLista .)


state 151

    (8) VARSB -> COMMA ID addVarLista . ARREGLO VARSB
    (14) ARREGLO -> . LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2
    (15) ARREGLO -> . empty
    (110) empty -> .

    LSBRACKET       shift and go to state 43
    COMMA           reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)

    ARREGLO                        shift and go to state 196
    empty                          shift and go to state 44

state 152

    (14) ARREGLO -> LSBRACKET pushParen EXP RSBRACKET . popParen pushDim ARREGLO2
    (133) popParen -> .

    LSBRACKET       reduce using rule 133 (popParen -> .)
    COMMA           reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 197

state 153

    (73) EXP -> TERMINO popPlusMinus .
    (74) EXP -> TERMINO popPlusMinus . PLUS pushPlusMinus EXP
    (75) EXP -> TERMINO popPlusMinus . MINUS pushPlusMinus EXP

    RSBRACKET       reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    GREATER_THAN    reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    LESS_THAN       reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    NOT_EQUAL       reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    AND             reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    OR              reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    IS_EQUAL        reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    RPAREN          reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    COMMA           reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    TO              reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    SEMICOLON       reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    DO              reduce using rule 73 (EXP -> TERMINO popPlusMinus .)
    PLUS            shift and go to state 198
    MINUS           shift and go to state 199


state 154

    (76) TERMINO -> FACTOR popMultDiv .
    (77) TERMINO -> FACTOR popMultDiv . MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> FACTOR popMultDiv . DIVIDE pushMultDiv TERMINO

    PLUS            reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    MINUS           reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    RSBRACKET       reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    GREATER_THAN    reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    LESS_THAN       reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    NOT_EQUAL       reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    AND             reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    OR              reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    IS_EQUAL        reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    RPAREN          reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    COMMA           reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    TO              reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    SEMICOLON       reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    DO              reduce using rule 76 (TERMINO -> FACTOR popMultDiv .)
    MULTIPLY        shift and go to state 200
    DIVIDE          shift and go to state 201


state 155

    (79) FACTOR -> LPAREN pushParen . EXPRESION RPAREN popParen
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 202
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 156

    (86) VARCTE -> ID pushPilaOp . ARREGLOCALL
    (18) ARREGLOCALL -> . LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2
    (19) ARREGLOCALL -> . empty
    (110) empty -> .

    LSBRACKET       shift and go to state 126
    MULTIPLY        reduce using rule 110 (empty -> .)
    DIVIDE          reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    RSBRACKET       reduce using rule 110 (empty -> .)
    GREATER_THAN    reduce using rule 110 (empty -> .)
    LESS_THAN       reduce using rule 110 (empty -> .)
    NOT_EQUAL       reduce using rule 110 (empty -> .)
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    IS_EQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    TO              reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    DO              reduce using rule 110 (empty -> .)

    ARREGLOCALL                    shift and go to state 203
    empty                          shift and go to state 127

state 157

    (82) LLAMADAMOD -> ID pushEra . LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> ID pushEra . LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 204


state 158

    (87) VARCTE -> C_INT pushConstInt .

    MULTIPLY        reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    DIVIDE          reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    PLUS            reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    MINUS           reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    RSBRACKET       reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    GREATER_THAN    reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    LESS_THAN       reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    NOT_EQUAL       reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    AND             reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    OR              reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    IS_EQUAL        reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    RPAREN          reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    COMMA           reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    TO              reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    SEMICOLON       reduce using rule 87 (VARCTE -> C_INT pushConstInt .)
    DO              reduce using rule 87 (VARCTE -> C_INT pushConstInt .)


state 159

    (88) VARCTE -> C_FLOAT pushConstFloat .

    MULTIPLY        reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    DIVIDE          reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    PLUS            reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    MINUS           reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    RSBRACKET       reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    GREATER_THAN    reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    LESS_THAN       reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    NOT_EQUAL       reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    AND             reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    OR              reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    IS_EQUAL        reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    RPAREN          reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    COMMA           reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    TO              reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    SEMICOLON       reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)
    DO              reduce using rule 88 (VARCTE -> C_FLOAT pushConstFloat .)


state 160

    (89) VARCTE -> C_CHAR pushConstChar .

    MULTIPLY        reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    DIVIDE          reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    PLUS            reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    MINUS           reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    RSBRACKET       reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    GREATER_THAN    reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    LESS_THAN       reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    NOT_EQUAL       reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    AND             reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    OR              reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    IS_EQUAL        reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    RPAREN          reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    COMMA           reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    TO              reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    SEMICOLON       reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)
    DO              reduce using rule 89 (VARCTE -> C_CHAR pushConstChar .)


state 161

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS . pushEqual EXPRESION popIgual SEMICOLON
    (123) pushEqual -> .

    LPAREN          reduce using rule 123 (pushEqual -> .)
    ID              reduce using rule 123 (pushEqual -> .)
    C_INT           reduce using rule 123 (pushEqual -> .)
    C_FLOAT         reduce using rule 123 (pushEqual -> .)
    C_CHAR          reduce using rule 123 (pushEqual -> .)

    pushEqual                      shift and go to state 205

state 162

    (18) ARREGLOCALL -> LSBRACKET pushParen . EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 206
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 163

    (46) LLAMADA -> ID pushEra LPAREN LLAMADAS .

    RBRACKET        reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    ID              reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    RETURN          reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    READ            reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    WRITE           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    IF              reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    WHILE           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    FROM            reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    LINE            reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    POINT           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    CIRCLE          reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    ARC             reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    PENUP           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    PENDOWN         reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    COLOR           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    SIZE            reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)
    CLEAR           reduce using rule 46 (LLAMADA -> ID pushEra LPAREN LLAMADAS .)


state 164

    (47) LLAMADA -> ID pushEra LPAREN RPAREN . SEMICOLON pushGosubLlamada

    SEMICOLON       shift and go to state 207


state 165

    (48) LLAMADAS -> EXPRESION . addParam RPAREN verifyParams SEMICOLON pushGosubLlamada
    (49) LLAMADAS -> EXPRESION . addParam COMMA LLAMADAS
    (134) addParam -> .

    RPAREN          reduce using rule 134 (addParam -> .)
    COMMA           reduce using rule 134 (addParam -> .)

    addParam                       shift and go to state 208

state 166

    (50) RETORNO -> RETURN LPAREN EXPRESION RPAREN . popReturn SEMICOLON
    (152) popReturn -> .

    SEMICOLON       reduce using rule 152 (popReturn -> .)

    popReturn                      shift and go to state 209

state 167

    (66) EXPRESION -> EXP popCondition .

    RPAREN          reduce using rule 66 (EXPRESION -> EXP popCondition .)
    COMMA           reduce using rule 66 (EXPRESION -> EXP popCondition .)
    TO              reduce using rule 66 (EXPRESION -> EXP popCondition .)
    SEMICOLON       reduce using rule 66 (EXPRESION -> EXP popCondition .)
    DO              reduce using rule 66 (EXPRESION -> EXP popCondition .)


state 168

    (67) EXPRESION -> EXP GREATER_THAN . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 210

state 169

    (68) EXPRESION -> EXP LESS_THAN . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 211

state 170

    (69) EXPRESION -> EXP NOT_EQUAL . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 212

state 171

    (70) EXPRESION -> EXP AND . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 213

state 172

    (71) EXPRESION -> EXP OR . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 214

state 173

    (72) EXPRESION -> EXP IS_EQUAL . pushCondition EXPRESION
    (126) pushCondition -> .

    LPAREN          reduce using rule 126 (pushCondition -> .)
    ID              reduce using rule 126 (pushCondition -> .)
    C_INT           reduce using rule 126 (pushCondition -> .)
    C_FLOAT         reduce using rule 126 (pushCondition -> .)
    C_CHAR          reduce using rule 126 (pushCondition -> .)

    pushCondition                  shift and go to state 215

state 174

    (52) LECTURAS -> ID pushPilaOp . COMMA popRead LECTURAS
    (53) LECTURAS -> ID pushPilaOp . RPAREN SEMICOLON popRead

    COMMA           shift and go to state 216
    RPAREN          shift and go to state 217


state 175

    (55) ESCRITURAA -> C_STRING pushConstString . COMMA popWrite ESCRITURAA
    (56) ESCRITURAA -> C_STRING pushConstString . RPAREN SEMICOLON popWrite addWriteEnd

    COMMA           shift and go to state 218
    RPAREN          shift and go to state 219


state 176

    (57) ESCRITURAA -> EXPRESION COMMA . popWrite ESCRITURAA
    (139) popWrite -> .

    C_STRING        reduce using rule 139 (popWrite -> .)
    LPAREN          reduce using rule 139 (popWrite -> .)
    ID              reduce using rule 139 (popWrite -> .)
    C_INT           reduce using rule 139 (popWrite -> .)
    C_FLOAT         reduce using rule 139 (popWrite -> .)
    C_CHAR          reduce using rule 139 (popWrite -> .)

    popWrite                       shift and go to state 220

state 177

    (58) ESCRITURAA -> EXPRESION RPAREN . SEMICOLON popWrite addWriteEnd

    SEMICOLON       shift and go to state 221


state 178

    (59) DECISION -> IF LPAREN EXPRESION RPAREN . pushGotoF THEN BLOQUE SINO
    (153) pushGotoF -> .

    THEN            reduce using rule 153 (pushGotoF -> .)

    pushGotoF                      shift and go to state 222

state 179

    (64) COND -> WHILE pushSalto LPAREN EXPRESION . RPAREN pushGotoF DO BLOQUE rellenarWhile

    RPAREN          shift and go to state 223


state 180

    (65) NOCOND -> FROM ID pushFromId EQUALS . EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 224
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 181

    (99) FLINE -> LINE LPAREN EXPRESION COMMA . EXPRESION RPAREN popLine SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 225
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 182

    (102) FPOINT -> POINT LPAREN EXPRESION FILLCOLOR . RPAREN popPoint SEMICOLON

    RPAREN          shift and go to state 226


state 183

    (100) FILLCOLOR -> COMMA . C_STRING pushConstString hasColor

    C_STRING        shift and go to state 227


state 184

    (101) FILLCOLOR -> empty .

    RPAREN          reduce using rule 101 (FILLCOLOR -> empty .)


state 185

    (103) FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR . RPAREN popCircle SEMICOLON

    RPAREN          shift and go to state 228


state 186

    (104) FARC -> ARC LPAREN EXPRESION COMMA . EXPRESION FILLCOLOR RPAREN popArc SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 229
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 187

    (105) FPENUP -> PENUP LPAREN RPAREN popPenup . SEMICOLON

    SEMICOLON       shift and go to state 230


state 188

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA . EXPRESION RPAREN popPendown SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 231
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 189

    (107) FCOLOR -> COLOR LPAREN C_STRING pushConstString . RPAREN popColor SEMICOLON

    RPAREN          shift and go to state 232


state 190

    (108) FSIZE -> SIZE LPAREN EXPRESION COMMA . EXPRESION RPAREN popSize SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 233
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 191

    (109) FCLEAR -> CLEAR LPAREN RPAREN popClear . SEMICOLON

    SEMICOLON       shift and go to state 234


state 192

    (26) FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB .

    MODULE          reduce using rule 26 (FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB .)
    MAIN            reduce using rule 26 (FUNC -> MODULE TIPOFUNC ID addFunc LPAREN PARAMS addParamsFunc RPAREN SEMICOLON FUNCSB .)


state 193

    (27) FUNCSB -> VARS . addVarsFunc BLOQUE endFunc
    (116) addVarsFunc -> .

    LBRACKET        reduce using rule 116 (addVarsFunc -> .)

    addVarsFunc                    shift and go to state 235

state 194

    (28) FUNCSB -> addVarsFunc . BLOQUE endFunc
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 236

state 195

    (32) PARAMSL -> PARAMSL COMMA TIPO ID . addVarLista
    (113) addVarLista -> .

    COMMA           reduce using rule 113 (addVarLista -> .)
    RPAREN          reduce using rule 113 (addVarLista -> .)

    addVarLista                    shift and go to state 237

state 196

    (8) VARSB -> COMMA ID addVarLista ARREGLO . VARSB
    (8) VARSB -> . COMMA ID addVarLista ARREGLO VARSB
    (9) VARSB -> . SEMICOLON VARSA
    (10) VARSB -> . SEMICOLON

    COMMA           shift and go to state 88
    SEMICOLON       shift and go to state 89

    VARSB                          shift and go to state 238

state 197

    (14) ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen . pushDim ARREGLO2
    (163) pushDim -> .

    LSBRACKET       reduce using rule 163 (pushDim -> .)
    COMMA           reduce using rule 163 (pushDim -> .)
    SEMICOLON       reduce using rule 163 (pushDim -> .)

    pushDim                        shift and go to state 239

state 198

    (74) EXP -> TERMINO popPlusMinus PLUS . pushPlusMinus EXP
    (125) pushPlusMinus -> .

    LPAREN          reduce using rule 125 (pushPlusMinus -> .)
    ID              reduce using rule 125 (pushPlusMinus -> .)
    C_INT           reduce using rule 125 (pushPlusMinus -> .)
    C_FLOAT         reduce using rule 125 (pushPlusMinus -> .)
    C_CHAR          reduce using rule 125 (pushPlusMinus -> .)

    pushPlusMinus                  shift and go to state 240

state 199

    (75) EXP -> TERMINO popPlusMinus MINUS . pushPlusMinus EXP
    (125) pushPlusMinus -> .

    LPAREN          reduce using rule 125 (pushPlusMinus -> .)
    ID              reduce using rule 125 (pushPlusMinus -> .)
    C_INT           reduce using rule 125 (pushPlusMinus -> .)
    C_FLOAT         reduce using rule 125 (pushPlusMinus -> .)
    C_CHAR          reduce using rule 125 (pushPlusMinus -> .)

    pushPlusMinus                  shift and go to state 241

state 200

    (77) TERMINO -> FACTOR popMultDiv MULTIPLY . pushMultDiv TERMINO
    (124) pushMultDiv -> .

    LPAREN          reduce using rule 124 (pushMultDiv -> .)
    ID              reduce using rule 124 (pushMultDiv -> .)
    C_INT           reduce using rule 124 (pushMultDiv -> .)
    C_FLOAT         reduce using rule 124 (pushMultDiv -> .)
    C_CHAR          reduce using rule 124 (pushMultDiv -> .)

    pushMultDiv                    shift and go to state 242

state 201

    (78) TERMINO -> FACTOR popMultDiv DIVIDE . pushMultDiv TERMINO
    (124) pushMultDiv -> .

    LPAREN          reduce using rule 124 (pushMultDiv -> .)
    ID              reduce using rule 124 (pushMultDiv -> .)
    C_INT           reduce using rule 124 (pushMultDiv -> .)
    C_FLOAT         reduce using rule 124 (pushMultDiv -> .)
    C_CHAR          reduce using rule 124 (pushMultDiv -> .)

    pushMultDiv                    shift and go to state 243

state 202

    (79) FACTOR -> LPAREN pushParen EXPRESION . RPAREN popParen

    RPAREN          shift and go to state 244


state 203

    (86) VARCTE -> ID pushPilaOp ARREGLOCALL .

    MULTIPLY        reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    DIVIDE          reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    PLUS            reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    MINUS           reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    RSBRACKET       reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    GREATER_THAN    reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    LESS_THAN       reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    NOT_EQUAL       reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    AND             reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    OR              reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    IS_EQUAL        reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    RPAREN          reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    COMMA           reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    TO              reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    SEMICOLON       reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)
    DO              reduce using rule 86 (VARCTE -> ID pushPilaOp ARREGLOCALL .)


state 204

    (82) LLAMADAMOD -> ID pushEra LPAREN . pushParen LLAMADAMODS
    (83) LLAMADAMOD -> ID pushEra LPAREN . pushParen RPAREN pushGosub
    (132) pushParen -> .

    RPAREN          reduce using rule 132 (pushParen -> .)
    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 245

state 205

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual . EXPRESION popIgual SEMICOLON
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 246
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 206

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP . RSBRACKET popParen verifyDim calculateDir ARREGLOC2

    RSBRACKET       shift and go to state 247


state 207

    (47) LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON . pushGosubLlamada
    (137) pushGosubLlamada -> .

    RBRACKET        reduce using rule 137 (pushGosubLlamada -> .)
    ID              reduce using rule 137 (pushGosubLlamada -> .)
    RETURN          reduce using rule 137 (pushGosubLlamada -> .)
    READ            reduce using rule 137 (pushGosubLlamada -> .)
    WRITE           reduce using rule 137 (pushGosubLlamada -> .)
    IF              reduce using rule 137 (pushGosubLlamada -> .)
    WHILE           reduce using rule 137 (pushGosubLlamada -> .)
    FROM            reduce using rule 137 (pushGosubLlamada -> .)
    LINE            reduce using rule 137 (pushGosubLlamada -> .)
    POINT           reduce using rule 137 (pushGosubLlamada -> .)
    CIRCLE          reduce using rule 137 (pushGosubLlamada -> .)
    ARC             reduce using rule 137 (pushGosubLlamada -> .)
    PENUP           reduce using rule 137 (pushGosubLlamada -> .)
    PENDOWN         reduce using rule 137 (pushGosubLlamada -> .)
    COLOR           reduce using rule 137 (pushGosubLlamada -> .)
    SIZE            reduce using rule 137 (pushGosubLlamada -> .)
    CLEAR           reduce using rule 137 (pushGosubLlamada -> .)

    pushGosubLlamada               shift and go to state 248

state 208

    (48) LLAMADAS -> EXPRESION addParam . RPAREN verifyParams SEMICOLON pushGosubLlamada
    (49) LLAMADAS -> EXPRESION addParam . COMMA LLAMADAS

    RPAREN          shift and go to state 249
    COMMA           shift and go to state 250


state 209

    (50) RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn . SEMICOLON

    SEMICOLON       shift and go to state 251


state 210

    (67) EXPRESION -> EXP GREATER_THAN pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 252
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 211

    (68) EXPRESION -> EXP LESS_THAN pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 253
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 212

    (69) EXPRESION -> EXP NOT_EQUAL pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 254
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 213

    (70) EXPRESION -> EXP AND pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 255
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 214

    (71) EXPRESION -> EXP OR pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 256
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 215

    (72) EXPRESION -> EXP IS_EQUAL pushCondition . EXPRESION
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 130
    EXPRESION                      shift and go to state 257
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 216

    (52) LECTURAS -> ID pushPilaOp COMMA . popRead LECTURAS
    (141) popRead -> .

    ID              reduce using rule 141 (popRead -> .)

    popRead                        shift and go to state 258

state 217

    (53) LECTURAS -> ID pushPilaOp RPAREN . SEMICOLON popRead

    SEMICOLON       shift and go to state 259


state 218

    (55) ESCRITURAA -> C_STRING pushConstString COMMA . popWrite ESCRITURAA
    (139) popWrite -> .

    C_STRING        reduce using rule 139 (popWrite -> .)
    LPAREN          reduce using rule 139 (popWrite -> .)
    ID              reduce using rule 139 (popWrite -> .)
    C_INT           reduce using rule 139 (popWrite -> .)
    C_FLOAT         reduce using rule 139 (popWrite -> .)
    C_CHAR          reduce using rule 139 (popWrite -> .)

    popWrite                       shift and go to state 260

state 219

    (56) ESCRITURAA -> C_STRING pushConstString RPAREN . SEMICOLON popWrite addWriteEnd

    SEMICOLON       shift and go to state 261


state 220

    (57) ESCRITURAA -> EXPRESION COMMA popWrite . ESCRITURAA
    (55) ESCRITURAA -> . C_STRING pushConstString COMMA popWrite ESCRITURAA
    (56) ESCRITURAA -> . C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd
    (57) ESCRITURAA -> . EXPRESION COMMA popWrite ESCRITURAA
    (58) ESCRITURAA -> . EXPRESION RPAREN SEMICOLON popWrite addWriteEnd
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    C_STRING        shift and go to state 134
    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 135
    ESCRITURAA                     shift and go to state 262
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 221

    (58) ESCRITURAA -> EXPRESION RPAREN SEMICOLON . popWrite addWriteEnd
    (139) popWrite -> .

    RBRACKET        reduce using rule 139 (popWrite -> .)
    ID              reduce using rule 139 (popWrite -> .)
    RETURN          reduce using rule 139 (popWrite -> .)
    READ            reduce using rule 139 (popWrite -> .)
    WRITE           reduce using rule 139 (popWrite -> .)
    IF              reduce using rule 139 (popWrite -> .)
    WHILE           reduce using rule 139 (popWrite -> .)
    FROM            reduce using rule 139 (popWrite -> .)
    LINE            reduce using rule 139 (popWrite -> .)
    POINT           reduce using rule 139 (popWrite -> .)
    CIRCLE          reduce using rule 139 (popWrite -> .)
    ARC             reduce using rule 139 (popWrite -> .)
    PENUP           reduce using rule 139 (popWrite -> .)
    PENDOWN         reduce using rule 139 (popWrite -> .)
    COLOR           reduce using rule 139 (popWrite -> .)
    SIZE            reduce using rule 139 (popWrite -> .)
    CLEAR           reduce using rule 139 (popWrite -> .)

    popWrite                       shift and go to state 263

state 222

    (59) DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF . THEN BLOQUE SINO

    THEN            shift and go to state 264


state 223

    (64) COND -> WHILE pushSalto LPAREN EXPRESION RPAREN . pushGotoF DO BLOQUE rellenarWhile
    (153) pushGotoF -> .

    DO              reduce using rule 153 (pushGotoF -> .)

    pushGotoF                      shift and go to state 265

state 224

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION . pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom
    (159) pushVC -> .

    TO              reduce using rule 159 (pushVC -> .)

    pushVC                         shift and go to state 266

state 225

    (99) FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION . RPAREN popLine SEMICOLON

    RPAREN          shift and go to state 267


state 226

    (102) FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN . popPoint SEMICOLON
    (144) popPoint -> .

    SEMICOLON       reduce using rule 144 (popPoint -> .)

    popPoint                       shift and go to state 268

state 227

    (100) FILLCOLOR -> COMMA C_STRING . pushConstString hasColor
    (130) pushConstString -> .

    RPAREN          reduce using rule 130 (pushConstString -> .)

    pushConstString                shift and go to state 269

state 228

    (103) FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN . popCircle SEMICOLON
    (145) popCircle -> .

    SEMICOLON       reduce using rule 145 (popCircle -> .)

    popCircle                      shift and go to state 270

state 229

    (104) FARC -> ARC LPAREN EXPRESION COMMA EXPRESION . FILLCOLOR RPAREN popArc SEMICOLON
    (100) FILLCOLOR -> . COMMA C_STRING pushConstString hasColor
    (101) FILLCOLOR -> . empty
    (110) empty -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 110 (empty -> .)

    FILLCOLOR                      shift and go to state 271
    empty                          shift and go to state 184

state 230

    (105) FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .

    RBRACKET        reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    ID              reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    RETURN          reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    READ            reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    WRITE           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    IF              reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    WHILE           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    FROM            reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    LINE            reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    POINT           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    CIRCLE          reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    ARC             reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    PENUP           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    PENDOWN         reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    COLOR           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    SIZE            reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)
    CLEAR           reduce using rule 105 (FPENUP -> PENUP LPAREN RPAREN popPenup SEMICOLON .)


state 231

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION . RPAREN popPendown SEMICOLON

    RPAREN          shift and go to state 272


state 232

    (107) FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN . popColor SEMICOLON
    (149) popColor -> .

    SEMICOLON       reduce using rule 149 (popColor -> .)

    popColor                       shift and go to state 273

state 233

    (108) FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION . RPAREN popSize SEMICOLON

    RPAREN          shift and go to state 274


state 234

    (109) FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .

    RBRACKET        reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    ID              reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    RETURN          reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    READ            reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    WRITE           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    IF              reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    WHILE           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    FROM            reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    LINE            reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    POINT           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    CIRCLE          reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    ARC             reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    PENUP           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    PENDOWN         reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    COLOR           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    SIZE            reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)
    CLEAR           reduce using rule 109 (FCLEAR -> CLEAR LPAREN RPAREN popClear SEMICOLON .)


state 235

    (27) FUNCSB -> VARS addVarsFunc . BLOQUE endFunc
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 275

state 236

    (28) FUNCSB -> addVarsFunc BLOQUE . endFunc
    (117) endFunc -> .

    MODULE          reduce using rule 117 (endFunc -> .)
    MAIN            reduce using rule 117 (endFunc -> .)

    endFunc                        shift and go to state 276

state 237

    (32) PARAMSL -> PARAMSL COMMA TIPO ID addVarLista .

    COMMA           reduce using rule 32 (PARAMSL -> PARAMSL COMMA TIPO ID addVarLista .)
    RPAREN          reduce using rule 32 (PARAMSL -> PARAMSL COMMA TIPO ID addVarLista .)


state 238

    (8) VARSB -> COMMA ID addVarLista ARREGLO VARSB .

    MODULE          reduce using rule 8 (VARSB -> COMMA ID addVarLista ARREGLO VARSB .)
    MAIN            reduce using rule 8 (VARSB -> COMMA ID addVarLista ARREGLO VARSB .)
    LBRACKET        reduce using rule 8 (VARSB -> COMMA ID addVarLista ARREGLO VARSB .)


state 239

    (14) ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim . ARREGLO2
    (16) ARREGLO2 -> . LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen
    (17) ARREGLO2 -> . addArreglo
    (164) addArreglo -> .

    LSBRACKET       shift and go to state 277
    COMMA           reduce using rule 164 (addArreglo -> .)
    SEMICOLON       reduce using rule 164 (addArreglo -> .)

    ARREGLO2                       shift and go to state 278
    addArreglo                     shift and go to state 279

state 240

    (74) EXP -> TERMINO popPlusMinus PLUS pushPlusMinus . EXP
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    TERMINO                        shift and go to state 116
    EXP                            shift and go to state 280
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 241

    (75) EXP -> TERMINO popPlusMinus MINUS pushPlusMinus . EXP
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    TERMINO                        shift and go to state 116
    EXP                            shift and go to state 281
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 242

    (77) TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv . TERMINO
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    FACTOR                         shift and go to state 117
    TERMINO                        shift and go to state 282
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 243

    (78) TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv . TERMINO
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    FACTOR                         shift and go to state 117
    TERMINO                        shift and go to state 283
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 244

    (79) FACTOR -> LPAREN pushParen EXPRESION RPAREN . popParen
    (133) popParen -> .

    MULTIPLY        reduce using rule 133 (popParen -> .)
    DIVIDE          reduce using rule 133 (popParen -> .)
    PLUS            reduce using rule 133 (popParen -> .)
    MINUS           reduce using rule 133 (popParen -> .)
    RSBRACKET       reduce using rule 133 (popParen -> .)
    GREATER_THAN    reduce using rule 133 (popParen -> .)
    LESS_THAN       reduce using rule 133 (popParen -> .)
    NOT_EQUAL       reduce using rule 133 (popParen -> .)
    AND             reduce using rule 133 (popParen -> .)
    OR              reduce using rule 133 (popParen -> .)
    IS_EQUAL        reduce using rule 133 (popParen -> .)
    RPAREN          reduce using rule 133 (popParen -> .)
    COMMA           reduce using rule 133 (popParen -> .)
    TO              reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)
    DO              reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 284

state 245

    (82) LLAMADAMOD -> ID pushEra LPAREN pushParen . LLAMADAMODS
    (83) LLAMADAMOD -> ID pushEra LPAREN pushParen . RPAREN pushGosub
    (84) LLAMADAMODS -> . EXPRESION addParam RPAREN popParen verifyParams pushGosub
    (85) LLAMADAMODS -> . EXPRESION addParam COMMA LLAMADAMODS
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    RPAREN          shift and go to state 286
    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    LLAMADAMODS                    shift and go to state 285
    EXPRESION                      shift and go to state 287
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 246

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION . popIgual SEMICOLON
    (120) popIgual -> .

    SEMICOLON       reduce using rule 120 (popIgual -> .)

    popIgual                       shift and go to state 288

state 247

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET . popParen verifyDim calculateDir ARREGLOC2
    (133) popParen -> .

    LSBRACKET       reduce using rule 133 (popParen -> .)
    EQUALS          reduce using rule 133 (popParen -> .)
    MULTIPLY        reduce using rule 133 (popParen -> .)
    DIVIDE          reduce using rule 133 (popParen -> .)
    PLUS            reduce using rule 133 (popParen -> .)
    MINUS           reduce using rule 133 (popParen -> .)
    RSBRACKET       reduce using rule 133 (popParen -> .)
    GREATER_THAN    reduce using rule 133 (popParen -> .)
    LESS_THAN       reduce using rule 133 (popParen -> .)
    NOT_EQUAL       reduce using rule 133 (popParen -> .)
    AND             reduce using rule 133 (popParen -> .)
    OR              reduce using rule 133 (popParen -> .)
    IS_EQUAL        reduce using rule 133 (popParen -> .)
    RPAREN          reduce using rule 133 (popParen -> .)
    COMMA           reduce using rule 133 (popParen -> .)
    TO              reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)
    DO              reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 289

state 248

    (47) LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .

    RBRACKET        reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    ID              reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    RETURN          reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    READ            reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    WRITE           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    IF              reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    WHILE           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    FROM            reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    LINE            reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    POINT           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    CIRCLE          reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    ARC             reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    PENUP           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    PENDOWN         reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    COLOR           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    SIZE            reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)
    CLEAR           reduce using rule 47 (LLAMADA -> ID pushEra LPAREN RPAREN SEMICOLON pushGosubLlamada .)


state 249

    (48) LLAMADAS -> EXPRESION addParam RPAREN . verifyParams SEMICOLON pushGosubLlamada
    (135) verifyParams -> .

    SEMICOLON       reduce using rule 135 (verifyParams -> .)

    verifyParams                   shift and go to state 290

state 250

    (49) LLAMADAS -> EXPRESION addParam COMMA . LLAMADAS
    (48) LLAMADAS -> . EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada
    (49) LLAMADAS -> . EXPRESION addParam COMMA LLAMADAS
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 165
    LLAMADAS                       shift and go to state 291
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 251

    (50) RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .

    RBRACKET        reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    ID              reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    RETURN          reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    READ            reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    WRITE           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    IF              reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    WHILE           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    FROM            reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    LINE            reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    POINT           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    CIRCLE          reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    ARC             reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    PENUP           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    PENDOWN         reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    COLOR           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    SIZE            reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)
    CLEAR           reduce using rule 50 (RETORNO -> RETURN LPAREN EXPRESION RPAREN popReturn SEMICOLON .)


state 252

    (67) EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .

    RPAREN          reduce using rule 67 (EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .)
    COMMA           reduce using rule 67 (EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .)
    TO              reduce using rule 67 (EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 67 (EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .)
    DO              reduce using rule 67 (EXPRESION -> EXP GREATER_THAN pushCondition EXPRESION .)


state 253

    (68) EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .

    RPAREN          reduce using rule 68 (EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .)
    COMMA           reduce using rule 68 (EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .)
    TO              reduce using rule 68 (EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 68 (EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .)
    DO              reduce using rule 68 (EXPRESION -> EXP LESS_THAN pushCondition EXPRESION .)


state 254

    (69) EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .

    RPAREN          reduce using rule 69 (EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .)
    COMMA           reduce using rule 69 (EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .)
    TO              reduce using rule 69 (EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 69 (EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .)
    DO              reduce using rule 69 (EXPRESION -> EXP NOT_EQUAL pushCondition EXPRESION .)


state 255

    (70) EXPRESION -> EXP AND pushCondition EXPRESION .

    RPAREN          reduce using rule 70 (EXPRESION -> EXP AND pushCondition EXPRESION .)
    COMMA           reduce using rule 70 (EXPRESION -> EXP AND pushCondition EXPRESION .)
    TO              reduce using rule 70 (EXPRESION -> EXP AND pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 70 (EXPRESION -> EXP AND pushCondition EXPRESION .)
    DO              reduce using rule 70 (EXPRESION -> EXP AND pushCondition EXPRESION .)


state 256

    (71) EXPRESION -> EXP OR pushCondition EXPRESION .

    RPAREN          reduce using rule 71 (EXPRESION -> EXP OR pushCondition EXPRESION .)
    COMMA           reduce using rule 71 (EXPRESION -> EXP OR pushCondition EXPRESION .)
    TO              reduce using rule 71 (EXPRESION -> EXP OR pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 71 (EXPRESION -> EXP OR pushCondition EXPRESION .)
    DO              reduce using rule 71 (EXPRESION -> EXP OR pushCondition EXPRESION .)


state 257

    (72) EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .

    RPAREN          reduce using rule 72 (EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .)
    COMMA           reduce using rule 72 (EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .)
    TO              reduce using rule 72 (EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .)
    SEMICOLON       reduce using rule 72 (EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .)
    DO              reduce using rule 72 (EXPRESION -> EXP IS_EQUAL pushCondition EXPRESION .)


state 258

    (52) LECTURAS -> ID pushPilaOp COMMA popRead . LECTURAS
    (52) LECTURAS -> . ID pushPilaOp COMMA popRead LECTURAS
    (53) LECTURAS -> . ID pushPilaOp RPAREN SEMICOLON popRead

    ID              shift and go to state 132

    LECTURAS                       shift and go to state 292

state 259

    (53) LECTURAS -> ID pushPilaOp RPAREN SEMICOLON . popRead
    (141) popRead -> .

    RBRACKET        reduce using rule 141 (popRead -> .)
    ID              reduce using rule 141 (popRead -> .)
    RETURN          reduce using rule 141 (popRead -> .)
    READ            reduce using rule 141 (popRead -> .)
    WRITE           reduce using rule 141 (popRead -> .)
    IF              reduce using rule 141 (popRead -> .)
    WHILE           reduce using rule 141 (popRead -> .)
    FROM            reduce using rule 141 (popRead -> .)
    LINE            reduce using rule 141 (popRead -> .)
    POINT           reduce using rule 141 (popRead -> .)
    CIRCLE          reduce using rule 141 (popRead -> .)
    ARC             reduce using rule 141 (popRead -> .)
    PENUP           reduce using rule 141 (popRead -> .)
    PENDOWN         reduce using rule 141 (popRead -> .)
    COLOR           reduce using rule 141 (popRead -> .)
    SIZE            reduce using rule 141 (popRead -> .)
    CLEAR           reduce using rule 141 (popRead -> .)

    popRead                        shift and go to state 293

state 260

    (55) ESCRITURAA -> C_STRING pushConstString COMMA popWrite . ESCRITURAA
    (55) ESCRITURAA -> . C_STRING pushConstString COMMA popWrite ESCRITURAA
    (56) ESCRITURAA -> . C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd
    (57) ESCRITURAA -> . EXPRESION COMMA popWrite ESCRITURAA
    (58) ESCRITURAA -> . EXPRESION RPAREN SEMICOLON popWrite addWriteEnd
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    C_STRING        shift and go to state 134
    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    ESCRITURAA                     shift and go to state 294
    EXPRESION                      shift and go to state 135
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 261

    (56) ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON . popWrite addWriteEnd
    (139) popWrite -> .

    RBRACKET        reduce using rule 139 (popWrite -> .)
    ID              reduce using rule 139 (popWrite -> .)
    RETURN          reduce using rule 139 (popWrite -> .)
    READ            reduce using rule 139 (popWrite -> .)
    WRITE           reduce using rule 139 (popWrite -> .)
    IF              reduce using rule 139 (popWrite -> .)
    WHILE           reduce using rule 139 (popWrite -> .)
    FROM            reduce using rule 139 (popWrite -> .)
    LINE            reduce using rule 139 (popWrite -> .)
    POINT           reduce using rule 139 (popWrite -> .)
    CIRCLE          reduce using rule 139 (popWrite -> .)
    ARC             reduce using rule 139 (popWrite -> .)
    PENUP           reduce using rule 139 (popWrite -> .)
    PENDOWN         reduce using rule 139 (popWrite -> .)
    COLOR           reduce using rule 139 (popWrite -> .)
    SIZE            reduce using rule 139 (popWrite -> .)
    CLEAR           reduce using rule 139 (popWrite -> .)

    popWrite                       shift and go to state 295

state 262

    (57) ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .

    RBRACKET        reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    ID              reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    RETURN          reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    READ            reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    WRITE           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    IF              reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    WHILE           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    FROM            reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    LINE            reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    POINT           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    CIRCLE          reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    ARC             reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    PENUP           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    PENDOWN         reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    COLOR           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    SIZE            reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)
    CLEAR           reduce using rule 57 (ESCRITURAA -> EXPRESION COMMA popWrite ESCRITURAA .)


state 263

    (58) ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite . addWriteEnd
    (140) addWriteEnd -> .

    RBRACKET        reduce using rule 140 (addWriteEnd -> .)
    ID              reduce using rule 140 (addWriteEnd -> .)
    RETURN          reduce using rule 140 (addWriteEnd -> .)
    READ            reduce using rule 140 (addWriteEnd -> .)
    WRITE           reduce using rule 140 (addWriteEnd -> .)
    IF              reduce using rule 140 (addWriteEnd -> .)
    WHILE           reduce using rule 140 (addWriteEnd -> .)
    FROM            reduce using rule 140 (addWriteEnd -> .)
    LINE            reduce using rule 140 (addWriteEnd -> .)
    POINT           reduce using rule 140 (addWriteEnd -> .)
    CIRCLE          reduce using rule 140 (addWriteEnd -> .)
    ARC             reduce using rule 140 (addWriteEnd -> .)
    PENUP           reduce using rule 140 (addWriteEnd -> .)
    PENDOWN         reduce using rule 140 (addWriteEnd -> .)
    COLOR           reduce using rule 140 (addWriteEnd -> .)
    SIZE            reduce using rule 140 (addWriteEnd -> .)
    CLEAR           reduce using rule 140 (addWriteEnd -> .)

    addWriteEnd                    shift and go to state 296

state 264

    (59) DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN . BLOQUE SINO
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 297

state 265

    (64) COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF . DO BLOQUE rellenarWhile

    DO              shift and go to state 298


state 266

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC . TO EXPRESION pushVF DO BLOQUE rellenaFrom

    TO              shift and go to state 299


state 267

    (99) FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN . popLine SEMICOLON
    (143) popLine -> .

    SEMICOLON       reduce using rule 143 (popLine -> .)

    popLine                        shift and go to state 300

state 268

    (102) FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint . SEMICOLON

    SEMICOLON       shift and go to state 301


state 269

    (100) FILLCOLOR -> COMMA C_STRING pushConstString . hasColor
    (142) hasColor -> .

    RPAREN          reduce using rule 142 (hasColor -> .)

    hasColor                       shift and go to state 302

state 270

    (103) FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle . SEMICOLON

    SEMICOLON       shift and go to state 303


state 271

    (104) FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR . RPAREN popArc SEMICOLON

    RPAREN          shift and go to state 304


state 272

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN . popPendown SEMICOLON
    (148) popPendown -> .

    SEMICOLON       reduce using rule 148 (popPendown -> .)

    popPendown                     shift and go to state 305

state 273

    (107) FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor . SEMICOLON

    SEMICOLON       shift and go to state 306


state 274

    (108) FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN . popSize SEMICOLON
    (150) popSize -> .

    SEMICOLON       reduce using rule 150 (popSize -> .)

    popSize                        shift and go to state 307

state 275

    (27) FUNCSB -> VARS addVarsFunc BLOQUE . endFunc
    (117) endFunc -> .

    MODULE          reduce using rule 117 (endFunc -> .)
    MAIN            reduce using rule 117 (endFunc -> .)

    endFunc                        shift and go to state 308

state 276

    (28) FUNCSB -> addVarsFunc BLOQUE endFunc .

    MODULE          reduce using rule 28 (FUNCSB -> addVarsFunc BLOQUE endFunc .)
    MAIN            reduce using rule 28 (FUNCSB -> addVarsFunc BLOQUE endFunc .)


state 277

    (16) ARREGLO2 -> LSBRACKET . pushParen EXP RSBRACKET pushDim addArreglo popParen
    (132) pushParen -> .

    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 309

state 278

    (14) ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2 .

    COMMA           reduce using rule 14 (ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2 .)
    SEMICOLON       reduce using rule 14 (ARREGLO -> LSBRACKET pushParen EXP RSBRACKET popParen pushDim ARREGLO2 .)


state 279

    (17) ARREGLO2 -> addArreglo .

    COMMA           reduce using rule 17 (ARREGLO2 -> addArreglo .)
    SEMICOLON       reduce using rule 17 (ARREGLO2 -> addArreglo .)


state 280

    (74) EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .

    RSBRACKET       reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    GREATER_THAN    reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    LESS_THAN       reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    NOT_EQUAL       reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    AND             reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    OR              reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    IS_EQUAL        reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    RPAREN          reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    COMMA           reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    TO              reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    SEMICOLON       reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)
    DO              reduce using rule 74 (EXP -> TERMINO popPlusMinus PLUS pushPlusMinus EXP .)


state 281

    (75) EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .

    RSBRACKET       reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    GREATER_THAN    reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    LESS_THAN       reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    NOT_EQUAL       reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    AND             reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    OR              reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    IS_EQUAL        reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    RPAREN          reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    COMMA           reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    TO              reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    SEMICOLON       reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)
    DO              reduce using rule 75 (EXP -> TERMINO popPlusMinus MINUS pushPlusMinus EXP .)


state 282

    (77) TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .

    PLUS            reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    MINUS           reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    RSBRACKET       reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    GREATER_THAN    reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    LESS_THAN       reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    NOT_EQUAL       reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    AND             reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    OR              reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    IS_EQUAL        reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    RPAREN          reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    COMMA           reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    TO              reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    SEMICOLON       reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)
    DO              reduce using rule 77 (TERMINO -> FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO .)


state 283

    (78) TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .

    PLUS            reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    MINUS           reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    RSBRACKET       reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    GREATER_THAN    reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    LESS_THAN       reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    NOT_EQUAL       reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    AND             reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    OR              reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    IS_EQUAL        reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    RPAREN          reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    COMMA           reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    TO              reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    SEMICOLON       reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)
    DO              reduce using rule 78 (TERMINO -> FACTOR popMultDiv DIVIDE pushMultDiv TERMINO .)


state 284

    (79) FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .

    MULTIPLY        reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    DIVIDE          reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    PLUS            reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    MINUS           reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    RSBRACKET       reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    GREATER_THAN    reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    LESS_THAN       reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    NOT_EQUAL       reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    AND             reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    OR              reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    IS_EQUAL        reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    RPAREN          reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    COMMA           reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    TO              reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    SEMICOLON       reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)
    DO              reduce using rule 79 (FACTOR -> LPAREN pushParen EXPRESION RPAREN popParen .)


state 285

    (82) LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .

    MULTIPLY        reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    DIVIDE          reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    PLUS            reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    MINUS           reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    RSBRACKET       reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    GREATER_THAN    reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    LESS_THAN       reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    NOT_EQUAL       reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    AND             reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    OR              reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    IS_EQUAL        reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    RPAREN          reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    COMMA           reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    TO              reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    SEMICOLON       reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)
    DO              reduce using rule 82 (LLAMADAMOD -> ID pushEra LPAREN pushParen LLAMADAMODS .)


state 286

    (83) LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN . pushGosub
    (136) pushGosub -> .

    MULTIPLY        reduce using rule 136 (pushGosub -> .)
    DIVIDE          reduce using rule 136 (pushGosub -> .)
    PLUS            reduce using rule 136 (pushGosub -> .)
    MINUS           reduce using rule 136 (pushGosub -> .)
    RSBRACKET       reduce using rule 136 (pushGosub -> .)
    GREATER_THAN    reduce using rule 136 (pushGosub -> .)
    LESS_THAN       reduce using rule 136 (pushGosub -> .)
    NOT_EQUAL       reduce using rule 136 (pushGosub -> .)
    AND             reduce using rule 136 (pushGosub -> .)
    OR              reduce using rule 136 (pushGosub -> .)
    IS_EQUAL        reduce using rule 136 (pushGosub -> .)
    RPAREN          reduce using rule 136 (pushGosub -> .)
    COMMA           reduce using rule 136 (pushGosub -> .)
    TO              reduce using rule 136 (pushGosub -> .)
    SEMICOLON       reduce using rule 136 (pushGosub -> .)
    DO              reduce using rule 136 (pushGosub -> .)

    pushGosub                      shift and go to state 310

state 287

    (84) LLAMADAMODS -> EXPRESION . addParam RPAREN popParen verifyParams pushGosub
    (85) LLAMADAMODS -> EXPRESION . addParam COMMA LLAMADAMODS
    (134) addParam -> .

    RPAREN          reduce using rule 134 (addParam -> .)
    COMMA           reduce using rule 134 (addParam -> .)

    addParam                       shift and go to state 311

state 288

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual . SEMICOLON

    SEMICOLON       shift and go to state 312


state 289

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen . verifyDim calculateDir ARREGLOC2
    (165) verifyDim -> .

    LSBRACKET       reduce using rule 165 (verifyDim -> .)
    EQUALS          reduce using rule 165 (verifyDim -> .)
    MULTIPLY        reduce using rule 165 (verifyDim -> .)
    DIVIDE          reduce using rule 165 (verifyDim -> .)
    PLUS            reduce using rule 165 (verifyDim -> .)
    MINUS           reduce using rule 165 (verifyDim -> .)
    RSBRACKET       reduce using rule 165 (verifyDim -> .)
    GREATER_THAN    reduce using rule 165 (verifyDim -> .)
    LESS_THAN       reduce using rule 165 (verifyDim -> .)
    NOT_EQUAL       reduce using rule 165 (verifyDim -> .)
    AND             reduce using rule 165 (verifyDim -> .)
    OR              reduce using rule 165 (verifyDim -> .)
    IS_EQUAL        reduce using rule 165 (verifyDim -> .)
    RPAREN          reduce using rule 165 (verifyDim -> .)
    COMMA           reduce using rule 165 (verifyDim -> .)
    TO              reduce using rule 165 (verifyDim -> .)
    SEMICOLON       reduce using rule 165 (verifyDim -> .)
    DO              reduce using rule 165 (verifyDim -> .)

    verifyDim                      shift and go to state 313

state 290

    (48) LLAMADAS -> EXPRESION addParam RPAREN verifyParams . SEMICOLON pushGosubLlamada

    SEMICOLON       shift and go to state 314


state 291

    (49) LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .

    RBRACKET        reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    ID              reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    RETURN          reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    READ            reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    WRITE           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    IF              reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    WHILE           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    FROM            reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    LINE            reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    POINT           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    CIRCLE          reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    ARC             reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    PENUP           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    PENDOWN         reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    COLOR           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    SIZE            reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)
    CLEAR           reduce using rule 49 (LLAMADAS -> EXPRESION addParam COMMA LLAMADAS .)


state 292

    (52) LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .

    RBRACKET        reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    ID              reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    RETURN          reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    READ            reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    WRITE           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    IF              reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    WHILE           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    FROM            reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    LINE            reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    POINT           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    CIRCLE          reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    ARC             reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    PENUP           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    PENDOWN         reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    COLOR           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    SIZE            reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)
    CLEAR           reduce using rule 52 (LECTURAS -> ID pushPilaOp COMMA popRead LECTURAS .)


state 293

    (53) LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .

    RBRACKET        reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    ID              reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    RETURN          reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    READ            reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    WRITE           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    IF              reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    WHILE           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    FROM            reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    LINE            reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    POINT           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    CIRCLE          reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    ARC             reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    PENUP           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    PENDOWN         reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    COLOR           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    SIZE            reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)
    CLEAR           reduce using rule 53 (LECTURAS -> ID pushPilaOp RPAREN SEMICOLON popRead .)


state 294

    (55) ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .

    RBRACKET        reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    ID              reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    RETURN          reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    READ            reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    WRITE           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    IF              reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    WHILE           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    FROM            reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    LINE            reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    POINT           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    CIRCLE          reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    ARC             reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    PENUP           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    PENDOWN         reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    COLOR           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    SIZE            reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)
    CLEAR           reduce using rule 55 (ESCRITURAA -> C_STRING pushConstString COMMA popWrite ESCRITURAA .)


state 295

    (56) ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite . addWriteEnd
    (140) addWriteEnd -> .

    RBRACKET        reduce using rule 140 (addWriteEnd -> .)
    ID              reduce using rule 140 (addWriteEnd -> .)
    RETURN          reduce using rule 140 (addWriteEnd -> .)
    READ            reduce using rule 140 (addWriteEnd -> .)
    WRITE           reduce using rule 140 (addWriteEnd -> .)
    IF              reduce using rule 140 (addWriteEnd -> .)
    WHILE           reduce using rule 140 (addWriteEnd -> .)
    FROM            reduce using rule 140 (addWriteEnd -> .)
    LINE            reduce using rule 140 (addWriteEnd -> .)
    POINT           reduce using rule 140 (addWriteEnd -> .)
    CIRCLE          reduce using rule 140 (addWriteEnd -> .)
    ARC             reduce using rule 140 (addWriteEnd -> .)
    PENUP           reduce using rule 140 (addWriteEnd -> .)
    PENDOWN         reduce using rule 140 (addWriteEnd -> .)
    COLOR           reduce using rule 140 (addWriteEnd -> .)
    SIZE            reduce using rule 140 (addWriteEnd -> .)
    CLEAR           reduce using rule 140 (addWriteEnd -> .)

    addWriteEnd                    shift and go to state 315

state 296

    (58) ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .

    RBRACKET        reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    ID              reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    RETURN          reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    READ            reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    WRITE           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    IF              reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    WHILE           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    FROM            reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    LINE            reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    POINT           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    CIRCLE          reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    ARC             reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    PENUP           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    PENDOWN         reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    COLOR           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    SIZE            reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)
    CLEAR           reduce using rule 58 (ESCRITURAA -> EXPRESION RPAREN SEMICOLON popWrite addWriteEnd .)


state 297

    (59) DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE . SINO
    (60) SINO -> . ELSE rellenarFalso BLOQUE rellenarSalida
    (61) SINO -> . empty rellenarSalida
    (110) empty -> .

    ELSE            shift and go to state 317
    RBRACKET        reduce using rule 110 (empty -> .)
    ID              reduce using rule 110 (empty -> .)
    RETURN          reduce using rule 110 (empty -> .)
    READ            reduce using rule 110 (empty -> .)
    WRITE           reduce using rule 110 (empty -> .)
    IF              reduce using rule 110 (empty -> .)
    WHILE           reduce using rule 110 (empty -> .)
    FROM            reduce using rule 110 (empty -> .)
    LINE            reduce using rule 110 (empty -> .)
    POINT           reduce using rule 110 (empty -> .)
    CIRCLE          reduce using rule 110 (empty -> .)
    ARC             reduce using rule 110 (empty -> .)
    PENUP           reduce using rule 110 (empty -> .)
    PENDOWN         reduce using rule 110 (empty -> .)
    COLOR           reduce using rule 110 (empty -> .)
    SIZE            reduce using rule 110 (empty -> .)
    CLEAR           reduce using rule 110 (empty -> .)

    SINO                           shift and go to state 316
    empty                          shift and go to state 318

state 298

    (64) COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO . BLOQUE rellenarWhile
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 319

state 299

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO . EXPRESION pushVF DO BLOQUE rellenaFrom
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 320
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 300

    (99) FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine . SEMICOLON

    SEMICOLON       shift and go to state 321


state 301

    (102) FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .

    RBRACKET        reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    ID              reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    RETURN          reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    READ            reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    WRITE           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    IF              reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    WHILE           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    FROM            reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    LINE            reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    POINT           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    CIRCLE          reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    ARC             reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    PENUP           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    PENDOWN         reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    COLOR           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    SIZE            reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)
    CLEAR           reduce using rule 102 (FPOINT -> POINT LPAREN EXPRESION FILLCOLOR RPAREN popPoint SEMICOLON .)


state 302

    (100) FILLCOLOR -> COMMA C_STRING pushConstString hasColor .

    RPAREN          reduce using rule 100 (FILLCOLOR -> COMMA C_STRING pushConstString hasColor .)


state 303

    (103) FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .

    RBRACKET        reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    ID              reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    RETURN          reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    READ            reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    WRITE           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    IF              reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    WHILE           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    FROM            reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    LINE            reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    POINT           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    CIRCLE          reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    ARC             reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    PENUP           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    PENDOWN         reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    COLOR           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    SIZE            reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)
    CLEAR           reduce using rule 103 (FCIRCLE -> CIRCLE LPAREN EXPRESION FILLCOLOR RPAREN popCircle SEMICOLON .)


state 304

    (104) FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN . popArc SEMICOLON
    (146) popArc -> .

    SEMICOLON       reduce using rule 146 (popArc -> .)

    popArc                         shift and go to state 322

state 305

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown . SEMICOLON

    SEMICOLON       shift and go to state 323


state 306

    (107) FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .

    RBRACKET        reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    ID              reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    RETURN          reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    READ            reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    WRITE           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    IF              reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    WHILE           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    FROM            reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    LINE            reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    POINT           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    CIRCLE          reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    ARC             reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    PENUP           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    PENDOWN         reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    COLOR           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    SIZE            reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)
    CLEAR           reduce using rule 107 (FCOLOR -> COLOR LPAREN C_STRING pushConstString RPAREN popColor SEMICOLON .)


state 307

    (108) FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize . SEMICOLON

    SEMICOLON       shift and go to state 324


state 308

    (27) FUNCSB -> VARS addVarsFunc BLOQUE endFunc .

    MODULE          reduce using rule 27 (FUNCSB -> VARS addVarsFunc BLOQUE endFunc .)
    MAIN            reduce using rule 27 (FUNCSB -> VARS addVarsFunc BLOQUE endFunc .)


state 309

    (16) ARREGLO2 -> LSBRACKET pushParen . EXP RSBRACKET pushDim addArreglo popParen
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 325
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 310

    (83) LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .

    MULTIPLY        reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    DIVIDE          reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    PLUS            reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    MINUS           reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    RSBRACKET       reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    GREATER_THAN    reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    LESS_THAN       reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    NOT_EQUAL       reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    AND             reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    OR              reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    IS_EQUAL        reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    RPAREN          reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    COMMA           reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    TO              reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    SEMICOLON       reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)
    DO              reduce using rule 83 (LLAMADAMOD -> ID pushEra LPAREN pushParen RPAREN pushGosub .)


state 311

    (84) LLAMADAMODS -> EXPRESION addParam . RPAREN popParen verifyParams pushGosub
    (85) LLAMADAMODS -> EXPRESION addParam . COMMA LLAMADAMODS

    RPAREN          shift and go to state 326
    COMMA           shift and go to state 327


state 312

    (45) ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .

    RBRACKET        reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    ID              reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    RETURN          reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    READ            reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    WRITE           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    IF              reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    WHILE           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    FROM            reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    LINE            reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    POINT           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    CIRCLE          reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    ARC             reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    PENUP           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    PENDOWN         reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    COLOR           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    SIZE            reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)
    CLEAR           reduce using rule 45 (ASIGNACION -> ID pushPilaOp ARREGLOCALL EQUALS pushEqual EXPRESION popIgual SEMICOLON .)


state 313

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim . calculateDir ARREGLOC2
    (166) calculateDir -> .

    LSBRACKET       reduce using rule 166 (calculateDir -> .)
    EQUALS          reduce using rule 166 (calculateDir -> .)
    MULTIPLY        reduce using rule 166 (calculateDir -> .)
    DIVIDE          reduce using rule 166 (calculateDir -> .)
    PLUS            reduce using rule 166 (calculateDir -> .)
    MINUS           reduce using rule 166 (calculateDir -> .)
    RSBRACKET       reduce using rule 166 (calculateDir -> .)
    GREATER_THAN    reduce using rule 166 (calculateDir -> .)
    LESS_THAN       reduce using rule 166 (calculateDir -> .)
    NOT_EQUAL       reduce using rule 166 (calculateDir -> .)
    AND             reduce using rule 166 (calculateDir -> .)
    OR              reduce using rule 166 (calculateDir -> .)
    IS_EQUAL        reduce using rule 166 (calculateDir -> .)
    RPAREN          reduce using rule 166 (calculateDir -> .)
    COMMA           reduce using rule 166 (calculateDir -> .)
    TO              reduce using rule 166 (calculateDir -> .)
    SEMICOLON       reduce using rule 166 (calculateDir -> .)
    DO              reduce using rule 166 (calculateDir -> .)

    calculateDir                   shift and go to state 328

state 314

    (48) LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON . pushGosubLlamada
    (137) pushGosubLlamada -> .

    RBRACKET        reduce using rule 137 (pushGosubLlamada -> .)
    ID              reduce using rule 137 (pushGosubLlamada -> .)
    RETURN          reduce using rule 137 (pushGosubLlamada -> .)
    READ            reduce using rule 137 (pushGosubLlamada -> .)
    WRITE           reduce using rule 137 (pushGosubLlamada -> .)
    IF              reduce using rule 137 (pushGosubLlamada -> .)
    WHILE           reduce using rule 137 (pushGosubLlamada -> .)
    FROM            reduce using rule 137 (pushGosubLlamada -> .)
    LINE            reduce using rule 137 (pushGosubLlamada -> .)
    POINT           reduce using rule 137 (pushGosubLlamada -> .)
    CIRCLE          reduce using rule 137 (pushGosubLlamada -> .)
    ARC             reduce using rule 137 (pushGosubLlamada -> .)
    PENUP           reduce using rule 137 (pushGosubLlamada -> .)
    PENDOWN         reduce using rule 137 (pushGosubLlamada -> .)
    COLOR           reduce using rule 137 (pushGosubLlamada -> .)
    SIZE            reduce using rule 137 (pushGosubLlamada -> .)
    CLEAR           reduce using rule 137 (pushGosubLlamada -> .)

    pushGosubLlamada               shift and go to state 329

state 315

    (56) ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .

    RBRACKET        reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    ID              reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    RETURN          reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    READ            reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    WRITE           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    IF              reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    WHILE           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    FROM            reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    LINE            reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    POINT           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    CIRCLE          reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    ARC             reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    PENUP           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    PENDOWN         reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    COLOR           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    SIZE            reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)
    CLEAR           reduce using rule 56 (ESCRITURAA -> C_STRING pushConstString RPAREN SEMICOLON popWrite addWriteEnd .)


state 316

    (59) DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .

    RBRACKET        reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    ID              reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    RETURN          reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    READ            reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    WRITE           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    IF              reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    WHILE           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    FROM            reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    LINE            reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    POINT           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    CIRCLE          reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    ARC             reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    PENUP           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    PENDOWN         reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    COLOR           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    SIZE            reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)
    CLEAR           reduce using rule 59 (DECISION -> IF LPAREN EXPRESION RPAREN pushGotoF THEN BLOQUE SINO .)


state 317

    (60) SINO -> ELSE . rellenarFalso BLOQUE rellenarSalida
    (154) rellenarFalso -> .

    LBRACKET        reduce using rule 154 (rellenarFalso -> .)

    rellenarFalso                  shift and go to state 330

state 318

    (61) SINO -> empty . rellenarSalida
    (155) rellenarSalida -> .

    RBRACKET        reduce using rule 155 (rellenarSalida -> .)
    ID              reduce using rule 155 (rellenarSalida -> .)
    RETURN          reduce using rule 155 (rellenarSalida -> .)
    READ            reduce using rule 155 (rellenarSalida -> .)
    WRITE           reduce using rule 155 (rellenarSalida -> .)
    IF              reduce using rule 155 (rellenarSalida -> .)
    WHILE           reduce using rule 155 (rellenarSalida -> .)
    FROM            reduce using rule 155 (rellenarSalida -> .)
    LINE            reduce using rule 155 (rellenarSalida -> .)
    POINT           reduce using rule 155 (rellenarSalida -> .)
    CIRCLE          reduce using rule 155 (rellenarSalida -> .)
    ARC             reduce using rule 155 (rellenarSalida -> .)
    PENUP           reduce using rule 155 (rellenarSalida -> .)
    PENDOWN         reduce using rule 155 (rellenarSalida -> .)
    COLOR           reduce using rule 155 (rellenarSalida -> .)
    SIZE            reduce using rule 155 (rellenarSalida -> .)
    CLEAR           reduce using rule 155 (rellenarSalida -> .)

    rellenarSalida                 shift and go to state 331

state 319

    (64) COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE . rellenarWhile
    (157) rellenarWhile -> .

    RBRACKET        reduce using rule 157 (rellenarWhile -> .)
    ID              reduce using rule 157 (rellenarWhile -> .)
    RETURN          reduce using rule 157 (rellenarWhile -> .)
    READ            reduce using rule 157 (rellenarWhile -> .)
    WRITE           reduce using rule 157 (rellenarWhile -> .)
    IF              reduce using rule 157 (rellenarWhile -> .)
    WHILE           reduce using rule 157 (rellenarWhile -> .)
    FROM            reduce using rule 157 (rellenarWhile -> .)
    LINE            reduce using rule 157 (rellenarWhile -> .)
    POINT           reduce using rule 157 (rellenarWhile -> .)
    CIRCLE          reduce using rule 157 (rellenarWhile -> .)
    ARC             reduce using rule 157 (rellenarWhile -> .)
    PENUP           reduce using rule 157 (rellenarWhile -> .)
    PENDOWN         reduce using rule 157 (rellenarWhile -> .)
    COLOR           reduce using rule 157 (rellenarWhile -> .)
    SIZE            reduce using rule 157 (rellenarWhile -> .)
    CLEAR           reduce using rule 157 (rellenarWhile -> .)

    rellenarWhile                  shift and go to state 332

state 320

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION . pushVF DO BLOQUE rellenaFrom
    (160) pushVF -> .

    DO              reduce using rule 160 (pushVF -> .)

    pushVF                         shift and go to state 333

state 321

    (99) FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .

    RBRACKET        reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    ID              reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    RETURN          reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    READ            reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    WRITE           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    IF              reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    WHILE           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    FROM            reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    LINE            reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    POINT           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    CIRCLE          reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    ARC             reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    PENUP           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    PENDOWN         reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    COLOR           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    SIZE            reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)
    CLEAR           reduce using rule 99 (FLINE -> LINE LPAREN EXPRESION COMMA EXPRESION RPAREN popLine SEMICOLON .)


state 322

    (104) FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc . SEMICOLON

    SEMICOLON       shift and go to state 334


state 323

    (106) FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .

    RBRACKET        reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    ID              reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    RETURN          reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    READ            reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    WRITE           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    IF              reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    WHILE           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    FROM            reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    LINE            reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    POINT           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    CIRCLE          reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    ARC             reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    PENUP           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    PENDOWN         reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    COLOR           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    SIZE            reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)
    CLEAR           reduce using rule 106 (FPENDOWN -> PENDOWN LPAREN EXPRESION COMMA EXPRESION RPAREN popPendown SEMICOLON .)


state 324

    (108) FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .

    RBRACKET        reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    ID              reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    RETURN          reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    READ            reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    WRITE           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    IF              reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    WHILE           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    FROM            reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    LINE            reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    POINT           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    CIRCLE          reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    ARC             reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    PENUP           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    PENDOWN         reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    COLOR           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    SIZE            reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)
    CLEAR           reduce using rule 108 (FSIZE -> SIZE LPAREN EXPRESION COMMA EXPRESION RPAREN popSize SEMICOLON .)


state 325

    (16) ARREGLO2 -> LSBRACKET pushParen EXP . RSBRACKET pushDim addArreglo popParen

    RSBRACKET       shift and go to state 335


state 326

    (84) LLAMADAMODS -> EXPRESION addParam RPAREN . popParen verifyParams pushGosub
    (133) popParen -> .

    MULTIPLY        reduce using rule 133 (popParen -> .)
    DIVIDE          reduce using rule 133 (popParen -> .)
    PLUS            reduce using rule 133 (popParen -> .)
    MINUS           reduce using rule 133 (popParen -> .)
    RSBRACKET       reduce using rule 133 (popParen -> .)
    GREATER_THAN    reduce using rule 133 (popParen -> .)
    LESS_THAN       reduce using rule 133 (popParen -> .)
    NOT_EQUAL       reduce using rule 133 (popParen -> .)
    AND             reduce using rule 133 (popParen -> .)
    OR              reduce using rule 133 (popParen -> .)
    IS_EQUAL        reduce using rule 133 (popParen -> .)
    RPAREN          reduce using rule 133 (popParen -> .)
    COMMA           reduce using rule 133 (popParen -> .)
    TO              reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)
    DO              reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 336

state 327

    (85) LLAMADAMODS -> EXPRESION addParam COMMA . LLAMADAMODS
    (84) LLAMADAMODS -> . EXPRESION addParam RPAREN popParen verifyParams pushGosub
    (85) LLAMADAMODS -> . EXPRESION addParam COMMA LLAMADAMODS
    (66) EXPRESION -> . EXP popCondition
    (67) EXPRESION -> . EXP GREATER_THAN pushCondition EXPRESION
    (68) EXPRESION -> . EXP LESS_THAN pushCondition EXPRESION
    (69) EXPRESION -> . EXP NOT_EQUAL pushCondition EXPRESION
    (70) EXPRESION -> . EXP AND pushCondition EXPRESION
    (71) EXPRESION -> . EXP OR pushCondition EXPRESION
    (72) EXPRESION -> . EXP IS_EQUAL pushCondition EXPRESION
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXPRESION                      shift and go to state 287
    LLAMADAMODS                    shift and go to state 337
    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 328

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir . ARREGLOC2
    (20) ARREGLOC2 -> . LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir
    (21) ARREGLOC2 -> . empty
    (110) empty -> .

    LSBRACKET       shift and go to state 338
    EQUALS          reduce using rule 110 (empty -> .)
    MULTIPLY        reduce using rule 110 (empty -> .)
    DIVIDE          reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    MINUS           reduce using rule 110 (empty -> .)
    RSBRACKET       reduce using rule 110 (empty -> .)
    GREATER_THAN    reduce using rule 110 (empty -> .)
    LESS_THAN       reduce using rule 110 (empty -> .)
    NOT_EQUAL       reduce using rule 110 (empty -> .)
    AND             reduce using rule 110 (empty -> .)
    OR              reduce using rule 110 (empty -> .)
    IS_EQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)
    TO              reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    DO              reduce using rule 110 (empty -> .)

    ARREGLOC2                      shift and go to state 339
    empty                          shift and go to state 340

state 329

    (48) LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .

    RBRACKET        reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    ID              reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    RETURN          reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    READ            reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    WRITE           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    IF              reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    WHILE           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    FROM            reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    LINE            reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    POINT           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    CIRCLE          reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    ARC             reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    PENUP           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    PENDOWN         reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    COLOR           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    SIZE            reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)
    CLEAR           reduce using rule 48 (LLAMADAS -> EXPRESION addParam RPAREN verifyParams SEMICOLON pushGosubLlamada .)


state 330

    (60) SINO -> ELSE rellenarFalso . BLOQUE rellenarSalida
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 341

state 331

    (61) SINO -> empty rellenarSalida .

    RBRACKET        reduce using rule 61 (SINO -> empty rellenarSalida .)
    ID              reduce using rule 61 (SINO -> empty rellenarSalida .)
    RETURN          reduce using rule 61 (SINO -> empty rellenarSalida .)
    READ            reduce using rule 61 (SINO -> empty rellenarSalida .)
    WRITE           reduce using rule 61 (SINO -> empty rellenarSalida .)
    IF              reduce using rule 61 (SINO -> empty rellenarSalida .)
    WHILE           reduce using rule 61 (SINO -> empty rellenarSalida .)
    FROM            reduce using rule 61 (SINO -> empty rellenarSalida .)
    LINE            reduce using rule 61 (SINO -> empty rellenarSalida .)
    POINT           reduce using rule 61 (SINO -> empty rellenarSalida .)
    CIRCLE          reduce using rule 61 (SINO -> empty rellenarSalida .)
    ARC             reduce using rule 61 (SINO -> empty rellenarSalida .)
    PENUP           reduce using rule 61 (SINO -> empty rellenarSalida .)
    PENDOWN         reduce using rule 61 (SINO -> empty rellenarSalida .)
    COLOR           reduce using rule 61 (SINO -> empty rellenarSalida .)
    SIZE            reduce using rule 61 (SINO -> empty rellenarSalida .)
    CLEAR           reduce using rule 61 (SINO -> empty rellenarSalida .)


state 332

    (64) COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .

    RBRACKET        reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    ID              reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    RETURN          reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    READ            reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    WRITE           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    IF              reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    WHILE           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    FROM            reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    LINE            reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    POINT           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    CIRCLE          reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    ARC             reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    PENUP           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    PENDOWN         reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    COLOR           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    SIZE            reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)
    CLEAR           reduce using rule 64 (COND -> WHILE pushSalto LPAREN EXPRESION RPAREN pushGotoF DO BLOQUE rellenarWhile .)


state 333

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF . DO BLOQUE rellenaFrom

    DO              shift and go to state 342


state 334

    (104) FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .

    RBRACKET        reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    ID              reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    RETURN          reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    READ            reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    WRITE           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    IF              reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    WHILE           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    FROM            reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    LINE            reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    POINT           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    CIRCLE          reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    ARC             reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    PENUP           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    PENDOWN         reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    COLOR           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    SIZE            reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)
    CLEAR           reduce using rule 104 (FARC -> ARC LPAREN EXPRESION COMMA EXPRESION FILLCOLOR RPAREN popArc SEMICOLON .)


state 335

    (16) ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET . pushDim addArreglo popParen
    (163) pushDim -> .

    COMMA           reduce using rule 163 (pushDim -> .)
    SEMICOLON       reduce using rule 163 (pushDim -> .)

    pushDim                        shift and go to state 343

state 336

    (84) LLAMADAMODS -> EXPRESION addParam RPAREN popParen . verifyParams pushGosub
    (135) verifyParams -> .

    MULTIPLY        reduce using rule 135 (verifyParams -> .)
    DIVIDE          reduce using rule 135 (verifyParams -> .)
    PLUS            reduce using rule 135 (verifyParams -> .)
    MINUS           reduce using rule 135 (verifyParams -> .)
    RSBRACKET       reduce using rule 135 (verifyParams -> .)
    GREATER_THAN    reduce using rule 135 (verifyParams -> .)
    LESS_THAN       reduce using rule 135 (verifyParams -> .)
    NOT_EQUAL       reduce using rule 135 (verifyParams -> .)
    AND             reduce using rule 135 (verifyParams -> .)
    OR              reduce using rule 135 (verifyParams -> .)
    IS_EQUAL        reduce using rule 135 (verifyParams -> .)
    RPAREN          reduce using rule 135 (verifyParams -> .)
    COMMA           reduce using rule 135 (verifyParams -> .)
    TO              reduce using rule 135 (verifyParams -> .)
    SEMICOLON       reduce using rule 135 (verifyParams -> .)
    DO              reduce using rule 135 (verifyParams -> .)

    verifyParams                   shift and go to state 344

state 337

    (85) LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .

    MULTIPLY        reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    DIVIDE          reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    PLUS            reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    MINUS           reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    RSBRACKET       reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    GREATER_THAN    reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    LESS_THAN       reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    NOT_EQUAL       reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    AND             reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    OR              reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    IS_EQUAL        reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    RPAREN          reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    COMMA           reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    TO              reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    SEMICOLON       reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)
    DO              reduce using rule 85 (LLAMADAMODS -> EXPRESION addParam COMMA LLAMADAMODS .)


state 338

    (20) ARREGLOC2 -> LSBRACKET . pushParen EXP RSBRACKET popParen verifyDim calculateDir
    (132) pushParen -> .

    LPAREN          reduce using rule 132 (pushParen -> .)
    ID              reduce using rule 132 (pushParen -> .)
    C_INT           reduce using rule 132 (pushParen -> .)
    C_FLOAT         reduce using rule 132 (pushParen -> .)
    C_CHAR          reduce using rule 132 (pushParen -> .)

    pushParen                      shift and go to state 345

state 339

    (18) ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .

    EQUALS          reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    MULTIPLY        reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    DIVIDE          reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    PLUS            reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    MINUS           reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    RSBRACKET       reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    GREATER_THAN    reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    LESS_THAN       reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    NOT_EQUAL       reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    AND             reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    OR              reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    IS_EQUAL        reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    RPAREN          reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    COMMA           reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    TO              reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    SEMICOLON       reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)
    DO              reduce using rule 18 (ARREGLOCALL -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir ARREGLOC2 .)


state 340

    (21) ARREGLOC2 -> empty .

    EQUALS          reduce using rule 21 (ARREGLOC2 -> empty .)
    MULTIPLY        reduce using rule 21 (ARREGLOC2 -> empty .)
    DIVIDE          reduce using rule 21 (ARREGLOC2 -> empty .)
    PLUS            reduce using rule 21 (ARREGLOC2 -> empty .)
    MINUS           reduce using rule 21 (ARREGLOC2 -> empty .)
    RSBRACKET       reduce using rule 21 (ARREGLOC2 -> empty .)
    GREATER_THAN    reduce using rule 21 (ARREGLOC2 -> empty .)
    LESS_THAN       reduce using rule 21 (ARREGLOC2 -> empty .)
    NOT_EQUAL       reduce using rule 21 (ARREGLOC2 -> empty .)
    AND             reduce using rule 21 (ARREGLOC2 -> empty .)
    OR              reduce using rule 21 (ARREGLOC2 -> empty .)
    IS_EQUAL        reduce using rule 21 (ARREGLOC2 -> empty .)
    RPAREN          reduce using rule 21 (ARREGLOC2 -> empty .)
    COMMA           reduce using rule 21 (ARREGLOC2 -> empty .)
    TO              reduce using rule 21 (ARREGLOC2 -> empty .)
    SEMICOLON       reduce using rule 21 (ARREGLOC2 -> empty .)
    DO              reduce using rule 21 (ARREGLOC2 -> empty .)


state 341

    (60) SINO -> ELSE rellenarFalso BLOQUE . rellenarSalida
    (155) rellenarSalida -> .

    RBRACKET        reduce using rule 155 (rellenarSalida -> .)
    ID              reduce using rule 155 (rellenarSalida -> .)
    RETURN          reduce using rule 155 (rellenarSalida -> .)
    READ            reduce using rule 155 (rellenarSalida -> .)
    WRITE           reduce using rule 155 (rellenarSalida -> .)
    IF              reduce using rule 155 (rellenarSalida -> .)
    WHILE           reduce using rule 155 (rellenarSalida -> .)
    FROM            reduce using rule 155 (rellenarSalida -> .)
    LINE            reduce using rule 155 (rellenarSalida -> .)
    POINT           reduce using rule 155 (rellenarSalida -> .)
    CIRCLE          reduce using rule 155 (rellenarSalida -> .)
    ARC             reduce using rule 155 (rellenarSalida -> .)
    PENUP           reduce using rule 155 (rellenarSalida -> .)
    PENDOWN         reduce using rule 155 (rellenarSalida -> .)
    COLOR           reduce using rule 155 (rellenarSalida -> .)
    SIZE            reduce using rule 155 (rellenarSalida -> .)
    CLEAR           reduce using rule 155 (rellenarSalida -> .)

    rellenarSalida                 shift and go to state 346

state 342

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO . BLOQUE rellenaFrom
    (33) BLOQUE -> . LBRACKET BLOQUEA
    (34) BLOQUE -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 38

    BLOQUE                         shift and go to state 347

state 343

    (16) ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim . addArreglo popParen
    (164) addArreglo -> .

    COMMA           reduce using rule 164 (addArreglo -> .)
    SEMICOLON       reduce using rule 164 (addArreglo -> .)

    addArreglo                     shift and go to state 348

state 344

    (84) LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams . pushGosub
    (136) pushGosub -> .

    MULTIPLY        reduce using rule 136 (pushGosub -> .)
    DIVIDE          reduce using rule 136 (pushGosub -> .)
    PLUS            reduce using rule 136 (pushGosub -> .)
    MINUS           reduce using rule 136 (pushGosub -> .)
    RSBRACKET       reduce using rule 136 (pushGosub -> .)
    GREATER_THAN    reduce using rule 136 (pushGosub -> .)
    LESS_THAN       reduce using rule 136 (pushGosub -> .)
    NOT_EQUAL       reduce using rule 136 (pushGosub -> .)
    AND             reduce using rule 136 (pushGosub -> .)
    OR              reduce using rule 136 (pushGosub -> .)
    IS_EQUAL        reduce using rule 136 (pushGosub -> .)
    RPAREN          reduce using rule 136 (pushGosub -> .)
    COMMA           reduce using rule 136 (pushGosub -> .)
    TO              reduce using rule 136 (pushGosub -> .)
    SEMICOLON       reduce using rule 136 (pushGosub -> .)
    DO              reduce using rule 136 (pushGosub -> .)

    pushGosub                      shift and go to state 349

state 345

    (20) ARREGLOC2 -> LSBRACKET pushParen . EXP RSBRACKET popParen verifyDim calculateDir
    (73) EXP -> . TERMINO popPlusMinus
    (74) EXP -> . TERMINO popPlusMinus PLUS pushPlusMinus EXP
    (75) EXP -> . TERMINO popPlusMinus MINUS pushPlusMinus EXP
    (76) TERMINO -> . FACTOR popMultDiv
    (77) TERMINO -> . FACTOR popMultDiv MULTIPLY pushMultDiv TERMINO
    (78) TERMINO -> . FACTOR popMultDiv DIVIDE pushMultDiv TERMINO
    (79) FACTOR -> . LPAREN pushParen EXPRESION RPAREN popParen
    (80) FACTOR -> . VARCTE
    (81) FACTOR -> . LLAMADAMOD
    (86) VARCTE -> . ID pushPilaOp ARREGLOCALL
    (87) VARCTE -> . C_INT pushConstInt
    (88) VARCTE -> . C_FLOAT pushConstFloat
    (89) VARCTE -> . C_CHAR pushConstChar
    (82) LLAMADAMOD -> . ID pushEra LPAREN pushParen LLAMADAMODS
    (83) LLAMADAMOD -> . ID pushEra LPAREN pushParen RPAREN pushGosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 121
    C_INT           shift and go to state 122
    C_FLOAT         shift and go to state 123
    C_CHAR          shift and go to state 124

    EXP                            shift and go to state 350
    TERMINO                        shift and go to state 116
    FACTOR                         shift and go to state 117
    VARCTE                         shift and go to state 119
    LLAMADAMOD                     shift and go to state 120

state 346

    (60) SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .

    RBRACKET        reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    ID              reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    RETURN          reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    READ            reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    WRITE           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    IF              reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    WHILE           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    FROM            reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    LINE            reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    POINT           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    CIRCLE          reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    ARC             reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    PENUP           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    PENDOWN         reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    COLOR           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    SIZE            reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)
    CLEAR           reduce using rule 60 (SINO -> ELSE rellenarFalso BLOQUE rellenarSalida .)


state 347

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE . rellenaFrom
    (161) rellenaFrom -> .

    RBRACKET        reduce using rule 161 (rellenaFrom -> .)
    ID              reduce using rule 161 (rellenaFrom -> .)
    RETURN          reduce using rule 161 (rellenaFrom -> .)
    READ            reduce using rule 161 (rellenaFrom -> .)
    WRITE           reduce using rule 161 (rellenaFrom -> .)
    IF              reduce using rule 161 (rellenaFrom -> .)
    WHILE           reduce using rule 161 (rellenaFrom -> .)
    FROM            reduce using rule 161 (rellenaFrom -> .)
    LINE            reduce using rule 161 (rellenaFrom -> .)
    POINT           reduce using rule 161 (rellenaFrom -> .)
    CIRCLE          reduce using rule 161 (rellenaFrom -> .)
    ARC             reduce using rule 161 (rellenaFrom -> .)
    PENUP           reduce using rule 161 (rellenaFrom -> .)
    PENDOWN         reduce using rule 161 (rellenaFrom -> .)
    COLOR           reduce using rule 161 (rellenaFrom -> .)
    SIZE            reduce using rule 161 (rellenaFrom -> .)
    CLEAR           reduce using rule 161 (rellenaFrom -> .)

    rellenaFrom                    shift and go to state 351

state 348

    (16) ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo . popParen
    (133) popParen -> .

    COMMA           reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 352

state 349

    (84) LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .

    MULTIPLY        reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    DIVIDE          reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    PLUS            reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    MINUS           reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    RSBRACKET       reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    GREATER_THAN    reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    LESS_THAN       reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    NOT_EQUAL       reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    AND             reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    OR              reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    IS_EQUAL        reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    RPAREN          reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    COMMA           reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    TO              reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    SEMICOLON       reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)
    DO              reduce using rule 84 (LLAMADAMODS -> EXPRESION addParam RPAREN popParen verifyParams pushGosub .)


state 350

    (20) ARREGLOC2 -> LSBRACKET pushParen EXP . RSBRACKET popParen verifyDim calculateDir

    RSBRACKET       shift and go to state 353


state 351

    (65) NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .

    RBRACKET        reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    ID              reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    RETURN          reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    READ            reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    WRITE           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    IF              reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    WHILE           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    FROM            reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    LINE            reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    POINT           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    CIRCLE          reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    ARC             reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    PENUP           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    PENDOWN         reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    COLOR           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    SIZE            reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)
    CLEAR           reduce using rule 65 (NOCOND -> FROM ID pushFromId EQUALS EXPRESION pushVC TO EXPRESION pushVF DO BLOQUE rellenaFrom .)


state 352

    (16) ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen .

    COMMA           reduce using rule 16 (ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen .)
    SEMICOLON       reduce using rule 16 (ARREGLO2 -> LSBRACKET pushParen EXP RSBRACKET pushDim addArreglo popParen .)


state 353

    (20) ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET . popParen verifyDim calculateDir
    (133) popParen -> .

    EQUALS          reduce using rule 133 (popParen -> .)
    MULTIPLY        reduce using rule 133 (popParen -> .)
    DIVIDE          reduce using rule 133 (popParen -> .)
    PLUS            reduce using rule 133 (popParen -> .)
    MINUS           reduce using rule 133 (popParen -> .)
    RSBRACKET       reduce using rule 133 (popParen -> .)
    GREATER_THAN    reduce using rule 133 (popParen -> .)
    LESS_THAN       reduce using rule 133 (popParen -> .)
    NOT_EQUAL       reduce using rule 133 (popParen -> .)
    AND             reduce using rule 133 (popParen -> .)
    OR              reduce using rule 133 (popParen -> .)
    IS_EQUAL        reduce using rule 133 (popParen -> .)
    RPAREN          reduce using rule 133 (popParen -> .)
    COMMA           reduce using rule 133 (popParen -> .)
    TO              reduce using rule 133 (popParen -> .)
    SEMICOLON       reduce using rule 133 (popParen -> .)
    DO              reduce using rule 133 (popParen -> .)

    popParen                       shift and go to state 354

state 354

    (20) ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen . verifyDim calculateDir
    (165) verifyDim -> .

    EQUALS          reduce using rule 165 (verifyDim -> .)
    MULTIPLY        reduce using rule 165 (verifyDim -> .)
    DIVIDE          reduce using rule 165 (verifyDim -> .)
    PLUS            reduce using rule 165 (verifyDim -> .)
    MINUS           reduce using rule 165 (verifyDim -> .)
    RSBRACKET       reduce using rule 165 (verifyDim -> .)
    GREATER_THAN    reduce using rule 165 (verifyDim -> .)
    LESS_THAN       reduce using rule 165 (verifyDim -> .)
    NOT_EQUAL       reduce using rule 165 (verifyDim -> .)
    AND             reduce using rule 165 (verifyDim -> .)
    OR              reduce using rule 165 (verifyDim -> .)
    IS_EQUAL        reduce using rule 165 (verifyDim -> .)
    RPAREN          reduce using rule 165 (verifyDim -> .)
    COMMA           reduce using rule 165 (verifyDim -> .)
    TO              reduce using rule 165 (verifyDim -> .)
    SEMICOLON       reduce using rule 165 (verifyDim -> .)
    DO              reduce using rule 165 (verifyDim -> .)

    verifyDim                      shift and go to state 355

state 355

    (20) ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim . calculateDir
    (166) calculateDir -> .

    EQUALS          reduce using rule 166 (calculateDir -> .)
    MULTIPLY        reduce using rule 166 (calculateDir -> .)
    DIVIDE          reduce using rule 166 (calculateDir -> .)
    PLUS            reduce using rule 166 (calculateDir -> .)
    MINUS           reduce using rule 166 (calculateDir -> .)
    RSBRACKET       reduce using rule 166 (calculateDir -> .)
    GREATER_THAN    reduce using rule 166 (calculateDir -> .)
    LESS_THAN       reduce using rule 166 (calculateDir -> .)
    NOT_EQUAL       reduce using rule 166 (calculateDir -> .)
    AND             reduce using rule 166 (calculateDir -> .)
    OR              reduce using rule 166 (calculateDir -> .)
    IS_EQUAL        reduce using rule 166 (calculateDir -> .)
    RPAREN          reduce using rule 166 (calculateDir -> .)
    COMMA           reduce using rule 166 (calculateDir -> .)
    TO              reduce using rule 166 (calculateDir -> .)
    SEMICOLON       reduce using rule 166 (calculateDir -> .)
    DO              reduce using rule 166 (calculateDir -> .)

    calculateDir                   shift and go to state 356

state 356

    (20) ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .

    EQUALS          reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    MULTIPLY        reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    DIVIDE          reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    PLUS            reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    MINUS           reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    RSBRACKET       reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    GREATER_THAN    reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    LESS_THAN       reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    NOT_EQUAL       reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    AND             reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    OR              reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    IS_EQUAL        reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    RPAREN          reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    COMMA           reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    TO              reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    SEMICOLON       reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)
    DO              reduce using rule 20 (ARREGLOC2 -> LSBRACKET pushParen EXP RSBRACKET popParen verifyDim calculateDir .)

